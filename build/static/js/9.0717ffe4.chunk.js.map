{"version":3,"sources":["components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/HarvestButton.tsx","utils/metamaskUtils.ts","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/components/Coming.tsx","views/Bush/Bush.tsx","hooks/useContract.ts","utils/formatBalance.ts","hooks/useWeb3.ts","components/UnlockButton.tsx","utils/callHelpers.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","hooks/useApprove.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/Tags.tsx","hooks/useBlock.ts","components/layout/Flex.tsx"],"names":["StyledLabel","styled","div","isFinished","theme","colors","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","value","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","StyledMaxText","props","primary","TokenInput","max","symbol","onChange","onSelectMax","depositFeeBP","TranslateString","useI18n","justifyContent","minHeight","mb","toLocaleString","alignItems","placeholder","BigNumber","times","toString","textTransform","mx","scale","onClick","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","useCallback","e","currentTarget","handleSelectMax","title","ModalActions","width","variant","disabled","a","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","Card","card","background","isActive","StyledButton","button","size","padding","undefined","StyledLink","Link","spacing","StyledExternalLink","Button","buttonSize","buttonPadding","children","href","to","useContext","ThemeContext","buttonColor","ButtonChild","target","boxShadow","registerToken","tokenAddress","tokenSymbol","tokenDecimals","tokenImage","window","ethereum","request","method","params","type","options","address","image","tokenAdded","tags","PoolCategory","BINANCE","BinanceTag","CORE","CoreTag","COMMUNITY","CommunityTag","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","imageSrc","BASE_URL","toLowerCase","style","marginBottom","src","alt","height","getBalanceNumber","ml","React","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","sousId","tokenLabel","stakingTokenName","stakingTokenAddress","stakingTokenDecimals","harvest","apy","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","account","useWeb3React","block","useBlock","onApprove","useSousApprove","onStake","useSousStake","onUnstake","useSousUnstake","onReward","useSousHarvest","usePoolFromPid","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","isOldSyrup","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","isOldFinishedBush","convertedLimit","multipliedBy","pow","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","console","error","className","display","flex","HarvestButton","UnlockButton","isBush","eq","data-tip","data-for","icon","faQuestionCircle","backgroundColor","depositFee","borderRadius","effect","place","isNaN","isFinite","PoolTabButtons","stackedOnly","setStackedOnly","useRouteMatch","url","isExact","Wrapper","ToggleWrapper","checked","activeIndex","as","textSubtle","DetailPlaceholder","Value","Footer","Coming","role","aria-label","external","Bush","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","ethPriceBnb","usePriceEthBnb","poolsWithApy","map","rewardTokenFarm","find","f","stakingTokenFarm","s","tempMultiplier","quoteTokenSymbol","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","tokenPerBlock","BLOCKS_PER_YEAR","totalStakingTokenInPool","toJSON","partition","finishedPools","openPools","stackedOnlyPools","filter","Header","gradients","bubblegum","mediaQueries","sm","AddressLink","marginTop","Divider","Flex","exact","orderBy","useIfoContract","web3","useWeb3","getIfoContract","getBep20Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","usePancakeRabbits","getPancakeRabbitContract","useProfile","getProfileContract","useLottery","getLotteryContract","useLotteryTicket","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","balance","displayBalance","dividedBy","toFixed","library","refEth","Web3","getWeb3NoAccount","setweb3","useAuth","login","logout","onPresentConnectModal","useWalletModal","approve","lpContract","masterChefContract","methods","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","soushHarvest","soushHarvestBnb","StyledSpacer","Spacer","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","length","child","i","useHarvest","farmPid","dispatch","useDispatch","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","isUsingBnb","handleHarvest","updateUserPendingReward","updateUserBalance","useApprove","updateUserAllowance","useLotteryApprove","cakeContract","lotteryContract","handleStake","updateUserStakedBalance","useStake","info","SYRUPIDS","includes","useUnstake","outline","startIcon","DualTag","BlockContext","FlexLayout"],"mappings":"sZAYMA,EAAcC,IAAOC,IAAV,+DACN,gBAAGC,EAAH,EAAGA,WAAH,SAAeC,MAAkBC,OAAOF,EAAa,eAAiB,cAIlEG,EATqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASJ,kBAAT,gBAClC,cAACH,EAAD,CAAaG,WAAYA,EAAzB,SAAsCI,K,+DCQlCC,EAAaP,YAAOQ,KAAPR,CAAH,2CACL,gBAAGS,EAAH,EAAGA,WAAYC,EAAf,EAAeA,MAAOP,EAAtB,EAAsBA,MAAtB,OAAmCM,EAAaN,EAAMC,OAAOO,aAAeD,KAGjFE,EAAkC,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,SAAUJ,EAAwC,EAAxCA,MAAOK,EAAiC,EAAjCA,SAAUN,EAAuB,EAAvBA,WAAYO,EAAW,EAAXA,KACjFC,EAAgBC,iBAAO,GAM7B,OAJAC,qBAAU,WACRF,EAAcG,QAAUP,IACvB,CAACA,IAGF,eAACN,EAAD,CAAYc,MAAI,EAACX,MAAOA,EAAOI,SAAUA,EAAUL,WAAYA,EAA/D,UACE,cAAC,IAAD,CAASa,MAAOL,EAAcG,QAASG,IAAKV,EAAOE,SAAUA,EAAUS,SAAU,EAAGC,UAAU,MAC7FZ,GAASG,GAAQ,+BAAOA,QAK/BJ,EAAQc,aAAe,CACrBZ,SAAU,OACVL,YAAY,EACZC,MAAO,OACPK,SAAU,GAGGH,I,+EAAAA,K,mDC5BTe,GAAgB3B,IAAOC,IAAV,6KAER,SAAC2B,GAAD,OAAWA,EAAMzB,MAAMC,OAAOyB,WAyC1BC,GAjC+B,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,IAAKC,EAAyD,EAAzDA,OAAQC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,YAAarB,EAA0B,EAA1BA,MAAOsB,EAAmB,EAAnBA,aACpFC,EAAkBC,cAExB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,eAAe,WAAWC,UAAU,OAAOC,GAAG,MAApD,SACE,eAAC,KAAD,CAAM9B,MAAM,UAAUI,SAAS,OAA/B,UACGiB,EAAIU,iBADP,IAC0BT,EAD1B,IACmCI,EAAgB,IAAK,kBAG1D,eAAC,IAAD,CAAMM,WAAW,SAAjB,UACE,cAAC,IAAD,CAAOT,SAAUA,EAAUU,YAAY,IAAI9B,MAAOA,IACjDsB,EAAe,EACd,eAACR,GAAD,WACGS,EAAgB,MAAO,eAD1B,KAC4C,IAAIQ,KAAU/B,GAAS,GAAGgC,MAAMV,EAAe,KAAOW,WAAY,IAC3Gd,KAED,KACJ,eAAC,IAAD,CAAMU,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMrB,MAAI,EAACX,MAAM,UAAUqC,cAAc,YAAYC,GAAG,MAAxD,SACGhB,IAEH,8BACE,cAAC,IAAD,CAAQiB,MAAM,KAAKC,QAAShB,EAA5B,SACGE,EAAgB,IAAK,qBCerBe,GAjDmC,SAAC,GAAmD,IAAjDpB,EAAgD,EAAhDA,IAAKqB,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAgC,IAArBC,iBAAqB,MAAT,GAAS,EACnG,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMvB,EAAkBC,cAClBuB,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsB/B,KAC5B,CAACA,IAEEgC,EAAeC,uBACnB,SAACC,GACCR,EAAOQ,EAAEC,cAAcrD,SAEzB,CAAC4C,IAGGU,EAAkBH,uBAAY,WAClCP,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOW,MAAK,UAAKhC,EAAgB,IAAK,WAA1B,YAAwCkB,EAAxC,WAA4DD,UAAWA,EAAnF,UACE,cAAC,GAAD,CACExC,MAAO2C,EACPtB,YAAaiC,EACblC,SAAU8B,EACVhC,IAAK6B,EACL5B,OAAQsB,IAEV,eAACe,GAAA,EAAD,WACE,cAAC,IAAD,CAAQC,MAAM,OAAOC,QAAQ,YAAYrB,QAASG,EAAlD,SACGjB,EAAgB,IAAK,YAExB,cAAC,IAAD,CACEkC,MAAM,OACNE,SAAUd,EACVR,QAAO,sBAAE,sBAAAuB,EAAA,6DACPd,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAHX,SAUGK,EAAYtB,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBCM5EsC,GAhDqC,SAAC,GAAmD,IAAjDtB,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWtB,EAA0B,EAA1BA,IAA0B,IAArBuB,iBAAqB,MAAT,GAAS,EACrG,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMvB,EAAkBC,cAClBuB,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsB/B,KAC5B,CAACA,IAEEgC,EAAeC,uBACnB,SAACC,GACCR,EAAOQ,EAAEC,cAAcrD,SAEzB,CAAC4C,IAGGU,EAAkBH,uBAAY,WAClCP,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOW,MAAK,mBAAcd,GAAaD,UAAWA,EAAlD,UACE,cAAC,GAAD,CACEnB,YAAaiC,EACblC,SAAU8B,EACVlD,MAAO2C,EACPzB,IAAK6B,EACL5B,OAAQsB,IAEV,eAACe,GAAA,EAAD,WACE,cAAC,IAAD,CAAQE,QAAQ,YAAYrB,QAASG,EAArC,SACGjB,EAAgB,IAAK,YAExB,cAAC,IAAD,CACEoC,SAAUd,EACVR,QAAO,sBAAE,sBAAAuB,EAAA,6DACPd,GAAa,GADN,SAEDP,EAAUI,GAFT,OAGPG,GAAa,GACbN,IAJO,2CAFX,SASGK,EAAYtB,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBCH5EuC,GArCoC,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUxB,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,UAAgC,IAArBC,iBAAqB,MAAT,GAAS,EACzG,EAAkCC,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMvB,EAAkBC,cAClBuB,EAAcC,mBAAQ,WAC1B,OAAOC,YAAsBc,KAC5B,CAACA,IAEJ,OACE,eAAC,IAAD,CACER,MAAK,UAAKhC,EAAgB,IAAK,YAA1B,YAAyCA,EAAgB,IAAD,UAASkB,EAAT,aAC7DD,UAAWA,EAFb,UAIE,cAACwB,GAAD,UACE,cAAC,GAAD,CAAShE,MAAOiE,OAAOlB,OAEzB,eAACS,GAAA,EAAD,WACE,cAAC,IAAD,CAAQC,MAAM,OAAOC,QAAQ,YAAYrB,QAASG,EAAlD,SACGjB,EAAgB,IAAK,YAExB,cAAC,IAAD,CACE2C,GAAG,gBACHT,MAAM,OACNE,SAAUd,EACVR,QAAO,sBAAE,sBAAAuB,EAAA,6DACPd,GAAa,GADN,SAEDP,EAAUQ,GAFT,OAGPD,GAAa,GACbN,IAJO,2CAJX,SAWGK,EAAYtB,EAAgB,IAAK,wBAA0BA,EAAgB,IAAK,oBASrFyC,GAAa7E,IAAOC,IAAV,0HCzCD+E,GARGhF,IAAOC,IAAV,iIACJ,gBAAGC,EAAH,EAAGA,WAAH,SAAeC,MAAkBC,OAAOF,EAAa,eAAiB,WCSlE+E,GAdFjF,IAAOC,IAAV,2QACM,SAAC2B,GAAD,OAAWA,EAAMzB,MAAM+E,KAAKC,cAIjC,gBAAGjF,EAAH,EAAGA,WAAH,SAAeC,MAAkBC,OAAOF,EAAa,eAAiB,gBACjE,qBAAGkF,SAEX,oEACA,iF,SCsEFC,GAAerF,IAAOsF,OAAV,ucAEF,SAAC1D,GAAD,OAAaA,EAAM4C,SAAP,OAAkB5C,EAAMzB,MAAM+E,KAAKC,cAGpD,SAACvD,GAAD,OAAaA,EAAM4C,SAAP,uBAGR,SAAC5C,GAAD,OAAWA,EAAMd,YAEpB,SAACc,GAAD,OAAWA,EAAM2D,QAGX,SAAC3D,GAAD,OAAWA,EAAM4D,WAChB,SAAC5D,GAAD,OAAWA,EAAM4D,WAChB,SAAC5D,GAAD,OAAaA,EAAM4C,SAAuB,YAAZiB,KAE5B,SAAC7D,GAAD,OAAaA,EAAM4C,SAAP,oBAO5BkB,GAAa1F,YAAO2F,KAAP3F,CAAH,qNAOF,SAAC4B,GAAD,OAAYA,EAAMzB,MAAMyF,QAAQ,MAC/B,SAAChE,GAAD,OAAWA,EAAMzB,MAAMyF,QAAQ,MAIxCC,GAAqB7F,IAAOyE,EAAV,qNAOV,SAAC7C,GAAD,OAAYA,EAAMzB,MAAMyF,QAAQ,MAC/B,SAAChE,GAAD,OAAWA,EAAMzB,MAAMyF,QAAQ,MAI/BE,GAjHuB,SAAC,GAA2D,IAK5FC,EACAC,EACAlF,EAPmCmF,EAAwD,EAAxDA,SAAUzB,EAA8C,EAA9CA,SAAU0B,EAAoC,EAApCA,KAAMhD,EAA8B,EAA9BA,QAASqC,EAAqB,EAArBA,KAAMjF,EAAe,EAAfA,KAAM6F,EAAS,EAATA,GACtF,EAA4BC,qBAAWC,KAA/BjG,EAAR,EAAQA,OAAQwF,EAAhB,EAAgBA,QACVU,EAAclG,EAAO+E,WAM3B,OAAQI,GACN,IAAK,KACHS,EAAgBJ,EAAQ,GACxBG,EAAa,GACbjF,EAAW,GACX,MACF,IAAK,KACHkF,EAAgBJ,EAAQ,GACxBG,EAAa,GACbjF,EAAW,GACX,MACF,IAAK,KACL,QACEkF,EAAgBJ,EAAQ,GACxBG,EAAa,GACbjF,EAAW,GAGf,IAAMyF,EAAc1C,mBAAQ,WAC1B,OAAIsC,EACK,cAACT,GAAD,CAAYS,GAAIA,EAAhB,SAAqB7F,IAE1B4F,EAEA,cAACL,GAAD,CAAoBK,KAAMA,EAAMM,OAAO,UAAvC,SACGlG,IAIAA,IACN,CAAC4F,EAAM5F,EAAM6F,IAEhB,OACE,eAACd,GAAD,CACEoB,UAtCAA,UAuCA/F,MAAO4F,EACP9B,SAAUA,EACV1D,SAAUA,EACVoC,QAASA,EACTsC,QAASQ,EACTT,KAAMQ,EAPR,UASGE,EACAM,M,yCClDQG,GAjBI,uCAAG,WAAOC,EAAsBC,EAAqBC,EAAuBC,GAAzE,eAAArC,EAAA,sEACMsC,OAAuBC,SAASC,QAAQ,CAChEC,OAAQ,oBACRC,OAAQ,CACNC,KAAM,QACNC,QAAS,CACPC,QAASX,EACT3E,OAAQ4E,EACR7F,SAAU8F,EACVU,MAAOT,MATO,cACdU,EADc,yBAcbA,GAda,2CAAH,4DCabC,IAAI,oBACPC,IAAaC,QAAUC,MADhB,eAEPF,IAAaG,KAAOC,MAFb,eAGPJ,IAAaK,UAAYC,MAHlB,GAmBJC,GAAejI,IAAOC,IAAV,2FACQ,qBAAGE,MAAmB+H,OAAS,UAAY,aAC1D,gBAAGhI,EAAH,EAAGA,WAAH,SAAeC,MAAkBC,OAAOF,EAAa,gBAAkB,eAI5EiI,GAAsBnI,IAAOsF,OAAV,oWAId,SAAC1D,GAAD,OAAWA,EAAMzB,MAAMC,OAAOyB,WAkBnCuG,GAAUpI,IAAOC,IAAV,iDAIPoI,GAAMrI,IAAOC,IAAV,wEAKHqI,GAAWtI,IAAOC,IAAV,0CAGRI,GAAQL,IAAOC,IAAV,kDAGLsI,GAAYvI,IAAOyE,EAAV,+GAGJ,SAAC7C,GAAD,OAAWA,EAAMzB,MAAMC,OAAOyB,WAInC2G,GAA8B,SAAC,GAW9B,IAVLC,EAUI,EAVJA,YAEA9B,GAQI,EATJ5F,SASI,EARJ4F,cACA+B,EAOI,EAPJA,YACApF,EAMI,EANJA,UACAuD,EAKI,EALJA,cACA8B,EAII,EAJJA,gBACAzI,EAGI,EAHJA,WACA0I,EAEI,EAFJA,iBACAC,EACI,EADJA,aAEA,EAA4BtF,oBAAS,GAArC,mBAAOuF,EAAP,KAAeC,EAAf,KACM3G,EAAkBC,cAClB2G,EAAOF,EAASG,KAAYC,KAG5BC,EAAM1B,GAAKoB,GAEXO,EAAQ,UAAMC,IAAN,yBAA+B/F,EAAUgG,cAAzC,QAEd,OACE,eAACrB,GAAD,CAAc/H,WAAYA,EAA1B,UACE,eAACmI,GAAD,WACE,cAACC,GAAD,UACE,cAACa,EAAD,MAEF,eAAChB,GAAD,CAAqBjF,QAXP,kBAAM6F,GAAWD,IAW/B,UACGA,EAAS1G,EAAgB,KAAM,QAAUA,EAAgB,IAAK,WADjE,IAC6E,cAAC4G,EAAD,UAG9EF,GACC,eAACV,GAAD,WACE,eAACC,GAAD,CAAKkB,MAAO,CAAEC,aAAc,OAA5B,UACE,cAAClB,GAAD,UACE,eAAC,GAAD,WACE,qBAAKmB,IAAI,wBAAwBC,IAAI,YAAYpF,MAAM,KAAKqF,OAAO,OAAQ,IAC1EvH,EAAgB,IAAK,cAG1B,cAAC,GAAD,CAAStB,SAAS,OAAOL,WAAYP,EAAYW,MAAO+I,YAAiBlB,QAErD,IAArBE,GAA0BD,EAAkB,GAC3C,eAACN,GAAD,WACE,cAACC,GAAD,UACE,eAAC,GAAD,qBAAUlG,EAAgB,IAAK,oBAA/B,SAEF,cAAC,GAAD,CAAStB,SAAS,OAAOL,WAAYP,EAAYW,MAAO8H,EAAiB5H,SAAU,OAGvF,eAACsH,GAAD,WACE,eAACE,GAAD,CAAWrF,QAAS,kBAAMwD,GAAcC,EAAcrD,EAAWuD,EAAeuC,IAAhF,iBACO9F,EADP,kBAGA,cAAC,IAAD,CAAcqG,OAAQ,GAAIrF,MAAO,GAAIuF,GAAG,WAE1C,cAACxB,GAAD,UACE,cAACE,GAAD,CAAWrC,KAAMuC,EAAajC,OAAO,SAArC,SACGpE,EAAgB,IAAK,gCASrB0H,OAAMC,KAAKvB,IC2GpBwB,GAAmBhK,IAAOC,IAAV,yPAWhBgK,GAAoBjK,IAAOC,IAAV,0IAQjBiK,GAAqBlK,IAAOC,IAAV,mIAOlBkK,GAAqBnK,IAAOC,IAAV,iEACZ,SAAC2B,GAAD,OAAWA,EAAMzB,MAAMyF,QAAQ,MAChC,SAAChE,GAAD,OAAWA,EAAMzB,MAAMyF,QAAQ,MAGpCwE,GAAgBpK,IAAOC,IAAV,oEAKJoK,GA7P0B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAkBED,EAlBFC,OACAhD,EAiBE+C,EAjBF/C,MACAjE,EAgBEgH,EAhBFhH,UACAkH,EAeEF,EAfFE,WACAC,EAcEH,EAdFG,iBACAC,EAaEJ,EAbFI,oBACAC,EAYEL,EAZFK,qBACAlC,EAWE6B,EAXF7B,YACAmC,EAUEN,EAVFM,QACAC,EASEP,EATFO,IACAhE,EAQEyD,EARFzD,cACAgC,EAOEyB,EAPFzB,aACAH,EAME4B,EANF5B,YACAoC,EAKER,EALFQ,WACAC,EAIET,EAJFS,SACA7K,EAGEoK,EAHFpK,WACA8K,EAEEV,EAFFU,SACAC,EACEX,EADFW,aAGIC,EAAYrC,IAAiBnB,IAAaC,QAC1CvF,EAAkBC,cAClB8I,EAAuBC,YAASV,GAC9BW,EAAYC,cAAZD,QACFE,EAAQC,cACNC,EAAcC,YAAeP,EAAsBZ,GAAnDkB,UACAE,EAAYC,YAAarB,EAAQW,GAAjCS,QACAE,EAAcC,YAAevB,GAA7BsB,UACAE,EAAaC,YAAezB,EAAQW,GAApCa,SAGR,GAFaE,YAAe1B,GAEsBhH,oBAAS,IAA3D,mBAAO2I,EAAP,KAA0BC,EAA1B,KACA,EAAkC5I,oBAAS,GAA3C,oBAAOG,GAAP,MAAkBC,GAAlB,MAEMyI,GAAY,IAAIxJ,KAAkB,OAARoI,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,YAAa,GACjDC,GAAsB,IAAIzJ,KAAkB,OAARoI,QAAQ,IAARA,OAAA,EAAAA,EAAUqB,sBAAuB,GACrEC,GAAgB,IAAI1J,KAAkB,OAARoI,QAAQ,IAARA,OAAA,EAAAA,EAAUsB,gBAAiB,GACzD1H,GAAW,IAAIhC,KAAkB,OAARoI,QAAQ,IAARA,OAAA,EAAAA,EAAUuB,gBAAiB,GAEpD3D,GAAmB4D,KAAKzK,IAAI+I,EAAaS,EAAO,GAChD5C,GAAkB6D,KAAKzK,IAAIgJ,EAAWQ,EAAO,GAC7CkB,GAAahC,IAAqBiC,IAAWC,MAC7CC,IAAuC,OAAbN,SAAa,IAAbA,QAAA,EAAAA,GAAeO,YAAa,EACtDC,IAAiBF,KAA4BR,GAAUS,aAAe3B,EACtE6B,GAAe7M,GAAc0M,GAC7BI,GAA+B,KAAXzC,EAEpB0C,GAAiB,IAAIrK,IAAUqI,GAAciC,aAAa,IAAItK,IAAU,IAAIuK,IAAItG,IACtF,GAA2BuG,aACzB,cAAC,GAAD,CACErL,IAAKkJ,GAAgBoB,GAAoBgB,cAAcJ,IAAkBA,GAAiBZ,GAC1FjJ,UAAWuI,EACXrI,UAAW2H,EAAY,UAAMR,EAAN,aAA2BQ,EAA3B,SAAiDR,KAJrE6C,GAAP,qBAQA,GAA4BF,aAC1B,cAAC,GAAD,CAAexI,SAAUA,GAAUxB,UAAWuI,EAASrI,UAAWmH,KAD7D8C,GAAP,qBAIA,GAA4BH,aAC1B,cAAC,GAAD,CAAerL,IAAKuK,GAAelJ,UAAWyI,EAAWvI,UAAWmH,KAD/D+C,GAAP,qBAIMC,GAAgBzJ,sBAAW,sBAAC,sBAAAS,EAAA,sEAE9B0H,GAAqB,GAFS,SAGTV,IAHS,eAM5BU,GAAqB,GANO,gDAS9BuB,QAAQC,MAAR,MAT8B,yDAW/B,CAAClC,EAAWU,IAEf,OACE,eAAC,GAAD,CAAMyB,UAAU,WAAWxI,SAAU2H,GAAc7M,WAAYA,GAAyB,IAAXqK,EAA7E,UACGrK,GAAyB,IAAXqK,GAAgB,cAACP,GAAD,IAC/B,sBAAKT,MAAO,CAAE/D,QAAS,QAAvB,UACE,eAAC,GAAD,CAAWtF,WAAYA,GAAyB,IAAXqK,EAArC,UACGkC,IAAc,QADjB,IAC2BjC,EAD3B,IACwCpI,EAAgB,IAAK,WAE7D,sBAAKmH,MAAO,CAAEC,aAAc,MAAOqE,QAAS,OAAQnL,WAAY,UAAhE,UACE,qBAAK6G,MAAO,CAAEuE,KAAM,GAApB,SACE,cAAC,IAAD,CAAOrE,IAAG,yBAAoBlC,GAASjE,EAA7B,QAA8CgB,MAAO,GAAIqF,OAAQ,GAAID,IAAKpG,OAEpF0J,IAAqB3B,GAAWT,IAAY6B,IAC5C,cAACsB,GAAD,CACEvJ,UAAWI,GAASiI,YAAcnJ,GAClCpD,KAAMoD,GAAY,aAAe,UACjCR,QAAO,sBAAE,sBAAAuB,EAAA,6DACPd,IAAa,GADN,SAEDoI,IAFC,OAGPpI,IAAa,GAHN,gDAQbqJ,IAAsBP,GAYtB,oCAXA,eAACvC,GAAD,WACE,cAAC,GAAD,CAASrJ,MAAO+I,YAAiBhF,GAAUiC,GAAgBpG,WAAYP,IAC3D,IAAXqK,GAAgBc,GAAWT,GAC1B,cAACmD,GAAD,CACEvJ,UAAWI,GAASiI,YAAcnJ,GAClCpD,KAAMoD,GAAYtB,EAAgB,IAAK,eAAiBA,EAAgB,IAAK,YAC7Ec,QAASqK,QAOjB,cAAC,EAAD,CAAOrN,WAAYA,GAAyB,IAAXqK,EAAcjK,KAAM8B,EAAgB,IAAD,UAASkB,EAAT,cACpE,eAAC2G,GAAD,YACIoB,GAAW,cAAC2C,EAAA,EAAD,IACZ3C,IACEyB,KAAkBL,GACjB,qBAAKlD,MAAO,CAAEuE,KAAM,GAApB,SACE,cAAC,IAAD,CAAQtJ,SAAUtE,GAAcgM,EAAmBhJ,QAASuK,GAAenJ,MAAM,OAAjF,UACoB,KAAb,OAAJgG,QAAI,IAAJA,OAAA,EAAAA,EAAM2D,QACL,+BAAO7L,EAAgB,IAAK,uBAE5B,iDAAkBqI,SAKxB,qCACE,cAAC,IAAD,CACEjG,SAAU8H,GAAc4B,GAAG,IAAItL,IAAU,KAAOc,GAChDR,QACEuJ,GAAU,sBACN,sBAAAhI,EAAA,6DACEd,IAAa,GADf,SAEQkI,EAAU,KAFlB,OAGElI,IAAa,GAHf,2CAKA6J,GATR,2BAYc/C,KAEd,cAACN,GAAD,KACEsC,IACA,cAAC,IAAD,CAAYjI,SAAUtE,GAAyB,IAAXqK,EAAcrH,QAASoK,GAA3D,SACE,cAAC,IAAD,CAAS5M,MAAM,wBAO3B,eAAC0J,GAAD,WACE,sBAAKb,MAAO,CAAEuE,KAAM,GAApB,UACG1L,EAAgB,MAAO,eAAgB,IACxC,sBAAM+L,YAAA,EAASC,WAAS,oBAAxB,SACE,cAAC,KAAD,CAAiBC,KAAMC,SACjB,IAJV,OAOA,eAAC,KAAD,CACEjN,MAAI,EACJkI,MAAO,CACLgF,gBAAqC,IAApBjE,EAAKkE,WAAmB,UAAY,cACrD9N,MAA2B,IAApB4J,EAAKkE,WAAmB,QAAU,UACzChJ,QAA6B,IAApB8E,EAAKkE,WAAmB,UAAY,UAC7CC,aAAkC,IAApBnE,EAAKkE,WAAmB,OAAS,WANnD,UASGlE,EAAKkE,WAAa,IATrB,OAWA,cAAC,KAAD,CAAczJ,GAAG,oBAAoB2J,OAAO,QAAQC,MAAM,QAA1D,SACE,+BAAOvM,EAAgB,IAAK,2DAGhC,eAACgI,GAAD,WACE,sBAAKb,MAAO,CAAEuE,KAAM,GAApB,UAA0B1L,EAAgB,IAAK,OAA/C,OACClC,GAAcuM,KAAe5B,IAA7B,OAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAK+D,YAAW,OAAC/D,QAAD,IAACA,OAAD,EAACA,EAAKgE,YACzD,IAEA,cAAC,GAAD,CAAS/N,SAAS,OAAOL,WAAYP,EAAYW,MAAK,OAAEgK,QAAF,IAAEA,OAAF,EAAEA,EAAKgC,WAAY9L,SAAU,EAAGC,KAAK,SAG/F,eAACoJ,GAAD,WACE,sBAAKb,MAAO,CAAEuE,KAAM,GAApB,UACE,qBAAKrE,IAAI,wBAAwBC,IAAI,YAAYpF,MAAM,KAAKqF,OAAO,OAAQ,IAC1EvH,EAAgB,IAAK,cAFxB,OAIA,cAAC,GAAD,CAAStB,SAAS,OAAOL,WAAYP,EAAYW,MAAO+I,YAAiB0C,SAE1E1D,GAAmB,GAClB,eAACwB,GAAD,WACE,sBAAKb,MAAO,CAAEuE,KAAM,GAApB,oBAA4B1L,EAAgB,IAAK,sBAAjD,OACA,cAAC,GAAD,CAAStB,SAAS,OAAOL,WAAYP,EAAYW,MAAO+H,GAAkB7H,SAAU,UAI1F,cAAC,GAAD,CACE0H,YAAaA,EACb1H,SAAU8F,EACV6B,YAAaA,EACbC,gBAAiBA,GACjBzI,WAAYA,EACZ0I,iBAAkBA,GAClBC,aAAcA,EACdvF,UAAWmH,EACX9D,aAAc+D,EACd7D,cAAe8D,QC9NRmE,GAtBQ,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACrC,EAAyBC,cAAjBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,QACP/M,EAAkBC,cAExB,OACE,eAAC+M,GAAD,WACE,eAACC,GAAD,WACE,cAAC,KAAD,CAAQC,QAASP,EAAa9M,SAAU,kBAAM+M,GAAgBD,MAC9D,eAAC,KAAD,eAAQ3M,EAAgB,IAAK,qBAE/B,eAAC,IAAD,CAAYmN,YAAaJ,EAAU,EAAI,EAAGlM,MAAM,KAAKsB,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgBiL,GAAI7J,KAAMQ,GAAE,UAAK+I,GAAjC,SACG9M,EAAgB,IAAK,YAExB,cAAC,IAAD,CAAgBoN,GAAI7J,KAAMQ,GAAE,UAAK+I,EAAL,YAA5B,SACG9M,EAAgB,IAAK,qBAS1BgN,GAAUpP,IAAOC,IAAV,4HAOPoP,GAAgBrP,IAAOC,IAAV,iKAMfO,MCzCWR,OAAOC,IAAtB,gHACsB,qBAAGE,MAAkBC,OAAOqP,cCK5C7O,GAAUZ,IAAOC,IAAV,sFACF,qBAAGE,MAAkBC,OAAOE,QAKjCD,GAAQL,IAAOC,IAAV,yFACA,qBAAGE,MAAkBC,OAAOqP,cAKjCC,GAAoB1P,IAAOC,IAAV,oEAIjB0P,GAAQ3P,IAAOC,IAAV,iEACA,qBAAGE,MAAkBC,OAAOE,QAIjCsP,GAAS5P,IAAOC,IAAV,8EACc,qBAAGE,MAAmB+H,OAAS,UAAY,aAwCtD2H,GArCU,WACvB,IAAMzN,EAAkBC,cAExB,OACE,eAAC,GAAD,WACE,sBAAKkH,MAAO,CAAE/D,QAAS,QAAvB,UACE,eAAC,GAAD,WACGpD,EAAgB,IAAK,iBAAkB,IACxC,sBAAM0N,KAAK,MAAMC,aAAW,OAA5B,6BAIF,cAAC,IAAD,CAAOtG,IAAI,6BAA6BnF,MAAO,GAAIqF,OAAQ,GAAID,IAAI,sBACnE,cAAC,GAAD,kBACA,cAAC,GAAD,UAAQtH,EAAgB,IAAK,kCAC7B,cAAC,IAAD,CAAQmC,QAAQ,YAAYiL,GAAG,IAAItJ,KAAK,6BAA6B8J,UAAQ,EAAC1L,MAAM,OAAO9B,GAAG,OAA9F,SACGJ,EAAgB,IAAK,eAExB,eAACsN,GAAD,WACE,sBAAKnG,MAAO,CAAEuE,KAAM,GAApB,UAA0B1L,EAAgB,IAAK,OAA/C,OACA,cAACuN,GAAD,oBAEF,eAACD,GAAD,WACE,sBAAKnG,MAAO,CAAEuE,KAAM,GAApB,UACE,qBAAKrE,IAAI,wBAAwBC,IAAI,YAAYpF,MAAM,KAAKqF,OAAO,OAAQ,IAC1EvH,EAAgB,IAAK,cAFxB,OAIA,cAACuN,GAAD,4BAGJ,cAACC,GAAD,UACE,cAAC,KAAD,UCoGOK,GA/IQ,WACrB,IAAQC,EAASjB,cAATiB,KACF9N,EAAkBC,cAChBgJ,EAAYC,cAAZD,QACF8E,EAAQC,cACRC,EAAQC,YAASjF,GACjBkF,EAAcC,cACdC,EAAcC,cACdnF,EAAQC,cACd,EAAsCjI,oBAAS,GAA/C,mBAAOwL,EAAP,KAAoBC,EAApB,KAaM2B,EAAeN,EAAMO,KAAI,SAACtG,GAC9B,IAAMY,EAAYZ,EAAKzB,eAAiBnB,IAAaC,QAC/CkJ,EAAkBV,EAAMW,MAAK,SAACC,GAAD,OAAOA,EAAEnK,cAAgB0D,EAAKhH,aAC3D0N,EAAmBb,EAAMW,MAAK,SAACG,GAAD,OAAOA,EAAErK,cAAgB0D,EAAKG,oBAI5DyG,EAAwD,SAAvB,OAAhBF,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBG,kBAA6BV,EAAc,EAG9EW,EAAyBlG,EAC3B,IAAItI,IAAU,GACd,IAAIA,IAAJ,OAAcoO,QAAd,IAAcA,OAAd,EAAcA,EAAkBK,mBAAmBxO,MAAMqO,GAOvDI,GA9BW,SAAChO,EAAmBiO,EAAuBC,GAC5D,IAAMC,EAAe,IAAI7O,IAAU2O,GACjB,QAAdjO,EACK,IAAIV,IAAU,GAEnB2O,GAAcC,IAAe9E,IAAWgF,MACnCD,EAAaxR,IAAIsQ,GAkBIoB,CAC5BrH,EAAKhH,UADiC,OAEtCuN,QAFsC,IAEtCA,OAFsC,EAEtCA,EAAiBQ,kBAFqB,OAGtCR,QAHsC,IAGtCA,OAHsC,EAGtCA,EAAiBM,kBAGa,IAAIvO,IAAU,GAAGC,MAAMyH,EAAKsH,eAAe/O,MAAMgP,MAC3EC,EAA0BV,EAAuBvO,MAAM+G,YAAiBU,EAAK5B,cAC/EmC,EAAMyG,EAAwBrR,IAAI6R,GAAyBjP,MAAM,KAoBrE,MAjBuB,SAAnByH,EAAKhH,YACPuH,EAAMA,EAAIqC,aAAaqD,EAAYwB,WAgB9B,2BACFzH,GADL,IAEEpK,WAA4B,IAAhBoK,EAAKC,SAAuBD,EAAKpK,YAAcqL,EAAQjB,EAAKS,UACxEF,WAIJ,EAAmCmH,IAAUrB,GAAc,SAACrG,GAAD,OAAUA,EAAKpK,cAA1E,mBAAO+R,EAAP,KAAsBC,EAAtB,KACMC,EAAmBD,EAAUE,QACjC,SAAC9H,GAAD,OAAUA,EAAKU,UAAY,IAAIpI,IAAU0H,EAAKU,SAASsB,eAAee,cAAc,MAGhFgF,EAASrS,IAAOC,IAAV,0OAEI,qBAAGE,MAAkBC,OAAOkS,UAAUC,aAOlD,qBAAGpS,MAAkBqS,aAAaC,MAMhCC,EAAc1S,YAAO2F,IAAP3F,CAAH,mMAMb,qBAAGG,MAAkBqS,aAAaC,MAMtC,OACE,qCACE,eAACJ,EAAD,WACE,cAAC,IAAD,CAAS7C,GAAG,KAAKjK,KAAK,KAAK7E,MAAM,YAAY8B,GAAG,OAAhD,SACGJ,EAAgB,IAAK,eAExB,cAAC,IAAD,CAASmD,KAAK,KAAK7E,MAAM,OAAzB,SACE,+BACE,6BAAK0B,EAAgB,IAAK,mCAC1B,6BAAKA,EAAgB,IAAK,kCAC1B,6BAAKA,EAAgB,IAAK,uCAC1B,6BAAKA,EAAgB,IAAK,6DAG9B,cAAC,KAAD,CAAMmH,MAAO,CAAEoJ,UAAW,QAA1B,SACE,eAACD,EAAD,CAAaxM,KAAK,oEAAoExF,MAAM,OAAOsP,UAAQ,EAA3G,UACE,cAAC,IAAD,CAAUtP,MAAM,eADlB,IACmC0B,EAAgB,IAAK,sCAI5D,cAAC,GAAD,CAAgB2M,YAAaA,EAAaC,eAAgBA,IAC1D,cAAC4D,GAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC5C,KAAI,UAAKA,GAAtB,SACE,qCACGnB,EACGgE,IAAQZ,EAAkB,CAAC,cAAcvB,KAAI,SAACtG,GAAD,OAAU,cAAC,GAAD,CAA4BA,KAAMA,GAAnBA,EAAKC,WAC3EwI,IAAQb,EAAW,CAAC,cAActB,KAAI,SAACtG,GAAD,OAAU,cAAC,GAAD,CAA4BA,KAAMA,GAAnBA,EAAKC,WACxE,cAAC,GAAD,SAGJ,cAAC,IAAD,CAAO2F,KAAI,UAAKA,EAAL,YAAX,SACG6C,IAAQd,EAAe,CAAC,cAAcrB,KAAI,SAACtG,GAAD,OACzC,cAAC,GAAD,CAA4BA,KAAMA,GAAnBA,EAAKC,qB,iCC5JhC,sdAsBayI,EAAiB,SAAC1L,GAC7B,IAAM2L,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMsP,YAAe7L,EAAS2L,KAAO,CAAC3L,EAAS2L,KAGnD7H,EAAW,SAAC9D,GACvB,IAAM2L,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMuP,YAAiB9L,EAAS2L,KAAO,CAAC3L,EAAS2L,KAGrDI,EAAU,WACrB,IAAMJ,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMyP,YAAgBL,KAAO,CAACA,KAGlCM,EAAkB,WAC7B,IAAMN,EAAOC,cACb,OAAOrP,mBAAQ,kBAAM2P,YAAwBP,KAAO,CAACA,KAG1CQ,EAAoB,WAC/B,IAAMR,EAAOC,cACb,OAAOrP,mBAAQ,kBAAM6P,YAAyBT,KAAO,CAACA,KAG3CU,EAAa,WACxB,IAAMV,EAAOC,cACb,OAAOrP,mBAAQ,kBAAM+P,YAAmBX,KAAO,CAACA,KAGrCY,EAAa,WACxB,IAAMZ,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMiQ,YAAmBb,KAAO,CAACA,KAGrCc,EAAmB,WAC9B,IAAMd,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMmQ,YAAyBf,KAAO,CAACA,KAG3CgB,EAAgB,WAC3B,IAAMhB,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMqQ,YAAsBjB,KAAO,CAACA,KAGxCkB,EAAc,SAACpP,GAC1B,IAAMkO,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMuQ,YAAoBrP,EAAIkO,KAAO,CAAClO,EAAIkO,KAG9CoB,EAA4B,WACvC,IAAMpB,EAAOC,cACb,OAAOrP,mBAAQ,kBAAMyQ,YAA0BrB,KAAO,CAACA,KAG5CsB,EAA0B,WACrC,IAAMtB,EAAOC,cACb,OAAOrP,mBAAQ,kBAAM2Q,YAAwBvB,KAAO,CAACA,KAG1CwB,EAAyB,WACpC,IAAMxB,EAAOC,cACb,OAAOrP,mBAAQ,kBAAM6Q,YAAuBzB,KAAO,CAACA,M,iCCpFtD,yFAEarJ,EAAmB,SAAC+K,GAAuC,IAAnB5T,EAAkB,uDAAP,GACxD6T,EAAiB,IAAIhS,IAAU+R,GAASE,UAAU,IAAIjS,IAAU,IAAIuK,IAAIpM,IAC9E,OAAO6T,EAAe/H,YAGX/I,EAAwB,SAAC6Q,GAAuC,IAAnB5T,EAAkB,uDAAP,GACnE,OAAO4T,EAAQE,UAAU,IAAIjS,IAAU,IAAIuK,IAAIpM,IAAW+T,Y,sFCiB7C5B,IAfC,WACd,IAAQ6B,EAAYzJ,cAAZyJ,QACFC,EAAS9T,iBAAO6T,GACtB,EAAwBxR,mBAASwR,EAAU,IAAIE,IAAKF,GAAWG,eAA/D,mBAAOjC,EAAP,KAAakC,EAAb,KASA,OAPAhU,qBAAU,WACJ4T,IAAYC,EAAO5T,UACrB+T,EAAQJ,EAAU,IAAIE,IAAKF,GAAWG,eACtCF,EAAO5T,QAAU2T,KAElB,CAACA,IAEG9B,I,qFCLMjF,IAZM,SAACpM,GACpB,IAAMQ,EAAkBC,cACxB,EAA0B+S,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,aAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQrS,QAASqS,GAA2B3T,GAA5C,aACGQ,EAAgB,IAAK,sB,2aCTfqT,EAAO,uCAAG,WAAOC,EAAYC,EAAoBtK,GAAvC,SAAA5G,EAAA,+EACdiR,EAAWE,QACfH,QAAQE,EAAmBtO,QAAQC,QAASuO,IAAOC,UAAUC,YAC7DC,KAAK,CAAEC,KAAM5K,KAHK,2CAAH,0DAMP6K,EAAK,uCAAG,WAAOP,EAAoBQ,EAAKC,EAAQ/K,GAAxC,SAAA5G,EAAA,+EACZkR,EAAmBC,QACvBS,QAAQF,EAAK,IAAIvT,IAAUwT,GAAQvT,MAAM,IAAID,IAAU,IAAIuK,IAAI,KAAKrK,YACpEkT,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALK,2CAAH,4DASLC,EAAS,uCAAG,WAAOC,EAAkBN,EAAQ/K,GAAjC,SAAA5G,EAAA,+EAChBiS,EAAiBd,QACrBS,QAAQ,IAAIzT,IAAUwT,GAAQvT,MAAM,IAAID,IAAU,IAAIuK,IAAI,KAAKrK,YAC/DkT,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALS,2CAAH,0DASTG,EAAY,uCAAG,WAAOD,EAAkBN,EAAQ/K,GAAjC,SAAA5G,EAAA,+EACnBiS,EAAiBd,QACrBS,UACAL,KAAK,CAAEC,KAAM5K,EAASxK,MAAO,IAAI+B,IAAUwT,GAAQvT,MAAM,IAAID,IAAU,IAAIuK,IAAI,KAAKrK,aACpFwT,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALY,2CAAH,0DASZI,EAAO,uCAAG,WAAOjB,EAAoBQ,EAAKC,EAAQ/K,GAAxC,SAAA5G,EAAA,+EACdkR,EAAmBC,QACvBiB,SAASV,EAAK,IAAIvT,IAAUwT,GAAQvT,MAAM,IAAID,IAAU,IAAIuK,IAAI,KAAKrK,YACrEkT,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,4DASPM,EAAW,uCAAG,WAAOJ,EAAkBN,EAAQ/K,GAAjC,SAAA5G,EAAA,yDAEgB,+CAArCiS,EAAiBrP,QAAQC,QAFJ,yCAGhBoP,EAAiBd,QACrBmB,oBACAf,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAPS,UAUgB,+CAArCE,EAAiBrP,QAAQC,QAVJ,yCAWhBoP,EAAiBd,QACrBmB,oBACAf,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAfS,gCAkBlBE,EAAiBd,QACrBiB,SAAS,IAAIjU,IAAUwT,GAAQvT,MAAM,IAAID,IAAU,IAAIuK,IAAI,KAAKrK,YAChEkT,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAtBW,2CAAH,0DA0BXQ,EAAmB,uCAAG,WAAON,EAAkBN,EAAQ/K,GAAjC,SAAA5G,EAAA,+EAC1BiS,EAAiBd,QACrBmB,oBACAf,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALmB,2CAAH,0DASnB5L,EAAO,uCAAG,WAAO+K,EAAoBQ,EAAK9K,GAAhC,SAAA5G,EAAA,+EACdkR,EAAmBC,QACvBS,QAAQF,EAAK,KACbH,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,0DASPS,EAAY,uCAAG,WAAOP,EAAkBrL,GAAzB,SAAA5G,EAAA,+EACnBiS,EAAiBd,QACrBS,QAAQ,KACRL,KAAK,CAAEC,KAAM5K,IACbiL,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALY,2CAAH,wDASZU,EAAe,uCAAG,WAAOR,EAAkBrL,GAAzB,SAAA5G,EAAA,+EACtBiS,EAAiBd,QACrBS,UACAL,KAAK,CAAEC,KAAM5K,EAASxK,MAAO,IAAI+B,IAAU,KAC3C0T,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALe,2CAAH,yD,mHCpEtBW,EAAenX,IAAOC,IAAV,+DACN,SAAC2B,GAAD,OAAWA,EAAM2D,QAClB,SAAC3D,GAAD,OAAWA,EAAM2D,QAGb6R,EA5BuB,SAAC,GAAqB,IAGtDnG,EAHqD,IAAlB1L,YAAkB,MAAX,KAAW,EACjDK,EAAYQ,qBAAWC,KAAvBT,QAGR,OAAQL,GACN,IAAK,KACH0L,EAAIrL,EAAQ,GACZ,MACF,IAAK,KACHqL,EAAIrL,EAAQ,GACZ,MACF,IAAK,KACL,QACEqL,EAAIrL,EAAQ,GAGhB,OAAO,cAACuR,EAAD,CAAc5R,KAAM0L,KCJvBoG,EAAqBrX,IAAOC,IAAV,qIAEF,SAAC2B,GAAD,OAAWA,EAAMzB,MAAMC,OAAOkX,eAGvC,SAAC1V,GAAD,OAAWA,EAAMzB,MAAMyF,QAAQ,MAGtC2R,EAAoBvX,IAAOC,IAAV,wCAIRoE,EA1BgB,SAAC,GAAkB,IAAhB4B,EAAe,EAAfA,SAC1BuR,EAAI1N,IAAM2N,SAASC,QAAQzR,GAAU0R,OAC3C,OACE,cAACN,EAAD,UACGvN,IAAM2N,SAAS7G,IAAI3K,GAAU,SAAC2R,EAAOC,GAAR,OAC5B,qCACE,cAACN,EAAD,UAAoBK,IACnBC,EAAIL,EAAI,GAAK,cAAC,EAAD,c,4NCLXM,EAAa,SAACC,GACzB,IAAMC,EAAWC,cACT5M,EAAYC,cAAZD,QACFsK,EAAqB1B,cAQ3B,MAAO,CAAElI,SANa/H,sBAAW,sBAAC,4BAAAS,EAAA,sEACXmG,YAAQ+K,EAAoBoC,EAAS1M,GAD1B,cAC1B6M,EAD0B,OAEhCF,EAASG,YAAuB9M,IAFA,kBAGzB6M,GAHyB,2CAI/B,CAAC7M,EAAS2M,EAAUD,EAASpC,MAKrByC,EAAgB,SAACC,GAC5B,IAAQhN,EAAYC,cAAZD,QACFsK,EAAqB1B,cAU3B,MAAO,CAAElI,SARa/H,sBAAW,sBAAC,4BAAAS,EAAA,6DAC1B6T,EAAkBD,EAASE,QAAO,SAACC,EAAOrC,GAC9C,MAAM,GAAN,mBAAWqC,GAAX,CAAkB5N,YAAQ+K,EAAoBQ,EAAK9K,OAClD,IAH6B,kBAKzBoN,QAAQC,IAAIJ,IALa,2CAM/B,CAACjN,EAASgN,EAAU1C,MAKZ3J,EAAiB,SAACzB,GAAgC,IAAxBoO,EAAuB,wDACtDX,EAAWC,cACjB,EAAoB3M,cAAZD,EAAR,EAAQA,QACFqL,EAAmBvC,YAAY5J,GAC/BoL,EAAqB1B,cAErB2E,EAAgB5U,sBAAW,sBAAC,sBAAAS,EAAA,yDACjB,IAAX8F,EAD4B,gCAExBK,YAAQ+K,EAAoB,EAAGtK,GAFP,kCAGrBsN,EAHqB,iCAIxBzB,YAAgBR,EAAkBrL,GAJV,gDAMxB4L,YAAaP,EAAkBrL,GANP,QAQhC2M,EAASa,YAAwBtO,EAAQc,IACzC2M,EAASc,YAAkBvO,EAAQc,IATH,4CAU/B,CAACA,EAAS2M,EAAUW,EAAYhD,EAAoBe,EAAkBnM,IAEzE,MAAO,CAAEwB,SAAU6M,K,6NC5CRG,EAAa,SAACrD,GACzB,IAAMsC,EAAWC,cACT5M,EAAYC,cAAZD,QACFsK,EAAqB1B,cAY3B,MAAO,CAAExI,UAVazH,sBAAW,sBAAC,4BAAAS,EAAA,+EAEbgR,YAAQC,EAAYC,EAAoBtK,GAF3B,cAExBkL,EAFwB,OAG9ByB,EAASG,YAAuB9M,IAHF,kBAIvBkL,GAJuB,0DAMvB,GANuB,yDAQ/B,CAAClL,EAAS2M,EAAUtC,EAAYC,MAMxBjK,EAAiB,SAACgK,EAAsBnL,GACnD,IAAMyN,EAAWC,cACT5M,EAAYC,cAAZD,QACFqL,EAAmBvC,YAAY5J,GAYrC,MAAO,CAAEkB,UAVazH,sBAAW,sBAAC,4BAAAS,EAAA,+EAEbgR,YAAQC,EAAYgB,EAAkBrL,GAFzB,cAExBkL,EAFwB,OAG9ByB,EAASgB,YAAoBzO,EAAQc,IAHP,kBAIvBkL,GAJuB,0DAMvB,GANuB,yDAQ/B,CAAClL,EAAS2M,EAAUtC,EAAYgB,EAAkBnM,MAM1C0O,EAAoB,WAC/B,IAAQ5N,EAAYC,cAAZD,QACF6N,EAAe7F,cACf8F,EAAkBtF,cAWxB,MAAO,CAAEpI,UATazH,sBAAW,sBAAC,4BAAAS,EAAA,+EAEbgR,YAAQyD,EAAcC,EAAiB9N,GAF1B,cAExBkL,EAFwB,yBAGvBA,GAHuB,0DAKvB,GALuB,yDAO/B,CAAClL,EAAS6N,EAAcC,O,gJCpChBvN,EAAe,SAACrB,GAAgC,IAAxBoO,EAAuB,wDACpDX,EAAWC,cACjB,EAAoB3M,cAAZD,EAAR,EAAQA,QACFsK,EAAqB1B,cACrByC,EAAmBvC,YAAY5J,GAE/B6O,EAAcpV,sBAAW,uCAC7B,WAAOoS,GAAP,SAAA3R,EAAA,yDACiB,IAAX8F,EADN,gCAEU2L,YAAMP,EAAoB,EAAGS,EAAQ/K,GAF/C,kCAGasN,EAHb,iCAIUhC,YAAaD,EAAkBN,EAAQ/K,GAJjD,gDAMUoL,YAAUC,EAAkBN,EAAQ/K,GAN9C,QAQE2M,EAASqB,YAAwB9O,EAAQc,IACzC2M,EAASc,YAAkBvO,EAAQc,IATrC,4CAD6B,sDAY7B,CAACA,EAAS2M,EAAUW,EAAYhD,EAAoBe,EAAkBnM,IAGxE,MAAO,CAAEoB,QAASyN,IAGLE,IAzCE,SAACnD,GAChB,IAAM6B,EAAWC,cACT5M,EAAYC,cAAZD,QACFsK,EAAqB1B,cAW3B,MAAO,CAAEtI,QATW3H,sBAAW,uCAC7B,WAAOoS,GAAP,eAAA3R,EAAA,sEACuByR,YAAMP,EAAoBQ,EAAKC,EAAQ/K,GAD9D,OACQ6M,EADR,OAEEF,EAASG,YAAuB9M,IAChCqC,QAAQ6L,KAAKrB,GAHf,2CAD6B,sDAM7B,CAAC7M,EAAS2M,EAAUrC,EAAoBQ,O,gJCWtCqD,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAEzB1N,EAAiB,SAACvB,GAC7B,IAAMyN,EAAWC,cACT5M,EAAYC,cAAZD,QACFsK,EAAqB1B,cACrByC,EAAmBvC,YAAY5J,GAC/BkC,EAAa+M,EAASC,SAASlP,GAqBrC,MAAO,CAAEsB,UAnBa7H,sBAAW,uCAC/B,WAAOoS,GAAP,mBAAA3R,EAAA,yDACiB,IAAX8F,EADN,gCAEyBqM,YAAQjB,EAAoB,EAAGS,EAAQ/K,GAFhE,OAEU6M,EAFV,OAGIxK,QAAQ6L,KAAKrB,GAHjB,2BAIazL,EAJb,kCAKyBuK,YAAoBN,EAAkBN,EAAQ/K,GALvE,QAKU6M,EALV,OAMIxK,QAAQ6L,KAAKrB,GANjB,yCAQyBpB,YAAYJ,EAAkBN,EAAQ/K,GAR/D,QAQU6M,EARV,OASIxK,QAAQ6L,KAAKrB,GATjB,QAWEF,EAASqB,YAAwB9O,EAAQc,IACzC2M,EAASc,YAAkBvO,EAAQc,IACnC2M,EAASa,YAAwBtO,EAAQc,IAb3C,4CAD+B,sDAgB/B,CAACA,EAAS2M,EAAUvL,EAAYkJ,EAAoBe,EAAkBnM,MAM3DmP,IAhDI,SAACvD,GAClB,IAAM6B,EAAWC,cACT5M,EAAYC,cAAZD,QACFsK,EAAqB1B,cAW3B,MAAO,CAAEpI,UATa7H,sBAAW,uCAC/B,WAAOoS,GAAP,eAAA3R,EAAA,sEACuBmS,YAAQjB,EAAoBQ,EAAKC,EAAQ/K,GADhE,OACQ6M,EADR,OAEEF,EAASG,YAAuB9M,IAChCqC,QAAQ6L,KAAKrB,GAHf,2CAD+B,sDAM/B,CAAC7M,EAAS2M,EAAUrC,EAAoBQ,O,2MCpBtCrO,EAAU,SAAClG,GAAD,OACd,cAAC,KAAD,yBAAK2C,QAAQ,YAAYoV,SAAO,EAACC,UAAW,cAAC,KAAD,KAAsBhY,GAAlE,wBAKIoG,EAAe,SAACpG,GAAD,OACnB,cAAC,KAAD,yBAAK2C,QAAQ,aAAaoV,SAAO,EAACC,UAAW,cAAC,IAAD,KAAuBhY,GAApE,6BAKIgG,EAAa,SAAChG,GAAD,OACjB,cAAC,KAAD,yBAAK2C,QAAQ,UAAUoV,SAAO,EAACC,UAAW,cAAC,IAAD,KAAqBhY,GAA/D,2BAKIiY,EAAU,SAACjY,GAAD,OACd,cAAC,KAAD,yBAAK2C,QAAQ,aAAaoV,SAAO,GAAK/X,GAAtC,yB,iCCtBF,oBAQe4J,IALE,WAEf,OADsBpF,qBAAW0T,O,+CCF7BC,E,KAAa/Z,EAAOC,IAAV,4NAaD8Z","file":"static/js/9.0717ffe4.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface LabelProps {\r\n  text?: string\r\n  isFinished?: boolean\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\r\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\r\n)\r\n\r\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\r\n  font-size: 14px;\r\n`\r\n\r\nexport default Label\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface TextProps {\r\n  isDisabled?: boolean\r\n  fontSize?: string\r\n  color?: string\r\n}\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value?: number\r\n  decimals?: number\r\n  unit?: string\r\n}\r\n\r\nconst StyledText = styled(Text)<TextProps>`\r\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\r\n`\r\n\r\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {value && unit && <span>{unit}</span>}\r\n    </StyledText>\r\n  )\r\n}\r\n\r\nBalance.defaultProps = {\r\n  fontSize: '32px',\r\n  isDisabled: false,\r\n  color: 'text',\r\n  decimals: 3,\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Box, Button, Flex, Text, Input, InputProps } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  value: string\r\n  onSelectMax?: () => void\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Box>\r\n      <Flex justifyContent=\"flex-end\" minHeight=\"21px\" mb=\"8px\">\r\n        <Text color=\"primary\" fontSize=\"14px\">\r\n          {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\r\n        {depositFeeBP > 0 ? (\r\n          <StyledMaxText>\r\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\r\n            {symbol}\r\n          </StyledMaxText>\r\n        ) : null}\r\n        <Flex alignItems=\"center\">\r\n          <Text bold color=\"primary\" textTransform=\"uppercase\" mx=\"8px\">\r\n            {symbol}\r\n          </Text>\r\n          <div>\r\n            <Button scale=\"sm\" onClick={onSelectMax}>\r\n              {TranslateString(452, 'Max')}\r\n            </Button>\r\n          </div>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport Balance from 'components/Balance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  earnings: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(earnings)\r\n  }, [earnings])\r\n\r\n  return (\r\n    <Modal\r\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <BalanceRow>\r\n        <Balance value={Number(fullBalance)} />\r\n      </BalanceRow>\r\n      <ModalActions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"compound-cake\"\r\n          width=\"100%\"\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(fullBalance)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CompoundModal\r\n\r\nconst BalanceRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledTitleProps {\r\n  isFinished?: boolean\r\n}\r\n\r\nconst CardTitle = styled.div<StyledTitleProps>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 1.1;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nexport default CardTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\r\n  background: ${(props) => props.theme.card.background};\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  border-radius: 32px;\r\n  display: flex;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ isActive }) =>\r\n    isActive\r\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\r\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport default Card\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode\r\n  disabled?: boolean\r\n  href?: string\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg'\r\n  text?: string\r\n  to?: string\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\r\n  const { colors, spacing } = useContext(ThemeContext)\r\n  const buttonColor = colors.background\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    }\r\n    if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      )\r\n    }\r\n    return text\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string\r\n  color: string\r\n  disabled?: boolean\r\n  fontSize: number\r\n  padding: number\r\n  size: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\r\n  width: 100px;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number, tokenImage: string) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n\r\nexport default registerToken\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport Balance from 'components/Balance'\r\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport registerToken from 'utils/metamaskUtils'\r\nimport { Flex, MetamaskIcon } from '@pancakeswap-libs/uikit'\r\nimport { BASE_URL } from 'config'\r\n\r\nconst tags = {\r\n  [PoolCategory.BINANCE]: BinanceTag,\r\n  [PoolCategory.CORE]: CoreTag,\r\n  [PoolCategory.COMMUNITY]: CommunityTag,\r\n}\r\n\r\ninterface Props {\r\n  projectLink: string\r\n  decimals: number\r\n  totalStaked: BigNumber\r\n  blocksRemaining: number\r\n  isFinished: boolean\r\n  blocksUntilStart: number\r\n  poolCategory: PoolCategory\r\n  tokenName: string\r\n  tokenAddress: string\r\n  tokenDecimals: number\r\n}\r\n\r\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledDetailsButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  height: 32px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst FlexFull = styled.div`\r\n  flex: 1;\r\n`\r\nconst Label = styled.div`\r\n  font-size: 14px;\r\n`\r\nconst TokenLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n`\r\n\r\nconst CardFooter: React.FC<Props> = ({\r\n  projectLink,\r\n  decimals,\r\n  tokenAddress,\r\n  totalStaked,\r\n  tokenName,\r\n  tokenDecimals,\r\n  blocksRemaining,\r\n  isFinished,\r\n  blocksUntilStart,\r\n  poolCategory,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const Icon = isOpen ? ChevronUp : ChevronDown\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n  const Tag = tags[poolCategory]\r\n\r\n  const imageSrc = `${BASE_URL}/images/farms/${tokenName.toLowerCase()}.png`\r\n\r\n  return (\r\n    <StyledFooter isFinished={isFinished}>\r\n      <Row>\r\n        <FlexFull>\r\n          <Tag />\r\n        </FlexFull>\r\n        <StyledDetailsButton onClick={handleClick}>\r\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\r\n        </StyledDetailsButton>\r\n      </Row>\r\n      {isOpen && (\r\n        <Details>\r\n          <Row style={{ marginBottom: '4px' }}>\r\n            <FlexFull>\r\n              <Label>\r\n                <img src=\"/images/farms/bbq.png\" alt=\"BBQ Token\" width=\"15\" height=\"15\" />{' '}\r\n                {TranslateString(408, 'Total')}\r\n              </Label>\r\n            </FlexFull>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\r\n          </Row>\r\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>⏱ {TranslateString(999, 'Blocks remaining')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\r\n            </Row>\r\n          )}\r\n          <Row>\r\n            <TokenLink onClick={() => registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)}>\r\n              Add {tokenName} to Metamask\r\n            </TokenLink>\r\n            <MetamaskIcon height={15} width={15} ml=\"4px\" />\r\n          </Row>\r\n          <Row>\r\n            <TokenLink href={projectLink} target=\"_blank\">\r\n              {TranslateString(412, 'View project site')}\r\n            </TokenLink>\r\n          </Row>\r\n        </Details>\r\n      )}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(CardFooter)\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CompoundModal from './CompoundModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\nimport { usePoolFromPid } from '../../../state/hooks'\r\n\r\ninterface PoolWithApy extends Pool {\r\n  apy: BigNumber\r\n}\r\n\r\ninterface HarvestProps {\r\n  pool: PoolWithApy\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    image,\r\n    tokenName,\r\n    tokenLabel,\r\n    stakingTokenName,\r\n    stakingTokenAddress,\r\n    stakingTokenDecimals,\r\n    projectLink,\r\n    harvest,\r\n    apy,\r\n    tokenDecimals,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n  } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingTokenAddress)\r\n  const { account } = useWeb3React()\r\n  const block = useBlock()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n  const test = usePoolFromPid(sousId)\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const blocksUntilStart = Math.max(startBlock - block, 0)\r\n  const blocksRemaining = Math.max(endBlock - block, 0)\r\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n  const isOldFinishedBush = sousId === 66\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\r\n    />,\r\n  )\r\n\r\n  const [onPresentCompound] = useModal(\r\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card className=\"cardPool\" isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\r\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished && sousId !== 0}>\r\n          {isOldSyrup && '[OLD]'} {tokenLabel} {TranslateString(999, 'Bush')}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\r\n          </div>\r\n          {!isOldFinishedBush && account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldFinishedBush && !isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\r\n            {sousId === 0 && account && harvest && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\r\n                onClick={onPresentCompound}\r\n              />\r\n            )}\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <div>-</div>\r\n        )}\r\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\r\n                  {pool?.isBush === true ? (\r\n                    <span>{TranslateString(999, 'Approve this bush')}</span>\r\n                  ) : (\r\n                    <span>{`Approve ${stakingTokenName}`}</span>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0')\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingTokenName}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"background\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>\r\n            {TranslateString(10001, 'Deposit Fee')}{' '}\r\n            <span data-tip data-for=\"depositFeeTooltip\">\r\n              <FontAwesomeIcon icon={faQuestionCircle} />\r\n            </span>{' '}\r\n            :\r\n          </div>\r\n          <Text\r\n            bold\r\n            style={{\r\n              backgroundColor: pool.depositFee === 0 ? '#4bca4b' : 'transparent',\r\n              color: pool.depositFee === 0 ? 'white' : '#424f3e',\r\n              padding: pool.depositFee === 0 ? '2px 5px' : 'inherit',\r\n              borderRadius: pool.depositFee === 0 ? '10px' : 'inherit',\r\n            }}\r\n          >\r\n            {pool.depositFee / 100}%\r\n          </Text>\r\n          <ReactTooltip id=\"depositFeeTooltip\" effect=\"solid\" place=\"right\">\r\n            <span>{TranslateString(742, 'Deposit fees will be automatically eaten (burnt)')}</span>\r\n          </ReactTooltip>\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>\r\n            <img src=\"/images/farms/bbq.png\" alt=\"BBQ Token\" width=\"15\" height=\"15\" />{' '}\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\r\n        </StyledDetails>\r\n        {blocksUntilStart > 0 && (\r\n          <StyledDetails>\r\n            <div style={{ flex: 1 }}>⏱ {TranslateString(999, 'Blocks until start')}:</div>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\r\n          </StyledDetails>\r\n        )}\r\n      </div>\r\n      <CardFooter\r\n        projectLink={projectLink}\r\n        decimals={tokenDecimals}\r\n        totalStaked={totalStaked}\r\n        blocksRemaining={blocksRemaining}\r\n        isFinished={isFinished}\r\n        blocksUntilStart={blocksUntilStart}\r\n        poolCategory={poolCategory}\r\n        tokenName={stakingTokenName}\r\n        tokenAddress={stakingTokenAddress}\r\n        tokenDecimals={stakingTokenDecimals}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n`\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToggleWrapper>\r\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\r\n        <Text> {TranslateString(999, 'Staked only')}</Text>\r\n      </ToggleWrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(698, 'Active')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(700, 'Inactive')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 32px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Image, Button } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag } from 'components/Tags'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Card from './Card'\r\nimport CardTitle from './CardTitle'\r\n\r\nconst Balance = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 40px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst DetailPlaceholder = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n`\r\nconst Value = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 14px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  padding: 24px;\r\n`\r\nconst Coming: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle>\r\n          {TranslateString(414, 'Your Project?')}{' '}\r\n          <span role=\"img\" aria-label=\"eyes\">\r\n            👀\r\n          </span>\r\n        </CardTitle>\r\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\r\n        <Balance>???</Balance>\r\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\r\n        <Button variant=\"secondary\" as=\"a\" href=\"https://t.me/koaladefichat\" external width=\"100%\" mb=\"16px\">\r\n          {TranslateString(418, 'Apply Now')}\r\n        </Button>\r\n        <DetailPlaceholder>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          <Value>??</Value>\r\n        </DetailPlaceholder>\r\n        <DetailPlaceholder>\r\n          <div style={{ flex: 1 }}>\r\n            <img src=\"/images/farms/bbq.png\" alt=\"BBQ Token\" width=\"15\" height=\"15\" />{' '}\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Value>??? BBQ</Value>\r\n        </DetailPlaceholder>\r\n      </div>\r\n      <Footer>\r\n        <CommunityTag />\r\n      </Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Coming\r\n","import React, { useState } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, HelpIcon, Link, Text } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useFarms, usePriceBnbBusd, usePools, usePriceEthBnb } from 'state/hooks'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport PoolCard from '../Pools/components/PoolCard'\r\nimport PoolTabButtons from '../Pools/components/PoolTabButtons'\r\nimport Divider from '../Pools/components/Divider'\r\nimport Page from '../../components/layout/Page'\r\nimport Coming from '../Pools/components/Coming'\r\n\r\nconst Bush: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const farms = useFarms()\r\n  const pools = usePools(account)\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const ethPriceBnb = usePriceEthBnb()\r\n  const block = useBlock()\r\n  const [stackedOnly, setStackedOnly] = useState(false)\r\n\r\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\r\n    const tokenPriceBN = new BigNumber(tokenPrice)\r\n    if (tokenName === 'BNB') {\r\n      return new BigNumber(1)\r\n    }\r\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\r\n      return tokenPriceBN.div(bnbPriceUSD)\r\n    }\r\n    return tokenPriceBN\r\n  }\r\n\r\n  const poolsWithApy = pools.map((pool) => {\r\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\r\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\r\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\r\n\r\n    // tmp mulitplier to support ETH farms\r\n    // Will be removed after the price api\r\n    const tempMultiplier = stakingTokenFarm?.quoteTokenSymbol === 'ETH' ? ethPriceBnb : 1\r\n\r\n    // /!\\ Assume that the farm quote price is BNB\r\n    const stakingTokenPriceInBNB = isBnbPool\r\n      ? new BigNumber(1)\r\n      : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote).times(tempMultiplier)\r\n    const rewardTokenPriceInBNB = priceToBnb(\r\n      pool.tokenName,\r\n      rewardTokenFarm?.tokenPriceVsQuote,\r\n      rewardTokenFarm?.quoteTokenSymbol,\r\n    )\r\n\r\n    const totalRewardPricePerYear = new BigNumber(1).times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\r\n    let apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n\r\n    // /!\\ todo: clean this shit\r\n    if (pool.tokenName === 'WBNB') {\r\n      apy = apy.multipliedBy(bnbPriceUSD.toJSON())\r\n    }\r\n\r\n    // console.table({\r\n    //   'stakingTokenFarm?.tokenPriceVsQuote': stakingTokenFarm?.tokenPriceVsQuote,\r\n    //   stakingTokenPriceInBNB: stakingTokenPriceInBNB.toJSON(),\r\n    //   rewardTokenPriceInBNB: rewardTokenPriceInBNB.toJSON(),\r\n    //   totalRewardPricePerYear: totalRewardPricePerYear.toJSON(),\r\n    //   totalStakingTokenInPool: totalStakingTokenInPool.toJSON(),\r\n    //   'pool.tokenPerBlock': pool.tokenPerBlock,\r\n    //   'pool.totalStaked': pool.totalStaked,\r\n    //   'getBalanceNumber(pool.totalStaked)': getBalanceNumber(pool.totalStaked),\r\n    //   BLOCKS_PER_YEAR: BLOCKS_PER_YEAR.toJSON(),\r\n    //   'stakingTokenFarm?.quoteTokenSymbol': stakingTokenFarm?.quoteTokenSymbol,\r\n    // })\r\n\r\n    return {\r\n      ...pool,\r\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\r\n      apy,\r\n    }\r\n  })\r\n\r\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\r\n  const stackedOnlyPools = openPools.filter(\r\n    (pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const Header = styled.div`\r\n    padding: 32px 0px;\r\n    background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n\r\n    padding-left: 16px;\r\n    padding-right: 16px;\r\n\r\n    margin-bottom: 20px;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      padding-left: 24px;\r\n      padding-right: 24px;\r\n    }\r\n  `\r\n\r\n  const AddressLink = styled(Link)`\r\n    display: inline-block;\r\n    font-weight: 400;\r\n    font-size: 12px;\r\n    white-space: nowrap;\r\n\r\n    ${({ theme }) => theme.mediaQueries.sm} {\r\n      font-size: 16px;\r\n      width: auto;\r\n    }\r\n  `\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Heading as=\"h1\" size=\"xl\" color=\"secondary\" mb=\"24px\">\r\n          {TranslateString(999, 'The Grill')}\r\n        </Heading>\r\n        <Heading size=\"md\" color=\"text\">\r\n          <ul>\r\n            <li>{TranslateString(580, 'Stake BBQ to earn new tokens.')}</li>\r\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\r\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\r\n            <li>{TranslateString(742, 'Deposit fees will be automatically grilled (burnt)')}</li>\r\n          </ul>\r\n        </Heading>\r\n        <Text style={{ marginTop: '10px' }}>\r\n          <AddressLink href=\"https://koaladefi.medium.com/the-bush-next-evolution-d9e316be71f1\" color=\"text\" external>\r\n            <HelpIcon color=\"textSubtle\" /> {TranslateString(743, 'Learn more about The Grill')}\r\n          </AddressLink>\r\n        </Text>\r\n      </Header>\r\n      <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {stackedOnly\r\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\r\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\r\n            <Coming />\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bush\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\r\n    return tx\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 66]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\r\n\r\nconst CoreTag = (props) => (\r\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />} {...props}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />} {...props}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = (props) => (\r\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />} {...props}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nconst DualTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline {...props}>\r\n    Dual\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag }\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n"],"sourceRoot":""}