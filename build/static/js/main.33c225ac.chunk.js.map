{"version":3,"sources":["utils/getRpcUrl.ts","contexts/Localisation/translationsContext.ts","config/constants/nfts.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","config/constants/teams.ts","state/teams/helpers.ts","config/constants/campaigns.ts","hooks/useRefresh.ts","utils/makeBatchRequest.ts","utils/wallet.ts","hooks/useAuth.ts","config/constants/ifo.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","state/achievements/helpers.ts","state/achievements/index.ts","contexts/RefreshContext.tsx","state/prices/index.ts","utils/web3React.ts","config/index.ts","utils/addressHelpers.ts","utils/achievements.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","components/layout/Page.tsx","config/constants/contracts.ts","config/constants/index.ts","components/layout/Container.tsx","components/PageLoader.tsx","contexts/BlockContext.tsx","config/constants/types.ts","utils/multicall.ts","config/constants/pools.ts","state/hooks.ts","config/constants/farms.ts","utils/web3.ts","state/teams/index.tsx","utils/contractHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useEagerConnect.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","config/localisation/languageCodes.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/toasts/index.ts","state/actions.ts"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","Nfts","name","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","bunnyId","blur","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","getAddress","lpAddresses","calls","address","tokenAddresses","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","QuoteToken","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","poolInfo","bbqPerBlock","allocPoint","_hex","poolWeight","toJSON","multiplier","toString","depositFeeBP","toNumber","data","fetchFarmUserAllowances","account","masterChefAdress","farm","CHAIN_ID","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","teams","id","alt","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","makeBatchRequest","teamData","onChainTeamData","Number","campaigns","type","title","badge","campaignMap","Map","campaign","set","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","batch","getWeb3NoAccount","BatchRequest","promises","resolve","reject","add","request","err","result","execute","setupNetwork","provider","window","ethereum","chainId","parseInt","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","console","error","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","UnsupportedChainIdError","message","logout","ifos","contracts","bbqIFO","isActive","subTitle","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currency","currencyAddress","wbnb","releaseBlockNumber","campaignId","CACHE_KEY","LanguageContext","React","selectedLanguage","EN","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","children","useState","useEffect","storedLangCode","localStorage","getItem","storedLang","allLanguages","filter","language","code","getStoredLang","log","fetch","then","r","json","translationApiResponse","catch","e","Provider","value","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","theme","dark","light","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","kebabCase","toastTypes","DANGER","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","fetchPrices","createAsyncThunk","response","update_at","prices","Object","keys","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","rpcUrl","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","getCakeAddress","addresses","cake","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","fallback","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","undefined","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","has","ifoCampaign","variableRegex","getTranslation","translationId","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","Page","styled","Container","mediaQueries","97","56","syrup","sousChef","busd","ust","usdt","eth","cakecake","isCommunity","Wrapper","PageLoader","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getBlockNumber","blockNumber","current","PoolCategory","abi","multi","Contract","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","pools","sousId","tokenName","tokenLabel","tokenAddress","stakingTokenName","BBQ","stakingTokenAddress","stakingTokenDecimals","contractAddress","poolCategory","CORE","projectLink","harvest","tokenPerBlock","isFinished","isBush","bushVersion","ZERO","useFetchPublicData","useDispatch","fetchPoolsPublicDataAsync","useFarms","useSelector","useFarmFromPid","useFarmUser","usePools","fetchPoolsUserDataAsync","usePoolFromPid","p","usePriceBnbBusd","usePriceCakeBusd","bnbPriceUSD","usePriceEthBusd","usePriceEthBnb","priceBnbBusd","useMemo","toast","pushToast","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useFetchProfile","fetchProfile","useProfile","profile","isInitialized","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","useFetchPriceList","useGetApiPrices","useGetApiPrice","useTotalValue","bushs","bnbPrice","cakePrice","val","BNB","CAKE","plus","bush","bushValue","totalStaked","isNaN","lpSymbol","USDT","hidden","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","getContract","getBep20Contract","bep20Abi","getIfoContract","ifoAbi","getSouschefContract","poolsConfig","pool","BINANCE","sousChefBnb","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getMasterchefContract","getClaimRefundContract","claimRefundAbi","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","v1Bushs","callsNonBnbPools","callsBnbPools","callsV1Bushs","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bushABIV1","V1BushsDepositFee","bushDepositFees","depositFee","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingBBQ","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","useEagerConnect","connectorId","connectorLocalStorageKey","useGetDocumentTitlePrice","cakePriceUsd","document","toLocaleString","minimumFractionDigits","maximumFractionDigits","GlobalStyle","createGlobalStyle","colors","useTheme","StyledThemeContext","label","icon","href","items","calloutClass","Menu","props","currentLang","langs","setLang","links","username","image","nft","profileLink","noProfileLink","showPip","ToastListener","toasts","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","values","some","status","history","createBrowserHistory","bullNft","nftList","hiccupNft","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","src","height","width","style","marginBottom","ClaimBullHiccupNftModal","onDismiss","TranslateString","collectibleMessage","delay","flexDirection","alignItems","justifyContent","bold","color","fontSize","mb","onClick","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","useModal","onPresentGiftModal","pathname","useLocation","Home","lazy","Farms","Lottery","NotFound","Bush","Ifo","Graph","App","warn","Global","path","exact","tokenMode","component","iterations","memo","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","pricesReducer","profileReducer","teamsReducer","achievementsReducer","Providers","store","ReactDOM","render","StrictMode","getElementById","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","rabbitContract","getUsername","ok","getProfile","getUserProfile","getBunnyId","nfts","nftItem","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints","toastsSlice","toastIndex","splice","unshift"],"mappings":"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","file":"static/js/main.33c225ac.chunk.js","sourcesContent":["import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { Nft } from './types'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { QuoteToken } from '../../config/constants/types'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n\r\n      const lpAdress = getAddress(farmConfig.lpAddresses)\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: getAddress(farmConfig.tokenAddresses),\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: getAddress(farmConfig.quoteTokenAdresses),\r\n          name: 'balanceOf',\r\n          params: [lpAdress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAdress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: getAddress(farmConfig.tokenAddresses),\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: getAddress(farmConfig.quoteTokenAdresses),\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls)\r\n\r\n      let tokenAmount\r\n      let lpTotalInQuoteToken\r\n      let tokenPriceVsQuote\r\n      if (farmConfig.isTokenOnly) {\r\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals))\r\n        if (farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD) {\r\n          tokenPriceVsQuote = new BigNumber(1)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n        }\r\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote)\r\n      } else {\r\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n        // Total value in staking in quote token value\r\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(18))\r\n          .times(new BigNumber(2))\r\n          .times(lpTokenRatio)\r\n\r\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n          .times(lpTokenRatio)\r\n\r\n        if (tokenAmount.comparedTo(0) > 0) {\r\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount)\r\n        } else {\r\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP))\r\n        }\r\n      }\r\n\r\n      const [info, totalAllocPoint, poolInfo, bbqPerBlock] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'bbqPerBlock',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        // quoteTokenAmount: quoteTokenAmount.toJSON(),\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\r\n        poolWeight: poolWeight.toJSON(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: poolInfo.depositFeeBP,\r\n        bbqPerBlock: new BigNumber(bbqPerBlock).toNumber(),\r\n        lpTotalSupply: new BigNumber(lpTotalSupply).div(new BigNumber(10).pow(tokenDecimals)).toJSON(),\r\n        lpTokenBalanceMC: new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals)).toJSON(),\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'pendingBBQ',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","import { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { TeamsById, TeamResponse } from 'state/types'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const {\r\n      0: teamName,\r\n      2: numberUsers,\r\n      3: numberPoints,\r\n      4: isJoinable,\r\n    } = await profileContract.methods.getTeamProfile(teamId).call()\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers,\r\n      points: numberPoints,\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.methods.numberTeams().call()\r\n    const calls = []\r\n\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push(profileContract.methods.getTeamProfile(i).call)\r\n    }\r\n\r\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: Number(numberUsers),\r\n          points: Number(numberPoints),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { getWeb3NoAccount } from './web3'\r\n\r\n/**\r\n * Accepts an array of contract method calls and batches them\r\n *\r\n * Example:\r\n *\r\n * [\r\n *  contract.method.balanceOf().call,\r\n *  contract.method.startBlockNumber().call\r\n * ]\r\n */\r\nconst makeBatchRequest = (calls: any[]) => {\r\n  try {\r\n    const web3 = getWeb3NoAccount()\r\n    const batch = new web3.BatchRequest()\r\n\r\n    const promises = calls.map((call) => {\r\n      return new Promise((resolve, reject) => {\r\n        batch.add(\r\n          call.request({}, (err, result) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              resolve(result)\r\n            }\r\n          }),\r\n        )\r\n      })\r\n    })\r\n\r\n    batch.execute()\r\n\r\n    return Promise.all(promises)\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default makeBatchRequest\r\n","import { nodes } from './getRpcUrl'\r\n\r\nexport const setupNetwork = async () => {\r\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n  // @ts-ignore\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\nexport default null\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback((connectorID: ConnectorNames) => {\r\n    const connector = connectorsByName[connectorID]\r\n    if (connector) {\r\n      activate(connector, async (error: Error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          const hasSetup = await setupNetwork()\r\n          if (hasSetup) {\r\n            activate(connector)\r\n          }\r\n        } else {\r\n          toastError(error.name, error.message)\r\n        }\r\n      })\r\n    } else {\r\n      toastError(\"Can't find connector\", 'The connector config is wrong')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return { login, logout: deactivate }\r\n}\r\n\r\nexport default useAuth\r\n","import contracts from 'config/constants/contracts'\r\nimport { Ifo } from './types'\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'bbq',\r\n    address: contracts.bbqIFO[56],\r\n    isActive: true,\r\n    name: 'Barbecue Token (BBQ)',\r\n    subTitle: 'Buy BBQ Governance Token with discount',\r\n    description: 'Buy BBQ Governance Token with discount',\r\n    launchDate: 'May 1st',\r\n    launchTime: '10PM UTC',\r\n    saleAmount: '100,000 BBQ',\r\n    raiseAmount: '200 WBNB',\r\n    cakeToBurn: '0',\r\n    projectSiteUrl: 'https://barbecueswap.finance/',\r\n    currency: 'WBNB',\r\n    currencyAddress: contracts.wbnb[56],\r\n    tokenDecimals: 18,\r\n    tokenSymbol: 'WBNB',\r\n    releaseBlockNumber: 5294924,\r\n    campaignId: '511070000',\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`)\r\n      fetch(`./i18n/${selectedLanguage.code}.json`)\r\n        .then((r) => r.json())\r\n        // fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations(['error'])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          console.error('ERROR')\r\n          console.error(e)\r\n          setTranslations(['error'])\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap-libs/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const data = await request(\r\n      profileSubgraphApi,\r\n      gql`\r\n        {\r\n          user(id: \"${account.toLowerCase()}\") {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    )\r\n    return data.user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { kebabCase } from 'lodash'\r\nimport { push } from 'state/toasts'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data.concat(action.payload)\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n    const title = 'Error fetching achievements'\r\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    update_at: data.update_at,\r\n    prices: Object.keys(data.prices).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: data.prices[token],\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.update_at\r\n      state.data = action.payload.prices\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_POOL_PID = 0\r\nexport const BASE_URL = 'https://app.barbecueswap.finance'\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.barbecueswap.finance'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 1","import addresses from 'config/constants/contracts'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const mainNetChainId = 56\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(addresses.cake)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.mulltiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(addresses.wbnb)\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return getAddress(addresses.lottery)\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return getAddress(addresses.lotteryNFT)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\n","import { Campaign } from 'config/constants/types'\r\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement, TranslatableText } from 'state/types'\r\nimport makeBatchRequest from './makeBatchRequest'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: string\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `IFO Shopper: ${campaign.title}`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligble to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\r\n  const pointCenterContract = getPointCenterIfoContract()\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatuses = (await pointCenterContract.methods\r\n    .checkClaimStatuses(account, ifoCampaignAddresses)\r\n    .call()) as boolean[]\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await makeBatchRequest(\r\n    claimStatuses.reduce((accum, claimStatus, index) => {\r\n      if (claimStatus === true) {\r\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(claimableIfoDataItem.numberPoints),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\nconst variableRegex = /%(.*?)%/\r\n\r\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\r\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\r\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\r\n  const fallbackValueAtIndex = fallback.split(' ')[0]\r\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\r\n}\r\n\r\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\r\n  const foundTranslation = translations.find((translation) => {\r\n    return translation.data.stringId === translationId\r\n  })\r\n  if (foundTranslation) {\r\n    const translatedString = foundTranslation.data.text\r\n    const includesVariable = translatedString.includes('%')\r\n    if (includesVariable) {\r\n      return replaceDynamicString(translatedString, fallback)\r\n    }\r\n    return translatedString\r\n  }\r\n  return fallback\r\n}\r\n\r\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\r\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\r\n// @see https://reactjs.org/docs/hooks-rules.html\r\nexport const TranslateString = (translationId: number, fallback: string) => {\r\n  const { translations } = useContext(TranslationsContext)\r\n  if (translations[0] === 'error') {\r\n    return fallback\r\n  }\r\n  if (translations.length > 0) {\r\n    return getTranslation(translations, translationId, fallback)\r\n  }\r\n  return fallback\r\n}\r\n","import { useContext } from 'react'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\nimport { getTranslation } from '../utils/translateTextHelpers'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations[0] === 'error') {\r\n      return fallback\r\n    }\r\n    if (translations.length > 0) {\r\n      return getTranslation(translations, translationId, fallback)\r\n    }\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","export default {\r\n  cake: {\r\n    97: '',\r\n    56: '0xD9A88f9b7101046786490bAF433f0f6aB3D753E2',\r\n  },\r\n  syrup: {\r\n    97: '',\r\n    56: '',\r\n  },\r\n  masterChef: {\r\n    97: '',\r\n    56: '0x26B2081247222f44D010A1a7eC74FE9Ecc1D89eC'\r\n  },\r\n  bbqIFO: {\r\n    97: '',\r\n    56: '0x3dFE4c1E9Ee7b6837157482AB518347C36651c4A'\r\n  },\r\n  sousChef: {\r\n    97: '',\r\n    56: '',\r\n  },\r\n  wbnb: {\r\n    97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n  },\r\n  lottery: {\r\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\r\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\r\n  },\r\n  lotteryNFT: {\r\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\r\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n  busd: {\r\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n    97: '',\r\n  },\r\n  ust: {\r\n    56: '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n    97: '',\r\n  },\r\n  usdt: {\r\n    56: '0x55d398326f99059ff775485246999027b3197955',\r\n    97: ''\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n  },\r\n  eth: {\r\n    56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n    97: '',\r\n  },\r\n  cakecake: {\r\n    97: '',\r\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n  },\r\n}\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap-libs/uikit'\r\nimport Page from './layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\nconst BlockContext = React.createContext(0)\r\n\r\nconst BlockContextProvider = ({ children }) => {\r\n  const previousBlock = useRef(0)\r\n  const [block, setBlock] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      if (blockNumber !== previousBlock.current) {\r\n        previousBlock.current = blockNumber\r\n        setBlock(blockNumber)\r\n      }\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\r\n}\r\n\r\nexport { BlockContext, BlockContextProvider }\r\n","import { TranslatableText } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  tokenSymbol: string\r\n  releaseBlockNumber: number\r\n  campaignId?: string\r\n}\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'CAKE' = 'CAKE',\r\n  'SYRUP' = 'SYRUP',\r\n  'BUSD' = 'BUSD',\r\n  'USDT' = 'USDT',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n  'ETH' = 'ETH',\r\n  'COMP' = 'COMP',\r\n  'SUSHI' = 'SUSHI',\r\n  'BBQ' = 'BBQ',\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97: string\r\n  56?: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  tokenSymbol: string\r\n  tokenAddresses: Address\r\n  quoteTokenSymbol: QuoteToken\r\n  quoteTokenAdresses: Address\r\n  multiplier?: string\r\n  isTokenOnly?: boolean\r\n  isCommunity?: boolean\r\n  hidden?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  image?: string\r\n  tokenName: string\r\n  tokenLabel: string\r\n  tokenAddress: string\r\n  stakingTokenName: QuoteToken\r\n  stakingLimit?: number\r\n  stakingTokenAddress?: string\r\n  stakingTokenDecimals?: number\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  projectLink: string\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  isBush?: boolean\r\n  bushVersion?: number\r\n  tokenDecimals: number\r\n  depositFee?: number\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  bunnyId: number\r\n  video?: NftVideo\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from '../config/constants/farms'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  \r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 66, // V0\r\n    tokenName: 'BUSD',\r\n    tokenLabel: 'BUSD v0',\r\n    tokenAddress: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    stakingTokenName: QuoteToken.BBQ,\r\n    stakingTokenAddress: '0xba26397cdff25f0d26e815d218ef3c77609ae7f1',\r\n    stakingTokenDecimals: 18,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x96960e759a02FB2ca3F5ddb972AB8f08ce00b85c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://koaladefi.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '0.025',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    tokenDecimals: 18,\r\n    isBush: true,\r\n    bushVersion: 0,\r\n  },\r\n  {\r\n    sousId: 67, // V1\r\n    tokenName: 'BUSD',\r\n    tokenLabel: 'BUSD v1',\r\n    tokenAddress: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    stakingTokenName: QuoteToken.BBQ,\r\n    stakingTokenAddress: '0xba26397cdff25f0d26e815d218ef3c77609ae7f1',\r\n    stakingTokenDecimals: 18,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5D5731f0c44d3c8E08407e6029649BD0a78145e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://koaladefi.finance',\r\n    harvest: true,\r\n    tokenPerBlock: '0.009920634921',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    isBush: true,\r\n    bushVersion: 1,\r\n  },\r\n  {\r\n    sousId: 68, // V1\r\n    tokenName: 'WBNB',\r\n    tokenLabel: 'WBNB v1',\r\n    tokenAddress: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    stakingTokenName: QuoteToken.BBQ,\r\n    stakingTokenAddress: '0xba26397cdff25f0d26e815d218ef3c77609ae7f1',\r\n    stakingTokenDecimals: 18,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7eC0A8139085dc0b20c2Ea25A0CD3c1094c55e36',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://www.binance.com',\r\n    harvest: true,\r\n    tokenPerBlock: '0.00003794642857',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    isBush: true,\r\n    bushVersion: 1,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { kebabCase } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Team } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  push as pushToast,\r\n  remove as removeToast,\r\n  clear as clearToast,\r\n} from './actions'\r\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchPrices } from './prices'\r\nimport { QuoteToken } from '../config/constants/types'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Bush\r\n\r\nexport const useBushs = (): Pool[] => {\r\n  const bushs = useSelector((state: State) => state.pools.data)\r\n  return bushs\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 3 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const pid = 1 // BBQ-BNB LP\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n\r\n  // const bnbPriceUSD = usePriceBnbBusd()\r\n  // const pid = 1 // BBQ-BUSD LP\r\n  // const farm = useFarmFromPid(pid)\r\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBusd = (): BigNumber => {\r\n  // const pid = 5 // ETH-BNB LP\r\n  // const bnbPriceUSD = usePriceBnbBusd()\r\n  // const farm = useFarmFromPid(pid)\r\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n  return ZERO\r\n}\r\n\r\nexport const usePriceEthBnb = (): BigNumber => {\r\n  const priceBnbBusd = usePriceBnbBusd()\r\n  const priceEthBusd = usePriceEthBusd()\r\n  return priceEthBusd.div(priceBnbBusd)\r\n}\r\n\r\n// Toasts\r\nexport const useToast = () => {\r\n  const dispatch = useDispatch()\r\n  const helpers = useMemo(() => {\r\n    const push = (toast: Toast) => dispatch(pushToast(toast))\r\n\r\n    return {\r\n      toastError: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n      },\r\n      toastInfo: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n      },\r\n      toastSuccess: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n      },\r\n      toastWarning: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n      },\r\n      push,\r\n      remove: (id: string) => dispatch(removeToast(id)),\r\n      clear: () => dispatch(clearToast()),\r\n    }\r\n  }, [dispatch])\r\n\r\n  return helpers\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  return prices[token.toLowerCase()]\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms()\r\n  const bushs = useBushs()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const cakePrice = usePriceCakeBusd()\r\n  let value = new BigNumber(0)\r\n\r\n  // farms\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.lpTotalInQuoteToken) {\r\n      let val\r\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n        val = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n        val = cakePrice.times(farm.lpTotalInQuoteToken)\r\n      } else {\r\n        val = farm.lpTotalInQuoteToken\r\n      }\r\n      value = value.plus(val)\r\n    }\r\n  }\r\n\r\n  // bush (pools)\r\n  for (let i = 0; i < bushs.length; i++) {\r\n    const bush = bushs[i]\r\n\r\n    const bushValue = new BigNumber(bush.totalStaked).times(cakePrice).div(new BigNumber(10).pow(bush.tokenDecimals))\r\n\r\n    if (!bushValue.isNaN()) {\r\n      value = value.plus(bushValue)\r\n    }\r\n\r\n    // console.log(bush.tokenName, bushValue.toJSON())\r\n  }\r\n\r\n  return value\r\n}\r\n","import contracts from './contracts'\r\nimport { FarmConfig, QuoteToken } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 0,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BBQ',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58c8d0fca907b5298471366b87917889192571b2', // BBQ-BNB LP\r\n    },\r\n    tokenSymbol: 'BBQ',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: contracts.cake[56],\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },  \r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'ADA',\r\n    isTokenOnly: true,\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf35145e28e1dd67055221739d8554e0b5c7adcd5', // ADA-BUSD LP\r\n    },\r\n    tokenSymbol: 'ADA',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'CAKE',\r\n    isTokenOnly: true,\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6', // CAKE-BNB LP\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 4,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'WBNB',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BNB \r\n    },\r\n    tokenSymbol: 'WBNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: contracts.wbnb[56],\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'BUSD',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BUSD \r\n    },\r\n    tokenSymbol: 'BUSD',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: contracts.busd[56],\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'BBQ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58c8d0fca907b5298471366b87917889192571b2', // BBQ-BNB LP\r\n    },\r\n    tokenSymbol: 'BBQ',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: contracts.cake[56],\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BBQ-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe9bba5684f9a42335a52204fe3a55ae8452d7c17', // BBQ-BUSD LP\r\n    },\r\n    tokenSymbol: 'BBQ',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: contracts.cake[56],\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'BBQ-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd0fccf1eda02e6176c30a71cdd2d4ae43656fd38', // BBQ-USDT LP\r\n    },\r\n    tokenSymbol: 'BBQ',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: contracts.cake[56],\r\n    },\r\n    quoteTokenSymbol: QuoteToken.USDT,\r\n    quoteTokenAdresses: contracts.usdt,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0', // CAKE-BUSD LP\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    hidden: true, \r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'BNB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BNB-BUSD LP\r\n    },\r\n    tokenSymbol: 'BNB',\r\n    hidden: true, \r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // {\r\n  //   pid: 2,\r\n  //   lpSymbol: 'CAKE',\r\n  //   isTokenOnly: true,\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82', // CAKE-BNB LP\r\n  //   },\r\n  //   tokenSymbol: 'CAKE',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BNB,\r\n  //   quoteTokenAdresses: contracts.wbnb,\r\n  // },\r\n  // {\r\n  //   pid: 2,\r\n  //   isTokenOnly: true,\r\n  //   lpSymbol: 'CAKE',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6', // CAKE-BNB LP\r\n  //   },\r\n  //   tokenSymbol: 'CAKE',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BNB,\r\n  //   quoteTokenAdresses: contracts.wbnb,\r\n  // },\r\n  // {\r\n  //   pid: 1,\r\n  //   lpSymbol: 'BBQ-BNB LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x31f531a1619b8ecd8d5b69f01323414454eddb25',\r\n  //   },\r\n  //   tokenSymbol: 'BBQ',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: contracts.cake[56],\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BNB,\r\n  //   quoteTokenAdresses: contracts.wbnb,\r\n  // },\r\n  // {\r\n  //   pid: 2,\r\n  //   lpSymbol: 'BBQ-BUSD LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x58c8d0fca907b5298471366b87917889192571b2',\r\n  //   },\r\n  //   tokenSymbol: 'BBQ',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: contracts.cake[56],\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BUSD,\r\n  //   quoteTokenAdresses: contracts.busd,\r\n  // },\r\n  // {\r\n  //   pid: 6,\r\n  //   lpSymbol: 'WBNB',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BNB-BUSD\r\n  //   },\r\n  //   tokenSymbol: 'WBNB',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BUSD,\r\n  //   quoteTokenAdresses: contracts.busd,\r\n  // },\r\n  // {\r\n  //   pid: 3,\r\n  //   lpSymbol: 'USDT-BUSD LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\r\n  //   },\r\n  //   tokenSymbol: 'USDT',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x55d398326f99059ff775485246999027b3197955',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BUSD,\r\n  //   quoteTokenAdresses: contracts.busd,\r\n  // },\r\n  // {\r\n  //   pid: 4,\r\n  //   isTokenOnly: true,\r\n  //   lpSymbol: 'BTCB',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\r\n  //   },\r\n  //   tokenSymbol: 'BTCB',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BUSD,\r\n  //   quoteTokenAdresses: contracts.busd,\r\n  // },\r\n  // {\r\n  //   pid: 5,\r\n  //   isTokenOnly: true,\r\n  //   lpSymbol: 'ETH',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494', // ETH-BUSD LP\r\n  //   },\r\n  //   tokenSymbol: 'ETH',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BUSD,\r\n  //   quoteTokenAdresses: contracts.busd,\r\n  // },\r\n  // {\r\n  //   pid: 7,\r\n  //   lpSymbol: 'CAKE-BNB LP',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\r\n  //   },\r\n  //   tokenSymbol: 'CAKE',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BNB,\r\n  //   quoteTokenAdresses: contracts.wbnb,\r\n  // },\r\n  // {\r\n  //   pid: 8,\r\n  //   isTokenOnly: true,\r\n  //   lpSymbol: 'ADA',\r\n  //   lpAddresses: {\r\n  //     97: '',\r\n  //     56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf', // ADA-BNB\r\n  //   },\r\n  //   tokenSymbol: 'ADA',\r\n  //   tokenAddresses: {\r\n  //     97: '',\r\n  //     56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47', // ADA\r\n  //   },\r\n  //   quoteTokenSymbol: QuoteToken.BNB,\r\n  //   quoteTokenAdresses: contracts.wbnb,\r\n  // },\r\n]\r\n\r\nexport default farms\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport default web3NoAccount\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryAddress,\r\n  getLotteryTicketAddress,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoAbi from 'config/abi/ifo.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\n\r\nconst getContract = (abi: any, address: string, web3?: Web3) => {\r\n  const _web3 = web3 ?? web3NoAccount\r\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, web3?: Web3) => {\r\n  return getContract(bep20Abi, address, web3)\r\n}\r\nexport const getIfoContract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoAbi, address, web3)\r\n}\r\nexport const getSouschefContract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getPointCenterIfoContract = (web3?: Web3) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\r\n}\r\nexport const getCakeContract = (web3?: Web3) => {\r\n  return getContract(cakeAbi, getCakeAddress(), web3)\r\n}\r\nexport const getProfileContract = (web3?: Web3) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\r\n}\r\nexport const getPancakeRabbitContract = (web3?: Web3) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\r\n}\r\nexport const getBunnyFactoryContract = (web3?: Web3) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\r\n}\r\nexport const getBunnySpecialContract = (web3?: Web3) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\r\n}\r\nexport const getLotteryContract = (web3?: Web3) => {\r\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\r\n}\r\nexport const getLotteryTicketContract = (web3?: Web3) => {\r\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\r\n}\r\nexport const getMasterchefContract = (web3?: Web3) => {\r\n  return getContract(masterChef, getMasterChefAddress(), web3)\r\n}\r\nexport const getClaimRefundContract = (web3?: Web3) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport bushABIV1 from 'config/abi/bushV1.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStatking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\n  const v1Bushs = poolsConfig.filter((p) => p.bushVersion === 1)\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingTokenAddress,\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsV1Bushs = v1Bushs.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'depositFeeToBurn', // only available for version > 0\r\n      sousId: poolConfig.sousId,\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n  const V1BushsDepositFee = await multicall(bushABIV1, callsV1Bushs)\r\n\r\n  const bushDepositFees = {}\r\n  v1Bushs.forEach((poolConfig, index) => {\r\n    bushDepositFees[poolConfig.sousId] = V1BushsDepositFee[index][0]\r\n  })\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n      depositFee: bushDepositFees[p.sousId] ?? 0,\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n      depositFee: bushDepositFees[p.sousId] ?? 0,\r\n    })),\r\n  ]\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3NoAccount()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingBBQ('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStatking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n    if (connectorId) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { useEffect } from 'react'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  useEffect(() => {\r\n    document.title = `BarbecueFinance - $${Number(cakePriceUsd).toLocaleString(undefined, {\r\n      minimumFractionDigits: 3,\r\n      maximumFractionDigits: 3,\r\n    })}`\r\n  })\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap-libs/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\r\nimport contracts from 'config/constants/contracts'\r\nimport { BASE_URL, BASE_EXCHANGE_URL } from 'config'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: `${BASE_EXCHANGE_URL}/#/swap?inputCurrency=BNB&outputCurrency=${contracts.cake[56]}`,\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: `${BASE_EXCHANGE_URL}/#/add/${contracts.cake[56]}/ETH`,\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   label: 'Trade',\r\n  //   icon: 'TradeIcon',\r\n  //   href: '/trade',\r\n  //   calloutClass: 'soon',\r\n  // },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Pools',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  // {\r\n  //   label: 'Lottery',\r\n  //   icon: 'TicketIcon',\r\n  //   href: '/lottery',\r\n  // },\r\n  // {\r\n  //   label: 'Collectibles',\r\n  //   icon: 'NftIcon',\r\n  //   href: '/collectibles',\r\n  // },\r\n  // {\r\n  //   label: 'Teams & Profile',\r\n  //   icon: 'GroupsIcon',\r\n  //   calloutClass: 'rainbow',\r\n  //   items: [\r\n  //     {\r\n  //       label: 'Leaderboard',\r\n  //       href: '/teams',\r\n  //     },\r\n  //     {\r\n  //       label: 'Task Center',\r\n  //       href: '/profile/tasks',\r\n  //     },\r\n  //     {\r\n  //       label: 'Your Profile',\r\n  //       href: '/profile',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  // {\r\n  //   label: 'Info',\r\n  //   icon: 'InfoIcon',\r\n  //   items: [\r\n  //     {\r\n  //       label: 'Overview',\r\n  //       href: 'https://pancakeswap.info',\r\n  //     },\r\n  //     {\r\n  //       label: 'Tokens',\r\n  //       href: 'https://pancakeswap.info/tokens',\r\n  //     },\r\n  //     {\r\n  //       label: 'Pairs',\r\n  //       href: 'https://pancakeswap.info/pairs',\r\n  //     },\r\n  //     {\r\n  //       label: 'Accounts',\r\n  //       href: 'https://pancakeswap.info/accounts',\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    label: 'IGO (Presale)',\r\n    icon: 'IfoIcon',\r\n    href: '/ifo',\r\n    calloutClass: '',\r\n  },\r\n  {\r\n    label: 'Lottery (soon)',\r\n    icon: 'TicketIcon',\r\n    href: '',\r\n    calloutClass: 'soon',\r\n  },\r\n  {\r\n    label: 'The Grill (soon)',\r\n    icon: 'TheGrillIcon',\r\n    href: '',\r\n    calloutClass: 'soon',\r\n  },\r\n  {\r\n    label: 'NFT Market (soon)',\r\n    icon: 'NFTMarketIcon',\r\n    href: '',\r\n    calloutClass: 'soon',\r\n  },\r\n  // {\r\n  //   label: 'Borrow (soon)',\r\n  //   icon: 'BorrowIcon',\r\n  //   href: '',\r\n  //   calloutClass: 'soon',\r\n  // },\r\n  {\r\n    label: 'Price Chart',\r\n    icon: 'InfoIcon',\r\n    href: '/graph',\r\n    calloutClass: 'highlight',\r\n  },\r\n  {\r\n    label: 'TechRate Audit ✅',\r\n    icon: 'AuditIcon',\r\n    href: 'https://github.com/TechRate/Smart-Contract-Audits/blob/main/Barbecue%20Full%20Smart%20Contract%20Security%20Audit.pdf',\r\n    calloutClass: '',\r\n  },\r\n  {\r\n    label: 'More',\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'GitHub',\r\n        href: 'https://github.com/barbecueswapfinance',\r\n      },\r\n      // {\r\n      //   label: 'Docs',\r\n      //   href: '',\r\n      // },\r\n      {\r\n        label: 'Twitter',\r\n        href: 'https://twitter.com/BarbecueSwap',\r\n      },\r\n      {\r\n        label: 'Telegram',\r\n        href: 'https://t.co/sP6RlOkpB0?amp=1',\r\n      },\r\n      {\r\n        label: 'Announcements',\r\n        href: 'https://t.co/sP6RlOkpB0?amp=1',\r\n      }\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { profile } = useProfile()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config}\r\n      profile={{\r\n        username: profile?.username,\r\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n        profileLink: '/profile',\r\n        noProfileLink: '/profile',\r\n        showPip: !profile?.username,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ToastContainer, Toast } from '@pancakeswap-libs/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { State } from 'state/types'\r\n\r\nconst ToastListener = () => {\r\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\r\n  const { remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap-libs/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default EasterEgg\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\r\n\r\nexport const BULL_NFT = 11\r\nexport const HICCUP_NFT = 10\r\n\r\nconst bunnySpecialContract = getBunnySpecialContract()\r\n\r\nconst useGetBullHiccupClaimableStatus = () => {\r\n  const [hasChecked, setHasChecked] = useState(false)\r\n  const [claimables, setClaimables] = useState({\r\n    [BULL_NFT]: false,\r\n    [HICCUP_NFT]: false,\r\n  })\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const checkClaimableStatus = async () => {\r\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\r\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\r\n        .call()) as boolean[]\r\n\r\n      setClaimables({\r\n        [BULL_NFT]: isBullClaimable,\r\n        [HICCUP_NFT]: isHiccupClaimable,\r\n      })\r\n      setHasChecked(true)\r\n    }\r\n\r\n    if (account) {\r\n      checkClaimableStatus()\r\n    }\r\n  }, [account, setClaimables, setHasChecked])\r\n\r\n  return {\r\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\r\n    isBullClaimable: claimables[BULL_NFT],\r\n    isHiccupClaimable: claimables[HICCUP_NFT],\r\n    hasChecked,\r\n  }\r\n}\r\n\r\nexport default useGetBullHiccupClaimableStatus\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@pancakeswap-libs/uikit'\r\nimport history from 'routerHistory'\r\nimport { delay } from 'lodash'\r\nimport useI18n from 'hooks/useI18n'\r\nimport confetti from 'canvas-confetti'\r\nimport nftList from 'config/constants/nfts'\r\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\r\n\r\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\r\n  isBullClaimable: boolean\r\n  isHiccupClaimable: boolean\r\n}\r\n\r\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\r\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\r\n\r\nconst NftImage = styled.img`\r\n  border-radius: 50%;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst showConfetti = () => {\r\n  confetti({\r\n    resize: true,\r\n    particleCount: 200,\r\n    startVelocity: 30,\r\n    gravity: 0.5,\r\n    spread: 350,\r\n    origin: {\r\n      x: 0.5,\r\n      y: 0.3,\r\n    },\r\n  })\r\n}\r\n\r\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\r\n  if (isBullClaimable && isHiccupClaimable) {\r\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\r\n  }\r\n\r\n  if (isBullClaimable) {\r\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n  }\r\n\r\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n}\r\n\r\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\r\n  isBullClaimable,\r\n  isHiccupClaimable,\r\n  onDismiss,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const collectibleMessage =\r\n    isBullClaimable && isHiccupClaimable\r\n      ? TranslateString(999, 'You won two Collectibles!')\r\n      : TranslateString(999, 'You won a collectible!')\r\n\r\n  // This is required because the modal exists outside the Router\r\n  const handleClick = () => {\r\n    onDismiss()\r\n    history.push('/collectibles')\r\n  }\r\n\r\n  useEffect(() => {\r\n    delay(showConfetti, 100)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\r\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\r\n          {collectibleMessage}\r\n        </Text>\r\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimBullHiccupNftModal\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useModal } from '@pancakeswap-libs/uikit'\r\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\r\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\r\n\r\n/**\r\n * This is represented as a component rather than a hook because we need to keep it\r\n * inside the Router.\r\n *\r\n * TODO: Put global checks in redux or make a generic area to house global checks\r\n */\r\nconst GlobalCheckBullHiccupClaimStatus = () => {\r\n  const hasDisplayedModal = useRef(false)\r\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\r\n  const [onPresentGiftModal] = useModal(\r\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\r\n  )\r\n  const { account } = useWeb3React()\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\r\n      onPresentGiftModal()\r\n      hasDisplayedModal.current = true\r\n    }\r\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\r\n\r\n  // Reset the check flag when account changes\r\n  useEffect(() => {\r\n    hasDisplayedModal.current = false\r\n  }, [account, hasDisplayedModal])\r\n\r\n  return null\r\n}\r\n\r\nexport default GlobalCheckBullHiccupClaimStatus\r\n","import React, { useEffect, Suspense, lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport ToastListener from './components/ToastListener'\r\nimport PageLoader from './components/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport Pools from './views/Pools'\r\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\r\nimport history from './routerHistory'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\nconst Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Collectibles = lazy(() => import('./views/Collectibles'))\r\nconst Teams = lazy(() => import('./views/Teams'))\r\nconst Team = lazy(() => import('./views/Teams/Team'))\r\nconst Profile = lazy(() => import('./views/Profile'))\r\nconst Bush = lazy(() => import('./views/Bush'))\r\nconst Ifo = lazy(() => import('./views/Ifos'))\r\nconst Graph = lazy(() => import('./views/Graph'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  // Monkey patch warn() because of web3 flood\r\n  // To be removed when web3 1.3.5 is released\r\n  useEffect(() => {\r\n    console.warn = () => null\r\n  }, [])\r\n\r\n  useEagerConnect()\r\n  useFetchPublicData()\r\n  useFetchProfile()\r\n  useFetchPriceList()\r\n  useGetDocumentTitlePrice()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <Suspense fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Farms tokenMode />\r\n            </Route>\r\n            <Route path=\"/grill\">\r\n              <Bush />\r\n            </Route>\r\n            <Route path=\"/ifo\">\r\n              <Ifo />\r\n            </Route>\r\n            <Route path=\"/graph\">\r\n              <Graph />\r\n            </Route>\r\n            <Route path=\"/lottery\">\r\n              <Lottery />\r\n            </Route>\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <GlobalCheckBullHiccupClaimStatus />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport toastsReducer from './toasts'\r\nimport poolsReducer from './pools'\r\nimport pricesReducer from './prices'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\n\r\nexport default configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    toasts: toastsReducer,\r\n    pools: poolsReducer,\r\n    prices: pricesReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    achievements: achievementsReducer,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { BlockContextProvider } from 'contexts/BlockContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ThemeContextProvider>\r\n          <LanguageContextProvider>\r\n            <BlockContextProvider>\r\n              <RefreshContextProvider>\r\n                <ModalProvider>{children}</ModalProvider>\r\n              </RefreshContextProvider>\r\n            </BlockContextProvider>\r\n          </LanguageContextProvider>\r\n        </ThemeContextProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ES = { code: 'es', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  // AR,\r\n  // CA,\r\n  // ZHCN,\r\n  // ZHTW,\r\n  // CS,\r\n  // DA,\r\n  // DE,\r\n  // NL,\r\n  // FIL,\r\n  // FI,\r\n  // FR,\r\n  // EL,\r\n  // HI,\r\n  // HU,\r\n  // ID,\r\n  // IT,\r\n  // JA,\r\n  // KO,\r\n  // PTBR,\r\n  // RO,\r\n  // RU,\r\n  // SR,\r\n  // ES,\r\n  // SVSE,\r\n  // TA,\r\n  // TR,\r\n  // UK,\r\n  // VI,\r\n]\r\n","import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { Profile } from 'state/types'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport nfts from 'config/constants/nfts'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileContract = getProfileContract()\r\nconst rabbitContract = getPancakeRabbitContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\r\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\r\n\r\n// Thunks\r\nexport const fetchProfile = (address: string) => async (dispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","/* eslint-disable no-param-reassign */\r\nimport { Toast } from '@pancakeswap-libs/uikit'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ToastsState } from '../types'\r\n\r\nconst initialState: ToastsState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state: ToastsState) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport { clear, remove, push } from './toasts'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\r\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\r\n"],"sourceRoot":""}