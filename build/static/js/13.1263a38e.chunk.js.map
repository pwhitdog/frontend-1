{"version":3,"sources":["views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx","hooks/useContract.ts","utils/formatBalance.ts","hooks/useWeb3.ts","components/UnlockButton.tsx","hooks/useTokenBalance.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx"],"names":["ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDS","initialState","isInitialized","currentStep","teamId","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","pow","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","methods","canMint","call","fetchData","actions","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","styled","div","theme","colors","textSubtle","steps","translationId","label","Header","TranslateString","useI18n","useContext","as","size","color","mb","map","index","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","isDisabled","Body","tertiary","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","props","checked","e","target","style","flex","NextStepButton","endIcon","useProfileCreation","nfts","nftList","filter","nft","includes","bunnyId","minimumCakeBalanceToMint","Mint","useState","setBunnyId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","useApproveConfirmTransaction","onRequiresApproval","options","address","response","currentAllowance","onApprove","approve","toJSON","send","from","onConfirm","mintNFT","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","fontSize","bold","num","images","md","parseInt","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","onClick","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","useGetWalletNfts","isLoading","nftsInWallet","pancakeRabbitsContract","usePancakeRabbits","toastError","useToast","bunnyIds","Object","keys","nftWalletItem","Number","walletNfts","length","to","marginLeft","height","walletNft","firstTokenId","tokenIds","getPancakeProfileAddress","on","error","message","spin","undefined","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","team","id","isJoinable","mr","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useDispatch","toastSuccess","createProfile","fetchProfile","title","justifyContent","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknoledged","library","web3","useWeb3","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","data","bnbSign","signature","eth","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","Date","NEW","fetchUser","width","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","makeBatchRequest","fetchCosts","TeamAvatar","img","card","background","mediaQueries","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","Button","attrs","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","flexDirection","getFullDisplayBalance","PauseProfilePage","setIsAcknowledged","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","HeaderWrapper","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","ComingSoon","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","p","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","StatBox","icon","PrizeIcon","subtitle","Profile","useFetchAchievements","PageLoader","exact","path","useIfoContract","getIfoContract","useERC20","getBep20Contract","getCakeContract","getPancakeRabbitContract","useLottery","getLotteryContract","useLotteryTicket","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","getSouschefContract","getPointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","balance","decimals","displayBalance","dividedBy","toNumber","toFixed","refEth","useRef","Web3","getWeb3NoAccount","setweb3","current","useAuth","login","logout","onPresentConnectModal","useWalletModal","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","contract","balanceOf","fetchBalance","fastRefresh","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","payload","noop","handlePreApprove","then","result","console","lastUpdated","now","timestamp","getTokenIdAndBunnyId","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenUri","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","fetchNfts","SecondaryCard","defaultProps","Icon","textTransform"],"mappings":"+JA6BKA,E,kJC5BQC,EAAgB,GAEhBC,EAAoB,CAAC,EAAG,EAAG,EAAG,EAAG,G,OCOxCC,EAAsB,CAC1BC,eAAe,EACfC,YAAa,EACbC,OAAQ,KACRC,QAAS,KACTC,SAAU,GACVC,oBAAqB,IAAIC,IATTC,KAS8BC,aAAa,IAAIF,IAAU,IAAIG,IAAI,KACjFC,UAAW,IAAIJ,IATCK,KASoBH,aAAa,IAAIF,IAAU,IAAIG,IAAI,MAGnEG,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEb,eAAe,EACfC,YAAaa,EAAOE,OAExB,IAAK,YACH,OAAO,2BACFH,GADL,IAEEZ,YAAaY,EAAMZ,YAAc,IAErC,IAAK,WACH,OAAO,2BACFY,GADL,IAEEX,OAAQY,EAAOZ,SAEnB,IAAK,cACH,OAAO,2BACFW,GADL,IAEEV,QAASW,EAAOX,UAEpB,IAAK,eACH,OAAO,2BACFU,GADL,IAEET,SAAUU,EAAOV,WAErB,QACE,OAAOS,IAIAI,EAAyBC,wBAA2B,MA2ClDC,EAzC2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,qBAAWT,EAASb,GAA9C,mBAAOc,EAAP,KAAcS,EAAd,KACQC,EAAYC,cAAZD,QAGRE,qBAAU,WACR,IAAIC,GAAe,EAiBnB,OAJIH,GAXW,uCAAG,8BAAAI,EAAA,6DACVC,EAAuBC,cADb,SAEMD,EAAqBE,QAAQC,QAAQR,GAASS,OAFpD,OAEVD,EAFU,OAGhBT,EAAS,CAAEP,KAAM,aAAcC,KAAMe,EAAU,EAAI,IAG/CL,GACFJ,EAAS,CAAEP,KAAM,aAAcC,KAAMe,EAAU,EAAI,IAPrC,2CAAH,oDAYbE,GAGK,WACLP,GAAe,KAEhB,CAACH,EAASD,IAEb,IAAMY,EAAkCC,mBACtC,iBAAO,CACLC,SAAU,kBAAMd,EAAS,CAAEP,KAAM,eACjCsB,UAAW,SAACnC,GAAD,OAAoBoB,EAAS,CAAEP,KAAM,WAAYb,YAC5DoC,WAAY,SAACnC,GAAD,OAAqBmB,EAAS,CAAEP,KAAM,cAAeZ,aACjEoC,YAAa,SAACnC,GAAD,OAAsBkB,EAAS,CAAEP,KAAM,eAAgBX,iBAEtE,CAACkB,IAGH,OAAO,cAACL,EAAuBuB,SAAxB,CAAiCC,MAAK,2BAAO5B,GAAP,IAAcqB,YAApD,SAAgEd,KCvFnEsB,EAAUC,IAAOC,IAAV,8GACgB,qBAAGC,MAAkBC,OAAOC,cAKnDC,EAAQ,CACZ,CAAEC,cAAe,IAAKC,MAAO,2BAC7B,CAAED,cAAe,IAAKC,MAAO,uBAC7B,CAAED,cAAe,IAAKC,MAAO,aAC7B,CAAED,cAAe,IAAKC,MAAO,aA+BhBC,EA5BU,WACvB,IAAMC,EAAkBC,cAChBpD,EAAgBqD,qBAAWrC,GAA3BhB,YAER,OACE,eAACyC,EAAD,WACE,cAAC,IAAD,CAASa,GAAG,KAAKC,KAAK,MAAMC,MAAM,YAAYC,GAAG,MAAjD,SACGN,EAAgB,IAAK,mBAExB,cAAC,IAAD,CAASG,GAAG,KAAKC,KAAK,KAAKE,GAAG,MAA9B,SACGN,EAAgB,IAAK,mEAExB,cAAC,KAAD,CAAMK,MAAM,aAAaC,GAAG,OAA5B,SACGN,EAAgB,IAAK,0BAExB,cAAC,IAAD,UACGJ,EAAMW,KAAI,WAA2BC,GAAW,IAAnCX,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,MAC3B,OACE,cAAC,KAAD,CAAkBO,MAAOG,GAAS3D,EAAc,OAAS,eAAzD,SACGmD,EAAgBH,EAAeC,IADvBA,Y,SChBRW,EAhBY,WACzB,IAAMT,EAAkBC,cAExB,OACE,gCACE,cAAC,IAAD,CAASG,KAAK,KAAKE,GAAG,MAAtB,SACGN,EAAgB,IAAK,WAExB,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,OAAhB,SACGN,EAAgB,IAAK,4CAExB,cAACU,EAAA,EAAD,Q,mCCJSC,EALW,SAACC,GAEzB,OADoBC,YAAgBC,eACjBC,IAAIH,I,kBCInBI,EAAazB,YAAO0B,IAAP1B,CAAH,mFACZ,qBAAG2B,WAA8B,uBAK/BC,EAAQ5B,IAAOO,MAAV,0IACC,qBAAGsB,WAA+B,cAAgB,aAIjD,qBAAGA,WAA+B,MAAQ,OAGjDC,GAAO9B,IAAOC,IAAV,yLAEY,qBAAGC,MAAkBC,OAAO4B,YAQ5CC,GAAWhC,IAAOC,IAAV,kDAIRgC,GAAwBjC,IAAOC,IAAV,kNAEA,qBAAGiC,OAsCfC,GA9BqC,SAAC,GAS9C,IARLC,EAQI,EARJA,KACAtC,EAOI,EAPJA,MAOI,IANJuC,iBAMI,SALJC,EAKI,EALJA,MACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACA/D,EAEI,EAFJA,SACGgE,EACC,qFACJ,OACE,cAAChB,EAAD,yBAAYE,UAAWU,EAAWR,WAAYW,EAAUzB,GAAG,QAAW0B,GAAtE,aACE,eAACb,EAAD,CAAOC,WAAYW,EAAnB,UACE,eAACV,GAAD,WACE,cAAC,IAAD,CACEM,KAAMA,EACNM,QAASL,EACTvC,MAAOA,EACPyC,SAAU,SAACI,GAAD,OAAOJ,EAASI,EAAEC,OAAO9C,QACnC0C,SAAUA,EACVK,MAAO,CAAEC,KAAM,UAEjB,cAACd,GAAD,UAAWvD,OAEb,cAACwD,GAAD,CAAuBC,IAAKI,WCpErBS,GAJ+B,SAACN,GAC7C,OAAO,cAAC,IAAD,aAAQO,QAAS,cAAC,IAAD,CAAkBlC,MAAM,kBAAuB2B,K,UCG1DQ,GAJY,WACzB,OAAOtC,qBAAWrC,ICWd4E,GAAOC,IAAQC,QAAO,SAACC,GAAD,OAASlG,EAAkBmG,SAASD,EAAIE,YAC9DC,GAA2B,IAAI7F,IRhBZ,GQgBiCE,aAAa,IAAIF,IAAU,IAAIG,IAAI,KAuG9E2F,GArGQ,WACrB,MAA8BC,mBAAS,MAAvC,mBAAOH,EAAP,KAAgBI,EAAhB,KACA,EAAoDV,KAA5C1D,EAAR,EAAQA,QAAS7B,EAAjB,EAAiBA,oBAAqBK,EAAtC,EAAsCA,UAE9Ba,EAAYC,cAAZD,QACFgF,EAAeC,cACf5E,EAAuB6E,cACvBrD,EAAkBC,cAClBqD,EAAyB3C,EAAkBoC,IACjD,EAOIQ,YAA6B,CAC/BC,mBAAmB,WAAD,4BAAE,8BAAAjF,EAAA,+EAGO4E,EAAazE,QAAQpB,UAAUa,EAASK,EAAqBiF,QAAQC,SAAS9E,OAHrF,cAGV+E,EAHU,OAIVC,EAAmB,IAAI1G,IAAUyG,GAJvB,kBAKTC,EAAiB7C,IAAI9D,IALZ,0DAOT,GAPS,yDAAF,kDAAC,GAUnB4G,UAAW,WACT,OAAOV,EAAazE,QACjBoF,QAAQtF,EAAqBiF,QAAQC,QAASpG,EAAUyG,UACxDC,KAAK,CAAEC,KAAM9F,KAElB+F,UAAW,WACT,OAAO1F,EAAqBE,QAAQyF,QAAQrB,GAASkB,KAAK,CAAEC,KAAM9F,KAEpEiG,UAAW,kBAAMtF,EAAQE,cAzBzBqF,EADF,EACEA,YACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,cACAC,EANF,EAMEA,cAuBF,OACE,qCACE,cAAC,KAAD,CAAMC,SAAS,OAAOtE,MAAM,aAAauE,MAAI,EAA7C,SACG5E,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKC,KAAK,KAAKE,GAAG,OAA9B,SACGN,EAAgB,IAAK,6BAExB,cAAC,KAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,IAAK,6EACnC,cAAC,KAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,IAAK,+DACnC,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,OAAhB,SACGN,EAAgB,IAAK,4FAExB,cAAC,IAAD,CAAMM,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASH,GAAG,KAAKC,KAAK,KAAKE,GAAG,MAA9B,SACGN,EAAgB,IAAK,0BAExB,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAnB,SACGL,EAAgB,IAAK,oEAExB,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,OAAOD,MAAM,aAA7B,SACGL,EAAgB,IAAD,gBR9EH,EQ8EG,SAAiC,CAAE6E,IR9EtC,MQgFdpC,GAAKlC,KAAI,SAACqC,GAGT,OACE,cAAC,GAAD,CAEEjB,KAAK,cACLtC,MAAOuD,EAAIE,QACXjB,MAAK,uBAAkBe,EAAIkC,OAAOC,IAClCnD,UAAWkB,IAAYF,EAAIE,QAC3BhB,SATiB,SAACzC,GAAD,OAAmB6D,EAAW8B,SAAS3F,EAAO,MAU/D0C,SAAUsC,GAAeG,GAAgBD,IAAgBjB,EAP3D,SASE,cAAC,KAAD,CAAMsB,MAAI,EAAV,SAAYhC,EAAIjB,QARXiB,EAAIE,aAYbQ,GACA,cAAC,KAAD,CAAMjD,MAAM,UAAUC,GAAG,OAAzB,SACGN,EAAgB,KAAD,uBRnGL,EQmGK,wBAGpB,cAACiF,GAAA,EAAD,CACEC,kBAA+B,OAAZpC,GAAoByB,GAAeC,GAAgBF,EACtED,YAAaA,EACbc,mBAAoBb,GAAcC,IAAgBjB,EAClDkB,aAAcA,EACdX,UAAWY,EACXP,UAAWQ,SAIjB,cAAC,GAAD,CAAgBU,QAAStG,EAAQE,SAAU+C,UAAWwC,EAAtD,SACGvE,EAAgB,IAAK,mB,mBClGxBqF,GAAO9F,YAAO+F,KAAP/F,CAAH,2CACC,qBAAGE,MAAkBC,OAAO6F,WAGjCC,GAAajG,IAAOC,IAAV,oDA6HDiG,GAzHkB,WAC/B,MAAoCxC,oBAAS,GAA7C,mBAAOqB,EAAP,KAAmBoB,EAAnB,KACA,EAAsCzC,oBAAS,GAA/C,mBAAOoB,EAAP,KAAoBsB,EAApB,KACA,EAA6BzF,qBAAWrC,GAAhCd,EAAR,EAAQA,QAAS+B,EAAjB,EAAiBA,QACXkB,EAAkBC,cACxB,EAA0C2F,eAAlCC,EAAR,EAAQA,UAAiBC,EAAzB,EAAmBrD,KACbsD,EAAyBC,cACvB7H,EAAYC,cAAZD,QACA8H,EAAeC,cAAfD,WACFE,EAAWC,OAAOC,KAAKP,GAAcvF,KAAI,SAAC+F,GAAD,OAAmBC,OAAOD,MACnEE,EAAa9D,IAAQC,QAAO,SAACC,GAAD,OAASuD,EAAStD,SAASD,EAAIE,YAmBjE,OAAK+C,GAAmC,IAAtBW,EAAWC,OAoB3B,qCACE,cAAC,KAAD,CAAM9B,SAAS,OAAOtE,MAAM,aAAauE,MAAI,EAA7C,SACG5E,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKC,KAAK,KAAKE,GAAG,OAA9B,SACGN,EAAgB,IAAK,yBAExB,cAAC,IAAD,CAAMM,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASH,GAAG,KAAKC,KAAK,KAAKE,GAAG,MAA9B,SACGN,EAAgB,IAAK,wBAExB,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAnB,SACGL,EACC,IACA,gGAGJ,eAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,UACGN,EAAgB,IAAK,mDACtB,cAACqF,GAAD,CAAMqB,GAAG,gBAAgBtE,MAAO,CAAEuE,WAAY,OAA9C,SACG3G,EAAgB,IAAK,uBAG1B,cAACwF,GAAD,UACGK,EACC,cAAC,KAAD,CAAUe,OAAO,OAAOtG,GAAG,SAE3BkG,EAAWjG,KAAI,SAACsG,GACd,IAAOC,EAAP,YAAuBhB,EAAae,EAAU/D,SAASiE,SAAvD,MAEA,OACE,cAAC,GAAD,CACEpF,KAAK,iBAELtC,MAAOyH,EACPjF,MAAK,uBAAkBgF,EAAU/B,OAAOC,IACxCnD,UAAWkF,IAAiB/J,EAC5B+E,SAAU,SAACzC,GAAD,OAAmBP,EAAQI,WAAW8F,SAAS3F,EAAO,MANlE,SAQE,cAAC,KAAD,CAAMuF,MAAI,EAAV,SAAYiC,EAAUlF,QANjBkF,EAAU/D,cAYzB,cAAC,IAAD,CAAS3C,GAAG,KAAKC,KAAK,KAAKE,GAAG,MAA9B,SACGN,EAAgB,IAAK,oCAExB,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EACC,IACA,mLAGJ,cAAC,IAAD,CACE6F,UAAWxB,EACXtC,SAAUuC,GAAcD,GAA2B,OAAZtH,EACvCqI,QA/FY,WACpBW,EAAuBrH,QACpBoF,QAAQkD,cAA4BjK,GACpCiH,KAAK,CAAEC,KAAM9F,IACb8I,GAAG,WAAW,WACbtB,GAAe,MAEhBsB,GAAG,WAAW,WACbtB,GAAe,GACfD,GAAc,MAEfuB,GAAG,SAAS,SAACC,GACZjB,EAAW,QAAD,OAAUiB,QAAV,IAAUA,OAAV,EAAUA,EAAOC,SAC3BxB,GAAe,OAmFXpD,QAAS8B,EAAc,cAAC,IAAD,CAAe+C,MAAI,EAAC/G,MAAM,sBAAoBgH,EAJvE,SAMGrH,EAAgB,IAAK,kBAI5B,cAAC,GAAD,CAAgBoF,QAAStG,EAAQE,SAAU+C,SAAsB,OAAZhF,IAAqBuH,GAAcD,EAAxF,SACGrE,EAAgB,IAAK,kBApFxB,qCACE,cAAC,IAAD,CAASI,KAAK,KAAKE,GAAG,OAAtB,SACGN,EAAgB,IAAK,WAExB,cAAC,KAAD,CAAM4E,MAAI,EAACD,SAAS,OAAOrE,GAAG,OAA9B,SACGN,EAAgB,IAAK,oEAExB,cAAC,KAAD,CAAMG,GAAG,IAAT,SACGH,EACC,IACA,4Q,qBCSGsH,GA1DQ,WACrB,MAA2C9E,KAA3B+E,EAAhB,EAAQzK,OAAuBgC,EAA/B,EAA+BA,QACzBkB,EAAkBC,cAChBuH,EAAUC,cAAVD,MACFE,EAAsB,SAACrI,GAAD,OAAmBP,EAAQG,UAAU+F,SAAS3F,EAAO,MAC3EsI,EAAa5I,mBAAQ,kBAAM6I,KAAQxB,OAAOyB,OAAOL,MAAS,CAACA,IAEjE,OACE,qCACE,cAAC,KAAD,CAAM7C,SAAS,OAAOtE,MAAM,aAAauE,MAAI,EAA7C,SACG5E,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKC,KAAK,KAAKE,GAAG,OAA9B,SACGN,EAAgB,IAAK,iBAExB,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,OAAhB,SACGN,EAAgB,IAAK,uFAExB,cAAC,IAAD,CAAMM,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASH,GAAG,KAAKC,KAAK,KAAKE,GAAG,MAA9B,SACGN,EAAgB,IAAK,iBAExB,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EACC,IACA,sJAGH2H,GACCA,EAAWpH,KAAI,SAACuH,GACd,OACE,eAAC,GAAD,CAEEnG,KAAK,kBACLtC,MAAOyI,EAAKC,GACZnG,UAAW2F,IAAkBO,EAAKC,GAClClG,MAAK,wBAAmBiG,EAAKhD,OAAOC,IACpCjD,SAAU4F,EACV3F,UAAW+F,EAAKE,WAPlB,UASE,cAAC,KAAD,CAAMpD,MAAI,EAAV,SAAYkD,EAAKnG,OACjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAesG,GAAG,QAClB,cAAC,KAAD,UAAOH,EAAKI,MAAMC,wBAXfL,EAAKnG,cAkBtB,cAAC,GAAD,CAAgByD,QAAStG,EAAQE,SAAU+C,SAA4B,OAAlBwF,EAArD,SACGvH,EAAgB,IAAK,mB,uECuBfoI,GApEsC,SAAC,GAO/C,IANLjK,EAMI,EANJA,QACArB,EAKI,EALJA,OACAC,EAII,EAJJA,QACAE,EAGI,EAHJA,oBACAK,EAEI,EAFJA,UACA+K,EACI,EADJA,UAEMrI,EAAkBC,cAClBqI,EAAkBC,cAClBxC,EAAyBC,cACzB9H,EAAWsK,eACTC,EAAiBvC,cAAjBuC,aACFtF,EAAeC,cAErB,EAOIG,YAA6B,CAC/BC,mBAAmB,WAAD,4BAAE,8BAAAjF,EAAA,+EAEO4E,EAAazE,QAAQpB,UAAUa,EAASmK,EAAgB7E,QAAQC,SAAS9E,OAFhF,cAEV+E,EAFU,OAGVC,EAAmB,IAAI1G,IAAUyG,GAHvB,kBAITC,EAAiB7C,IAAI9D,IAJZ,0DAMT,GANS,yDAAF,kDAAC,GASnB4G,UAAW,WACT,OAAOV,EAAazE,QAAQoF,QAAQwE,EAAgB7E,QAAQC,QAASpG,EAAUyG,UAAUC,KAAK,CAAEC,KAAM9F,KAExG+F,UAAW,WACT,OAAOoE,EAAgB5J,QACpBgK,cAAc5L,EAAQiJ,EAAuBtC,QAAQC,QAAS3G,GAC9DiH,KAAK,CAAEC,KAAM9F,KAElBiG,UAAU,WAAD,4BAAE,sBAAA7F,EAAA,sEACHL,EAASyK,aAAaxK,IADnB,OAETkK,IACAI,EAAa,oBAHJ,2CAAF,kDAAC,KAxBVpE,EADF,EACEA,YACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,cACAC,EANF,EAMEA,cA0BF,OACE,eAAC,IAAD,CAAOkE,MAAM,mBAAmBP,UAAWA,EAA3C,UACE,cAAC,KAAD,CAAMhI,MAAM,aAAaC,GAAG,MAA5B,SACGN,EAAgB,IAAK,mEAExB,eAAC,IAAD,CAAM6I,eAAe,gBAAgBvI,GAAG,OAAxC,UACE,cAAC,KAAD,UAAON,EAAgB,IAAK,UAC5B,cAAC,KAAD,UAAOA,EAAgB,IAAD,UAASvD,EAAT,SAA+B,CAAEoI,IAAKpI,SAE9D,cAACwI,GAAA,EAAD,CACEC,kBAAmBX,GAAeC,GAAgBF,EAClDD,YAAaA,EACbc,mBAAoBb,GAAcC,EAClCC,aAAcA,EACdX,UAAWY,EACXP,UAAWQ,S,SZvDdlI,K,YAAAA,E,kBAAAA,E,WAAAA,M,KAML,IajCYsM,GbiCNC,GAAgBC,kCAChBC,GAAwB,IAAI/L,IAAUT,GAAeW,aAAa,IAAIF,IAAU,IAAIG,IAAI,KAExF6L,GAAY3J,IAAOC,IAAV,wEAKT2J,GAAQ5J,YAAO6J,IAAP7J,CAAH,oDAIL8J,GAAY9J,YAAO+J,IAAP/J,CAAH,2LA4MAgK,GAjMY,WACzB,MAA2CtG,oBAAS,GAApD,mBAAOuG,EAAP,KAAuBC,EAAvB,KACA,EAA+EjH,KAAvE1F,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,SAAU8B,EAAnC,EAAmCA,QAAS7B,EAA5C,EAA4CA,oBAAqBK,EAAjE,EAAiEA,UAC3D0C,EAAkBC,cACxB,EAA6B7B,cAArBD,EAAR,EAAQA,QAASuL,EAAjB,EAAiBA,QACTzD,EAAeC,cAAfD,WACF0D,EAAOC,eACb,EAAkD3G,mBAA4BzG,EAAkBqN,MAAhG,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAA8B9G,oBAAS,GAAvC,mBAAO+G,EAAP,KAAgBC,EAAhB,KACA,EAAkChH,oBAAS,GAA3C,mBAAO4C,EAAP,KAAkBqE,EAAlB,KACA,EAA8BjH,mBAAS,IAAvC,mBAAOkE,EAAP,KAAgBgD,EAAhB,KACM7G,EAAyB3C,EAAkBsI,IACjD,EAA0CmB,aACxC,cAAC,GAAD,CACEpN,SAAUA,EACVD,QAASA,EACToB,QAASA,EACTrB,OAAQA,EACRG,oBAAqBA,EACrBK,UAAWA,KAEb,GATK+M,EAAP,oBAWMC,EAAgBR,IAAsBtN,EAAkB+N,QAExDC,EAAwBC,KAAQ,uCAAC,WAAOpL,GAAP,mBAAAd,EAAA,sEAEnC2L,GAAa,GAFsB,SAGjBQ,MAAM,GAAD,OAAI3B,GAAJ,4BAAqC1J,IAHzB,YAG7BsL,EAH6B,QAK3BC,GAL2B,iBAMjCX,GAAW,GACXE,EAAW,IAPsB,yCASdQ,EAAIE,OATU,QAS3BC,EAT2B,OAUjCb,GAAW,GACXE,EAAU,OAACW,QAAD,IAACA,GAAD,UAACA,EAAM5D,aAAP,aAAC,EAAaC,SAXS,yBAcnC+C,GAAa,GAdsB,2EAAD,sDAgBnC,KAQGxF,EAAa,uCAAG,oCAAAnG,EAAA,kEAElB2L,GAAa,KAFK,OAIAR,QAJA,IAIAA,OAJA,EAIAA,EAASqB,SAJT,iCAKPrB,EAAQqB,QAAQ5M,EAASnB,GALlB,wJAKd,EAA4CgO,UAL9B,2DAMRrB,EAAKsB,IAAIC,SAASC,KAAKnO,EAAUmB,EAAS,MANlC,mCAIZ6M,EAJY,eAQKN,MAAM,GAAD,OAAI3B,GAAJ,uBAAwC,CAClEqC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB9H,QAASvF,EACTsN,SAAUzO,EACVgO,gBAhBc,aAQZrH,EARY,QAoBLiH,GApBK,iBAqBhBb,EAAqBvN,EAAkB+N,SArBvB,yCAuBG5G,EAASkH,OAvBZ,QAuBVC,EAvBU,OAwBhB7E,EAAU,OAAC6E,QAAD,IAACA,GAAD,UAACA,EAAM5D,aAAP,aAAC,EAAaC,SAxBR,0DA2BlBlB,GAAW,uCAAOkB,SAAU,KAAMA,QAAUoE,KAAKC,UAAL,OA3B1B,yBA6BlBtB,GAAa,GA7BK,6EAAH,qDA8DnB,OA1BA7L,qBAAU,WAqBJF,GApBW,uCAAG,gCAAAI,EAAA,+EAESmM,MAAM,GAAD,OAAI3B,GAAJ,sBAA+B5K,IAF7C,cAERwF,EAFQ,gBAGKA,EAASkH,OAHd,OAGRC,EAHQ,OAKVnH,EAASiH,IACLc,EAAcC,aAAeC,aAASd,EAAKe,YAAa,IAAIC,MAClE3B,EAAW,WAAD,OAAYuB,EAAZ,SAEV5M,EAAQK,YAAY2L,EAAKW,UACzB1B,EAAqBvN,EAAkB+N,SACvCN,GAAW,IAEXF,EAAqBvN,EAAkBuP,KAb3B,kDAgBd9F,EAAW,oCAhBG,0DAAH,oDAqBb+F,KAED,CAAC7N,EAAS4L,EAAsBE,EAAYE,EAAYrL,EAASmH,IAGlE,qCACE,cAAC,KAAD,CAAMtB,SAAS,OAAOtE,MAAM,aAAauE,MAAI,EAA7C,SACG5E,EAAgB,IAAD,eAAc,MAEhC,cAAC,IAAD,CAASG,GAAG,KAAKC,KAAK,KAAKE,GAAG,OAA9B,SACGN,EAAgB,KAAM,mBAEzB,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,OAAhB,SACGN,EACC,IACA,wGAGJ,cAAC,IAAD,CAAMM,GAAG,OAAT,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASH,GAAG,KAAKC,KAAK,KAAKE,GAAG,MAA9B,SACGN,EAAgB,KAAM,mBAEzB,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EACC,IACA,uIAGH8J,IAAsBtN,EAAkBqN,KACvC,cAAC,KAAD,CAAUjD,OAAO,OAAOqF,MAAM,UAE9B,eAAC/C,GAAD,WACE,cAACC,GAAD,CACErH,SAlGO,SAACoK,GACpB,IAAQ7M,EAAU6M,EAAM/J,OAAhB9C,MACRP,EAAQK,YAAYE,GACpBmL,EAAsBnL,IAgGV8M,UAAWnP,IAAagN,EACxB9I,UAAWlE,GAAYgN,EACvBoC,UCtMmB,EDuMnBC,UCtMmB,GDuMnBtK,SAAUuI,EACVgC,YAAatM,EAAgB,KAAM,sBACnCX,MAAOrC,IAET,eAACqM,GAAD,WACGxD,GAAa,cAAC,IAAD,CAAeuB,MAAI,KAC/BvB,GAAamE,GAAWhN,GAAY,cAAC,IAAD,CAAeqD,MAAM,aACzDwF,IAAcmE,GAAWhN,GAAY,cAAC,KAAD,CAAaqD,MAAM,kBAIhE,cAAC,KAAD,CAAMA,MAAM,aAAasE,SAAS,OAAO4H,GAAG,MAAMjM,GAAG,OAAO8B,MAAO,CAAEoK,UAAW,QAAhF,SACGrF,IAEH,cAAC,KAAD,CAAMhH,GAAG,IAAIE,MAAM,UAAUC,GAAG,MAAhC,SACGN,EACC,KACA,gJAGJ,uBAAOyM,QAAQ,WAAWrK,MAAO,CAAEsK,QAAS,QAASC,OAAQ,UAAWC,aAAc,QAAtF,SACE,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,qBAAKzK,MAAO,CAAEC,KAAM,QAApB,SACE,cAAC,IAAD,CAAU0F,GAAG,WAAW+E,MAAM,KAAK7K,QAASuH,EAAgB1H,SAvFjD,kBAAM2H,GAAkBD,QAyFrC,cAAC,KAAD,CAAMuD,GAAG,MAAT,SACG/M,EAAgB,KAAM,+EAI7B,cAAC,IAAD,CAAQoF,QAASV,EAAe3C,UAAWiI,GAAWM,GAAiBzE,IAAc2D,EAArF,SACGxJ,EAAgB,IAAK,kBAI5B,cAAC,IAAD,CAAQoF,QAASiF,EAAiCtI,UAAWiI,IAAYM,EAAzE,SACGtK,EAAgB,IAAK,uBAEtBsD,GACA,cAAC,KAAD,CAAMjD,MAAM,UAAU2M,GAAG,OAAzB,SACGhN,EAAgB,KAAD,uBAAuBvD,EAAvB,qBAAyD,CAAEoI,IAAKpI,Uc5M3EwQ,GA/BD,WACZ,MAAuC/M,qBAAWrC,GAA1CjB,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,YAGvB,OAFoBuB,cAAZD,QAMHvB,EAIe,IAAhBC,EACK,cAAC,GAAD,IAGW,IAAhBA,EACK,cAAC,GAAD,IAGW,IAAhBA,EACK,cAACqQ,GAAD,IAGW,IAAhBrQ,EACK,cAAC,GAAD,IAGF,KAnBE,6CAJA,cAAC,EAAD,KCCIsQ,GATS,kBACtB,cAAC,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,UCEOC,GAAc,WACzB,MAAgCpK,oBAAS,GAAzC,mBAAOqK,EAAP,KAAiBC,EAAjB,KACA,EAA8BtK,mBAAS,GAAvC,mBAAOuK,EAAP,KAAgBC,EAAhB,KACQtP,EAAYC,cAAZD,QAEFuP,EAAmBC,uBAAY,WACnCF,GAAW,SAACG,GAAD,OAAiBA,EAAc,OACzC,CAACH,IAcJ,OAZApP,qBAAU,WAOJF,GANkB,uCAAG,8BAAAI,EAAA,6DACjBsP,EAAsBC,cADL,SAEMD,EAAoBnP,QAAQ4O,SAASnP,GAASS,OAFpD,OAEjBmP,EAFiB,OAGvBR,EAAYQ,GAHW,2CAAH,oDAOpBC,KAED,CAAC7P,EAASqP,EAASD,IAEf,CAAED,WAAUI,qBAmENO,GAhE6B,SAAC,GAA8B,IAA5B7J,EAA2B,EAA3BA,UAAWiE,EAAgB,EAAhBA,UACxD,EAAwCpF,oBAAS,GAAjD,mBAAOuB,EAAP,KAAqB0J,EAArB,KACQ/P,EAAYC,cAAZD,QACF6B,EAAkBC,cAChBqN,EAAaD,KAAbC,SACFO,EAAsBM,cAC5B,EAAqCjI,cAA7BuC,EAAR,EAAQA,aAAcxC,EAAtB,EAAsBA,WAoBtB,OACE,cAAC,IAAD,CAAO2C,MAAO5I,EAAgB,IAAK,oBAAqBqI,UAAWA,EAAnE,SACE,sBAAKjG,MAAO,CAAEgM,SAAU,SAAxB,UACE,cAAC,KAAD,CAAMjO,GAAG,IAAT,SAAcH,EAAgB,IAAK,6DACnC,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,MAAhB,SACGN,EACC,IACA,0IAGJ,cAAC,KAAD,CAAMG,GAAG,IAAT,SACGH,EAAgB,IAAK,wFAExB,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,MAAhB,SACGN,EACC,IACA,kGAGJ,cAAC,KAAD,CAAMG,GAAG,IAAIG,GAAG,OAAhB,SACGN,EACC,IACA,uJAGJ,cAAC,IAAD,CACEuC,QAASiC,EAAe,cAAC,IAAD,CAAe4C,MAAI,EAAC/G,MAAM,iBAAoB,KACtEwF,UAAWrB,EACXY,QA9CY,WAClByI,EAAoBnP,QACjB2P,cACArK,KAAK,CAAEC,KAAM9F,IACb8I,GAAG,WAAW,WACbiH,GAAgB,MAEjBjH,GAAG,WAAW,WACbwB,EAAa,YACbrE,IACAiE,OAEDpB,GAAG,SAAS,SAACC,GACZgH,GAAgB,GAChBjI,EAAW,QAAD,OAAUiB,QAAV,IAAUA,OAAV,EAAUA,EAAOC,aAiCzBpF,UAAWuL,EAJb,SAMGtN,EAAgB,IAAK,2B,6BH3FpB8I,K,cAAAA,E,gBAAAA,E,gBAAAA,E,mBAAAA,Q,KAqBZ,I,2EAAMtL,GAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BACFF,GADL,IAEE6Q,YAAa5Q,EAAO6Q,KACpBC,aAAc/Q,EAAM6Q,cAExB,IAAK,cACH,OAAO,2BACF7Q,GADL,IAEE6Q,YAAa7Q,EAAM+Q,aACnBA,aAAc/Q,EAAM6Q,cAExB,QACE,OAAO7Q,IA2BEgR,GAfQ,WACrB,MAA0BxQ,qBAAWT,GAAS,CAC5C8Q,YAAaxF,GAAM4F,MACnBF,aAAc,OAFhB,mBAAO/Q,EAAP,KAAcS,EAAd,KAWA,OAAO,2BAAKT,GAAZ,IAAmBkR,UAND,kBAAMzQ,EAAS,CAAEP,KAAM,WAAY4Q,KAAMzF,GAAM4F,SAMnCE,WALX,kBAAM1Q,EAAS,CAAEP,KAAM,WAAY4Q,KAAMzF,GAAM+F,UAKxBC,WAJvB,kBAAM5Q,EAAS,CAAEP,KAAM,WAAY4Q,KAAMzF,GAAMiG,UAIZC,YAHlC,kBAAM9Q,EAAS,CAAEP,KAAM,WAAY4Q,KAAMzF,GAAMmG,WAGAC,WAFhD,kBAAMhR,EAAS,CAAEP,KAAM,oB,oBIpB7BwR,GAlCY,WACzB,MAA0BlM,mBAAS,CACjCmM,uBAAwB,IAAIlS,IAAU,GACtCmS,qBAAsB,IAAInS,IAAU,GACpCoS,mBAAoB,IAAIpS,IAAU,KAHpC,mBAAOqS,EAAP,KAAcC,EAAd,KAKQvJ,EAAeC,cAAfD,WAyBR,OAvBA5H,qBAAU,YACQ,uCAAG,sCAAAE,EAAA,sEAET+J,EAAkBmH,cAFT,SAGkEC,aAAiB,CAChGpH,EAAgB5J,QAAQ0Q,yBAAyBxQ,KACjD0J,EAAgB5J,QAAQ2Q,uBAAuBzQ,KAC/C0J,EAAgB5J,QAAQ4Q,qBAAqB1Q,OANhC,mCAGRwQ,EAHQ,KAGgBC,EAHhB,KAGsCC,EAHtC,KASfE,EAAS,CACPJ,uBAAwB,IAAIlS,IAAUkS,GACtCC,qBAAsB,IAAInS,IAAUmS,GACpCC,mBAAoB,IAAIpS,IAAUoS,KAZrB,kDAefrJ,EAAW,QAAS,6CAfL,0DAAH,qDAmBhB0J,KACC,CAACH,EAAUvJ,IAEPsJ,GC5BHK,GAAarQ,IAAOsQ,IAAV,kQACM,qBAAGpQ,MAAkBqQ,KAAKC,cAS5C,qBAAGtQ,MAAkBuQ,aAAaC,MAOhCC,GAAgB3Q,IAAOC,IAAV,wSACE,qBAAG2Q,MAYpB,qBAAG1Q,MAAkBuQ,aAAaC,MAMhCG,GAAiB7Q,YAAO8Q,IAAP9Q,CAAH,sHAIhB,qBAAGE,MAAkBuQ,aAAaC,MAevBK,GATqC,SAAC,GAAiB,IAAD,IAAdC,EAAc,EAAdA,QACrD,OACE,eAACL,GAAD,CAAeC,GAAE,iCAAkBI,EAAQ3N,WAA1B,iBAAkB,EAAakC,cAA/B,aAAkB,EAAqBC,IAAxD,WACIwL,EAAQC,UAAY,cAACJ,GAAD,IACtB,cAACR,GAAD,CAAYnO,IAAG,wBAAmB8O,EAAQzI,KAAKhD,OAAO2L,KAAOA,IAAKF,EAAQzI,KAAKnG,WCtC/E+O,GAAgBnR,YAAOoR,KAAQC,MAAM,CAAEC,QAAS,aAAhCtR,CAAH,6MACD,qBAAGE,MAAkBC,OAAOoR,WACnC,qBAAGrR,MAAkBC,OAAOoR,WAInB,qBAAGrR,MAAkBC,OAAOoR,WA2EjCC,GAtE6B,SAAC,GAAwD,IAAtD/B,EAAqD,EAArDA,YAAaJ,EAAwC,EAAxCA,WAAYE,EAA4B,EAA5BA,WAAYzG,EAAgB,EAAhBA,UAClF,EAA0CpF,mBAAS,MAAnD,mBAAO+N,EAAP,KAAsBC,EAAtB,KACQV,EAAYhI,cAAZgI,QACR,EAAuDpB,KAA/CG,EAAR,EAAQA,mBAAoBF,EAA5B,EAA4BA,uBACtB9L,EAAyB3C,EAAkB4P,EAAQC,SAAWlB,EAAqBF,GACnFpP,EAAkBC,cAChB9B,EAAYC,cAAZD,QACFgF,EAAeC,cACf8N,EAAOX,EAAQC,SAAWlB,EAAqBF,EAkBrD,OAZA/Q,qBAAU,WAOJF,GANqB,uCAAG,8BAAAI,EAAA,sEACH4E,EAAazE,QAAQpB,UAAUa,EAAS6I,eAA4BpI,OADjE,OACpB+E,EADoB,OAEpBC,EAAmB,IAAI1G,IAAUyG,GACvCsN,EAAiBrN,EAAiBuN,GAAGD,IAHX,2CAAH,oDAOvBE,KAED,CAACjT,EAAS+S,EAAMD,EAAkB9N,IAEhCoN,EAKH,eAAC,IAAD,CAAM1D,WAAW,SAAShE,eAAe,SAASwI,cAAc,SAAhE,UACE,cAAC,GAAD,CAAed,QAASA,IACxB,cAAC,IAAD,CAAM1D,WAAW,SAASzK,MAAO,CAAEwE,OAAQ,QAAUiC,eAAe,SAApE,SACE,cAAC,KAAD,CAAM1I,GAAG,IAAIE,MAAM,UAAnB,UACIiD,GACAtD,EAAgB,IAAD,UAASsR,aAAsBhC,GAA/B,6CAGpBiB,EAAQC,SACP,qCACE,cAAC,IAAD,CACEvE,MAAM,OACN3L,GAAG,MACH8E,SAA2B,IAAlB4L,EAAyBhC,EAAcJ,EAChD7M,UAAWuB,GAA4C,OAAlB0N,EAJvC,SAMGhR,EAAgB,IAAK,wBAExB,cAAC0Q,GAAD,CAAezE,MAAM,OAAO7G,QAAS0J,EAArC,SACG9O,EAAgB,IAAK,2BAI1B,cAAC,IAAD,CACEiM,MAAM,OACN3L,GAAG,MACH8E,SAA2B,IAAlB4L,EAAyBhC,EAAcJ,EAChD7M,UAAWuB,GAA4C,OAAlB0N,EAJvC,SAMGhR,EAAgB,IAAK,wBAG1B,cAAC,IAAD,CAAQ6Q,QAAQ,OAAO5E,MAAM,OAAO7G,QAASiD,EAA7C,SACGrI,EAAgB,IAAK,qBArCnB,MC4BIuR,GA1E2C,SAAC,GAAmB,IAAjBlJ,EAAgB,EAAhBA,UAC3D,EAA4CpF,oBAAS,GAArD,mBAAOuG,EAAP,KAAuBgI,EAAvB,KACA,EAAwCvO,oBAAS,GAAjD,mBAAOuB,EAAP,KAAqB0J,EAArB,KACQqC,EAAYhI,cAAZgI,QACAnB,EAA2BD,KAA3BC,uBACFpP,EAAkBC,cAClBwR,EAAyBC,cACvBvT,EAAYC,cAAZD,QACR,EAAqC+H,cAA7BuC,EAAR,EAAQA,aAAcxC,EAAtB,EAAsBA,WAChB/H,EAAWsK,eAwBjB,OAAK+H,EAKH,qCACE,cAAC,KAAD,CAAMpQ,GAAG,IAAIE,MAAM,UAAUC,GAAG,OAAhC,SACGN,EAAgB,IAAK,kFAExB,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EACC,IACA,gJAGJ,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EAAgB,IAAD,wCAAuC2R,aAAiBvC,GAAxD,YAElB,uBAAO3C,QAAQ,kBAAkBrK,MAAO,CAAEuK,OAAQ,UAAWD,QAAS,QAASE,aAAc,QAA7F,SACE,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,cAAC,IAAD,CAAU9E,GAAG,kBAAkB9F,QAASuH,EAAgB1H,SA1C3C,kBAAM0P,GAAmBhI,IA0C0CsD,MAAM,OACtF,cAAC,KAAD,CAAMC,GAAG,MAAT,SAAgB/M,EAAgB,IAAK,uBAGzC,cAAC,IAAD,CACEiM,MAAM,OACNpG,UAAWrB,EACXjC,QAASiC,EAAe,cAAC,IAAD,CAAe4C,MAAI,EAAC/G,MAAM,iBAAoB,KACtE0B,UAAWyH,GAAkBhF,EAC7BY,QAjD0B,WAC9BqM,EAAuB/S,QACpBkT,eACA5N,KAAK,CAAEC,KAAM9F,IACb8I,GAAG,WAAW,WACbiH,GAAgB,MAEjBjH,GAAG,UANN,sBAMiB,sBAAA1I,EAAA,sEAEPL,EAASyK,aAAaxK,IAFf,OAGbsK,EAAa,mBAEbJ,IALa,4CAOdpB,GAAG,SAAS,SAACC,GACZjB,EAAW,QAAD,OAAUiB,QAAV,IAAUA,OAAV,EAAUA,EAAOC,SAC3B+G,GAAgB,OAkChB5N,GAAG,MANL,SAQGN,EAAgB,IAAK,aAExB,cAAC,IAAD,CAAQ6Q,QAAQ,OAAO5E,MAAM,OAAO7G,QAASiD,EAA7C,SACGrI,EAAgB,IAAK,qBAlCnB,MC4DI6R,GA1FmD,SAAC,GAAmB,IAAjBxJ,EAAgB,EAAhBA,UACnE,EAA8BpF,mBAAS,MAAvC,mBAAOlG,EAAP,KAAgBmC,EAAhB,KACMc,EAAkBC,cACxB,EAA0C2F,eAAlCC,EAAR,EAAQA,UAAiBC,EAAzB,EAAmBrD,KACbvE,EAAWsK,eACT+H,EAAYhI,cAAZgI,QACFxK,EAAyBC,cACzBsC,EAAkBoJ,cAChBvT,EAAYC,cAAZD,QACAsK,EAAiBvC,cAAjBuC,aACR,EAOIlF,YAA6B,CAC/BM,UAAW,WACT,OAAOkC,EAAuBrH,QAAQoF,QAAQkD,cAA4BjK,GAASiH,KAAK,CAAEC,KAAM9F,KAElG+F,UAAW,WACT,OAAKqM,EAAQC,SAINlI,EAAgB5J,QAAQoT,cAAcC,cAA4BhV,GAASiH,KAAK,CAAEC,KAAM9F,IAHtFmK,EAAgB5J,QAAQsT,kBAAkBD,cAA4BhV,GAASiH,KAAK,CAAEC,KAAM9F,KAKvGiG,UAAU,WAAD,4BAAE,sBAAA7F,EAAA,sEAEHL,EAASyK,aAAaxK,IAFnB,OAGTsK,EAAa,oBAEbJ,IALS,2CAAF,kDAAC,KAjBVhE,EADF,EACEA,YACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,cACAC,EANF,EAMEA,cAoBIyB,EAAWC,OAAOC,KAAKP,GAAcvF,KAAI,SAAC+F,GAAD,OAAmBC,OAAOD,MACnEE,EAAa9D,IAAQC,QAAO,SAACC,GAAD,OAASuD,EAAStD,SAASD,EAAIE,YAEjE,OACE,qCACE,cAAC,KAAD,CAAM3C,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EAAgB,IAAK,0DAEvB6F,EACC,cAAC,KAAD,CAAUe,OAAO,OAAOtG,GAAG,SAE3BkG,EAAWjG,KAAI,SAACsG,GACd,IAAOC,EAAP,YAAuBhB,EAAae,EAAU/D,SAASiE,SAAvD,MAEA,OACE,cAAC,GAAD,CACEpF,KAAK,iBAELtC,MAAOyH,EACPjF,MAAK,uBAAkBgF,EAAU/B,OAAOC,IACxCnD,UAAWkF,IAAiB/J,EAC5B+E,SAAU,SAACzC,GAAD,OAAmBH,EAAW8F,SAAS3F,EAAO,MACxD0C,SAAUsC,GAAeG,GAAgBD,EAP3C,SASE,cAAC,KAAD,CAAMK,MAAI,EAAV,SAAYiC,EAAUlF,QAPjBkF,EAAU/D,aAYrB+C,GAAmC,IAAtBW,EAAWC,QACxB,qCACE,cAAC,KAAD,CAAMtG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EAAgB,IAAK,iFAExB,cAAC,KAAD,CAAMG,GAAG,IAAIE,MAAM,aAAaC,GAAG,OAAnC,SACGN,EAAgB,IAAK,+EAI5B,cAACiF,GAAA,EAAD,CACEC,kBAAmBX,GAAeC,GAAgBF,GAA0B,OAAZvH,EAChEsH,YAAaA,EACbc,mBAAoBb,GAAcC,GAA2B,OAAZxH,EACjDyH,aAAcA,EACdX,UAAWY,EACXP,UAAWQ,IAEb,cAAC,IAAD,CAAQmM,QAAQ,OAAO5E,MAAM,OAAO7G,QAASiD,EAAWtG,SAAUsC,GAAeG,EAAjF,SACGxE,EAAgB,IAAK,sBC/BfiS,GAvDyC,SAAC,GAA+B,IAA7BrD,EAA4B,EAA5BA,WAAYvG,EAAgB,EAAhBA,UACrE,EAAsCpF,oBAAS,GAA/C,mBAAOoB,EAAP,KAAoBsB,EAApB,KACQ4K,EAAYhI,cAAZgI,QACFvQ,EAAkBC,cAChB9B,EAAYC,cAAZD,QACR,EAAuDgR,KAA/CG,EAAR,EAAQA,mBAAoBF,EAA5B,EAA4BA,uBACtBjM,EAAeC,cACb6C,EAAeC,cAAfD,WACFiL,EAAOX,EAAQC,SAAWlB,EAAqBF,EAkBrD,OAAKmB,EAKH,eAAC,IAAD,CAAMc,cAAc,SAApB,UACE,eAAC,IAAD,CAAMxE,WAAW,SAAShE,eAAe,gBAAgBvI,GAAG,OAA5D,UACE,cAAC,KAAD,UACGiQ,EAAQC,SAAWxQ,EAAgB,IAAK,mBAAqBA,EAAgB,IAAK,yBAErF,cAAC,KAAD,UAAOA,EAAgB,IAAD,UAASsR,aAAsBJ,GAA/B,eAExB,cAAC,IAAD,CACEnP,SAAUsC,EACVwB,UAAWxB,EACX9B,QAAS8B,EAAc,cAAC,IAAD,CAAe+C,MAAI,EAAC/G,MAAM,iBAAoB,KACrE4L,MAAM,OACN3L,GAAG,MACH8E,QAlCgB,WACpBjC,EAAazE,QACVoF,QAAQkD,cAA4BkK,EAAKgB,MAAM,GAAGnO,UAClDC,KAAK,CAAEC,KAAM9F,IACb8I,GAAG,WAAW,WACbtB,GAAe,MAEhBsB,GAAG,WAAW,WACb2H,OAED3H,GAAG,SAAS,SAACC,GACZjB,EAAW,QAAD,OAAUiB,QAAV,IAAUA,OAAV,EAAUA,EAAOC,SAC3BxB,GAAe,OAgBjB,SAQG3F,EAAgB,IAAK,aAExB,cAAC,IAAD,CAAQ6Q,QAAQ,OAAO5E,MAAM,OAAO7G,QAASiD,EAAWtG,SAAUsC,EAAlE,SACGrE,EAAgB,IAAK,qBAtBnB,MC/BLmS,IAAS,sBACZrJ,GAAM4F,MAAQ,CAAE3G,GAAI,IAAKjI,MAAO,iBADpB,gBAEZgJ,GAAM+F,OAAS,CAAE9G,GAAI,IAAKjI,MAAO,uBAFrB,gBAGZgJ,GAAMiG,OAAS,CAAEhH,GAAI,IAAKjI,MAAO,uBAHrB,gBAIZgJ,GAAMmG,QAAU,CAAElH,GAAI,IAAKjI,MAAO,iBAJtB,IA6BAsS,GAtB2C,SAAC,GAAmB,IAAjB/J,EAAgB,EAAhBA,UAC3D,EAAyEoG,KAAjEH,EAAR,EAAQA,YAAaM,EAArB,EAAqBA,WAAYE,EAAjC,EAAiCA,WAAYE,EAA7C,EAA6CA,YAAaE,EAA1D,EAA0DA,WACpDlP,EAAkBC,cACxB,EAAsBkS,GAAU7D,GAAxBvG,EAAR,EAAQA,GAAIjI,EAAZ,EAAYA,MAENuS,EAAc/D,IAAgBxF,GAAM4F,MACpC4D,EAAaD,EAAc,KAAO,kBAAMnD,KAE9C,OACE,cAAC,IAAD,CAAOtG,MAAO5I,EAAgB+H,EAAIjI,GAAQyS,OAAQD,EAAYjK,UAAWA,EAAWmK,iBAAkBH,EAAtG,SACE,sBAAKjQ,MAAO,CAAEgM,SAAU,SAAxB,UACGE,IAAgBxF,GAAM4F,OACrB,cAAC+D,GAAD,CAAWzD,YAAaA,EAAaJ,WAAYA,EAAYE,WAAYA,EAAYzG,UAAWA,IAEjGiG,IAAgBxF,GAAMiG,QAAU,cAAC2D,GAAD,CAAkBrK,UAAWA,IAC7DiG,IAAgBxF,GAAM+F,QAAU,cAAC8D,GAAD,CAAsBtK,UAAWA,IACjEiG,IAAgBxF,GAAMmG,SAAW,cAAC2D,GAAD,CAAiBhE,WAAYA,EAAYvG,UAAWA,UCO/EwK,GAjCO,WACpB,IAAM7S,EAAkBC,cACxB,EAAuCoN,KAA/BC,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,iBAClB,EAAkCtD,aAAS,cAAC,GAAD,CAAsBhG,UAAWsJ,KAArEoF,EAAP,oBACA,EAA6B1I,aAAS,cAAC,GAAD,KAAsB,GAArD2I,EAAP,oBACQC,EAAezK,cAAfyK,WAER,OACE,cAACC,GAAA,EAAD,UACE,eAAC,IAAD,CACE5B,cAAe,CAAC,SAAU,KAAM,OAChCxE,WAAY,CAAC,QAAS,KAAM,UAC5BhE,eAAe,gBAHjB,UAKE,gCACE,cAAC,IAAD,CAAS1I,GAAG,KAAKC,KAAK,MAAME,GAAG,MAAMD,MAAM,YAA3C,SACGL,EAAgB,IAAK,kBAExB,cAAC,IAAD,CAASG,GAAG,KAAKC,KAAK,KAAKE,GAAG,OAA9B,SACGN,EAAgB,IAAK,+CAEvBgT,GAAc,cAAC,IAAD,CAAQ5N,QAAS2N,EAAjB,SAAsC/S,EAAgB,IAAK,qBAE3EsN,GACC,cAAC,IAAD,CAAQuD,QAAQ,WAAWzL,QAAS0N,EAAyBI,UAAW,cAAC,KAAD,IAAxE,SACGlT,EAAgB,IAAK,uCCzB5BmT,GAAqB5T,YAAO6T,IAAP7T,CAAH,oHAIpB,qBAAGE,MAAkBuQ,aAAaC,MAMhCoD,GAA0B9T,IAAOsQ,IAAV,2IAKzB,qBAAGpQ,MAAkBuQ,aAAaC,MAcvBqD,GAR6C,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUvR,EAAY,yBACnF,OAAKuR,EAIE,cAACF,GAAD,aAAyB5R,IAAG,+BAA0B8R,GAAS9C,IAAI,qBAAwBzO,IAHzF,cAACmR,GAAD,KCFIK,GApB2C,SAAC,GAAyB,IAAvB5K,EAAsB,EAAtBA,MAAU5G,EAAY,yBAC3EhC,EAAkBC,cAExB,GAAqB,kBAAV2I,EACT,OACE,cAAC,KAAD,yBAAMhE,MAAI,GAAK5C,GAAf,aACG4G,KAKP,IAAQb,EAA4Ba,EAA5Bb,GAAI0L,EAAwB7K,EAAxB6K,SAAZ,EAAoC7K,EAAdkC,YAAtB,MAA6B,GAA7B,EAEA,OACE,cAAC,KAAD,yBAAMlG,MAAI,GAAK5C,GAAf,aACGhC,EAAgB+H,EAAI0L,EAAU3I,OCd/B4I,GAAcnU,YAAOoU,MAAM/C,MAAM,CAAEzQ,GAAI,IAAKwE,SAAU,QAAxCpF,CAAH,qFAGb,qBAAGE,MAAkBuQ,aAAajL,MA6BvB6O,GAxBuD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAgB7R,EAAY,+BAC7FhC,EAAkBC,cAExB,IAAK4T,EACH,OAAO,KAGT,GAA2B,kBAAhBA,EACT,OACE,cAAC,KAAD,yBAAM1T,GAAG,IAAIE,MAAM,aAAasE,SAAS,QAAW3C,GAApD,aACG6R,KAKP,IAAQ9L,EAA4B8L,EAA5B9L,GAAI0L,EAAwBI,EAAxBJ,SAAZ,EAAoCI,EAAd/I,YAAtB,MAA6B,GAA7B,EAEA,OACE,cAAC4I,GAAD,yBAAarT,MAAM,cAAiB2B,GAApC,aACGhC,EAAgB+H,EAAI0L,EAAU3I,OCzB/BgJ,GAAUvU,YAAO+J,IAAP/J,CAAH,8IAwBEwU,GAhByC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACzD,OACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAmBT,MAAOS,EAAYT,QACtC,eAACO,GAAD,WACE,cAAC,GAAD,CAAkBlL,MAAOoL,EAAYpL,QACrC,cAAC,GAAD,CAAwBiL,YAAaG,EAAYH,iBAEnD,eAAC,IAAD,CAAMhH,WAAW,SAAjB,UACE,cAAC,IAAD,CAAWZ,MAAM,OAAO5L,MAAM,aAAa4H,GAAG,QAC9C,cAAC,KAAD,CAAM5H,MAAM,aAAZ,SAA0B2T,EAAYC,OAAO9L,0BCvB/C+L,GAAO3U,IAAOC,IAAV,8JAKN,qBAAGC,MAAkBuQ,aAAaC,MA2BvBkE,GAtBU,WACvB,IAAMnU,EAAkBC,cAClBmU,EAAeC,cAErB,OACE,qCACE,cAACH,GAAD,UACGE,EAAa7T,KAAI,SAACyT,GAAD,OAChB,cAAC,GAAD,CAAsCA,YAAaA,GAA7BA,EAAYjM,SAGb,IAAxBqM,EAAa3N,QACZ,cAAC,IAAD,CAAMoG,WAAW,SAAShE,eAAe,SAASzG,MAAO,CAAEwE,OAAQ,QAAnE,SACE,cAAC,IAAD,CAASzG,GAAG,KAAKC,KAAK,KAAKC,MAAM,eAAjC,SACGL,EAAgB,IAAK,gC,6BChBnBsU,GAbM/U,IAAOC,IAAV,mJAId,qBAAGC,MAAkBuQ,aAAaC,MCcvBsE,GAZiC,SAAC,GAA0B,IAAxBN,EAAuB,EAAvBA,OAAWjS,EAAY,0BAClEhC,EAAkBC,cAClBuU,EAAeP,EAAO9L,iBAE5B,OACE,eAAC,IAAD,yBAAM0E,WAAW,UAAa7K,GAA9B,cACE,cAAC,IAAD,CAAWiG,GAAG,MAAM5H,MAAM,eAC1B,cAAC,KAAD,CAAMA,MAAM,aAAZ,SAA0BL,EAAgB,IAAD,UAASwU,EAAT,WAAgC,CAAE3P,IAAK2P,WCIhFC,GAAuBlV,YAAO+J,IAAP/J,CAAH,8GACG,qBAAGE,MAAkBC,OAAOgV,eAKnDZ,GAAUvU,IAAOC,IAAV,0CAIP6B,GAAO9B,YAAO+J,IAAP/J,CAAH,8JAKN,qBAAGE,MAAkBuQ,aAAajL,MAwDvB4P,GAlDuC,SAAC,GAAuC,IAArCX,EAAoC,EAApCA,YAAaY,EAAuB,EAAvBA,iBACpE,EAAwC3R,oBAAS,GAAjD,mBAAO4R,EAAP,KAAqBC,EAArB,KACM9U,EAAkBC,cAClB8U,EAAsBC,cACpB7W,EAAYC,cAAZD,QACR,EAAqC+H,cAA7BD,EAAR,EAAQA,WAAYwC,EAApB,EAAoBA,aAoBpB,OACE,eAACgM,GAAD,WACE,cAAC,GAAD,CAAmBlB,MAAOS,EAAYT,QACtC,eAAC,GAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAkB3K,MAAOoL,EAAYpL,QACrC,cAAC,GAAD,CAAwBiL,YAAaG,EAAYH,iBAEnD,cAAC,GAAD,CAAaI,OAAQD,EAAYC,OAAQgB,GAAI,CAAC,EAAG,KAAM,KAAM,QAAS3U,GAAI,CAAC,OAAQ,KAAM,KAAM,KAC/F,cAAC,GAAD,UACE,cAAC,IAAD,CACE8E,QA7BkB,WAC1B2P,EAAoBrW,QACjBwW,UAAUlB,EAAYtQ,SACtBM,KAAK,CAAEC,KAAM9F,IACb8I,GAAG,WAAW,WACb6N,GAAgB,MAEjB7N,GAAG,WAAW,WACb6N,GAAgB,GAChBF,EAAiBZ,GACjBvL,EAAa,wBAEdxB,GAAG,SAAS,SAACC,GACZjB,EAAW,QAAD,OAAUiB,QAAV,IAAUA,OAAV,EAAUA,EAAOC,SAC3B2N,GAAgB,OAgBZjP,UAAWgP,EACXtS,QAASsS,EAAe,cAAC,IAAD,CAAezN,MAAI,EAAC/G,MAAM,iBAAoB,KACtE0B,SAAU8S,EACVhE,QAAQ,YALV,SAOG7Q,EAAgB,IAAK,sBCXnBmV,GA1DY,WACzB,MAAyDlS,mBAAwB,IAAjF,mBAAOmS,EAAP,KAA8BC,EAA9B,KACMrV,EAAkBC,cAClB/B,EAAWsK,eACT+H,EAAYhI,cAAZgI,QACApS,EAAYC,cAAZD,QAERE,qBAAU,WAMJF,GALgB,uCAAG,4BAAAI,EAAA,sEACC+W,aAAoBnX,GADrB,OACfoX,EADe,OAErBF,EAAwBE,GAFH,2CAAH,oDAMlBC,KAED,CAACrX,EAASD,EAAUmX,IAEvB,IAAMI,EAAuB,SAACzB,GAC5B9V,EAASwX,aAAe1B,IACxB9V,EAASyX,aAAU3B,EAAYC,SAE/BoB,GAAwB,SAACO,GAAD,OACtBA,EAA0BjT,QAAO,SAACkT,GAAD,OAA8BA,EAAyB9N,KAAOiM,EAAYjM,UAI/G,KAAI,OAACwI,QAAD,IAACA,OAAD,EAACA,EAASC,UACZ,OAAO,KAGT,GAAqC,IAAjC4E,EAAsB3O,OACxB,OAAO,KAGT,IAAMqP,EAAuBC,iBAAMX,EAAuB,UAE1D,OACE,eAAC,IAAD,CAAM5E,UAAQ,EAAClQ,GAAG,OAAlB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM+Q,cAAe,CAAC,SAAU,KAAM,OAAQxI,eAAgB,CAAC,QAAS,KAAM,iBAA9E,SACE,eAAC,IAAD,CAAMgE,WAAW,SAASvM,GAAI,CAAC,OAAQ,KAAM,GAA7C,UACE,cAAC,IAAD,CAAW2L,MAAM,OAAOhE,GAAG,QAC3B,cAAC,IAAD,CAAS7H,KAAK,KAAd,SACGJ,EAAgB,IAAD,UAAS8V,EAAT,sBAAmD,CAAEjR,IAAKiR,aAKlF,cAAC,IAAD,UACGV,EAAsB7U,KAAI,SAACyT,GAAD,OACzB,cAAC,GAAD,CAA0CA,YAAaA,EAAaY,iBAAkBa,GAAjEzB,EAAYtQ,kB,UC3B5BsS,GA5BmB,SAAC,GAAyB,IAAD,IAAtBC,mBAAsB,MAAR,EAAQ,EACnDjW,EAAkBC,cAExB,OACE,qCACE,cAAC,IAAD,CAAMK,GAAG,OAAT,SACE,cAAC,KAAD,CAAYoG,GAAG,SAAf,SACE,eAAC,IAAD,CAAMmG,WAAW,SAAjB,UACE,cAAC,IAAD,CAAiBxM,MAAM,YACvB,cAAC,KAAD,CAAMA,MAAM,UAAZ,SAAuBL,EAAgB,KAAM,2BAKnD,cAAC,IAAD,CAAMM,GAAG,OAAOuI,eAAe,SAA/B,SACE,eAAC,IAAD,CAAYoN,YAAaA,EAAapF,QAAQ,SAAS/D,MAAM,KAA7D,UACE,cAAC,IAAD,CAAgB3M,GAAImF,KAAYoB,GAAG,iBAAnC,SACG1G,EAAgB,KAAM,iBAEzB,cAAC,IAAD,CAAgBG,GAAImF,KAAYoB,GAAG,WAAnC,SACG1G,EAAgB,KAAM,6BCuBpBkW,GA5CI,WACjB,IAAMlW,EAAkBC,cAExB,OACE,qCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,CAAMK,GAAG,OAAT,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMuM,WAAW,SAAShE,eAAe,gBAAzC,SACE,gCACE,cAAC,IAAD,CAASzI,KAAK,KAAKE,GAAG,MAAtB,SACGN,EAAgB,KAAM,kBAEzB,cAAC,KAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,KAAM,2DAI1C,cAAC,IAAD,UACE,cAAC,GAAD,SAGJ,eAAC,IAAD,CAAMM,GAAG,OAAT,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMuM,WAAW,SAAShE,eAAe,gBAAzC,SACE,gCACE,cAAC,IAAD,CAASzI,KAAK,KAAKE,GAAG,MAAtB,SACGN,EAAgB,KAAM,iBAEzB,cAAC,KAAD,CAAMG,GAAG,IAAT,SAAcH,EAAgB,KAAM,8CACpC,cAAC,KAAD,CAAMG,GAAG,IAAT,SACGH,EAAgB,KAAM,0EAK/B,cAAC,IAAD,UACE,cAACmW,GAAA,EAAD,aC7BKC,GALI7W,YAAO8W,IAAP9W,CAAH,yEACA,mBATM,SAACE,GACrB,OAAIA,EAAM6W,OACD,sEAGF,uEAIsBC,CAAf,EAAG9W,UCHb+W,GAAejX,IAAOsQ,IAAV,4EAmBH4G,GAdyC,SAAC,GAAa,IAAX7T,EAAU,EAAVA,IACzD,OACE,gCACE,cAAC4T,GAAD,CAAc/U,IAAG,uBAAkBmB,EAAIkC,OAAO4R,MAC9C,cAAC,KAAD,CAAM9R,MAAI,EAACtE,GAAG,MAAd,SACGsC,EAAIjB,OAEP,cAAC,KAAD,CAAMxB,GAAG,IAAIwE,SAAS,OAAOtE,MAAM,aAAnC,SACGuC,EAAIiR,kBCbP8C,GAAkBpX,IAAOC,IAAV,gWAMjB,qBAAGC,MAAkBuQ,aAAaC,MAMlC,qBAAGxQ,MAAkBuQ,aAAajL,MAIlC,qBAAGtF,MAAkBuQ,aAAa0G,MAkDvBE,GA7CM,WACnB,IAAM5W,EAAkBC,cACV4W,EAAqBjR,eAA3BnD,KACF0D,EAAWC,OAAOC,KAAKwQ,GAAkBtW,KAAI,SAAC+F,GAAD,OAAmBC,OAAOD,MACvER,EAAerD,IAAKE,QAAO,SAACC,GAAD,OAASuD,EAAStD,SAASD,EAAIE,YAEhE,OACE,qCACE,cAAC,IAAD,CAAS3C,GAAG,KAAKC,KAAK,KAAKE,GAAG,MAA9B,SACGN,EAAgB,IAAK,wBAExB,cAAC,KAAD,CAAMG,GAAG,IAAT,SACGH,EACC,IACA,8FAGJ,cAAC,KAAD,CAAMG,GAAG,IAAT,SACGH,EACC,IACA,6FAGH8F,EAAaW,OAAS,GACrB,cAACkQ,GAAD,UACG7Q,EAAavF,KAAI,SAACuW,GAAD,OAChB,cAAC,GAAD,CAA2ClU,IAAKkU,GAA1BA,EAAYhU,cAIf,IAAxBgD,EAAaW,QACZ,cAAC,IAAD,CAAMoC,eAAe,SAASkO,EAAE,OAAhC,SACE,cAAC,KAAD,CAAMpS,SAAS,OAAOC,MAAI,EAACvE,MAAM,eAAjC,SACGL,EAAgB,IAAK,qBAI5B,eAAC,IAAD,CAAM6M,WAAW,SAAShE,eAAe,WAAzC,UACE,cAAC,KAAD,CAAMnC,GAAG,gBAAT,SAA0B1G,EAAgB,IAAK,2CAC/C,cAAC,IAAD,W,UC/DFgX,GAAczX,IAAOC,IAAV,2VAab,qBAAGC,MAAkBuQ,aAAaC,MAKhCgH,GAA0B1X,IAAOC,IAAV,qIAMvBwX,IAiBSE,GAXyC,SAAC,GAAiB,IAAf3G,EAAc,EAAdA,QACzD,EAA6BnG,aAAS,cAAC,GAAD,KAAsB,GAArD2I,EAAP,oBAEA,OACE,eAACkE,GAAD,CAAyB7R,QAAS2N,EAAlC,UACE,cAAC,GAAD,CAAexC,QAASA,IACxB,cAACyG,GAAD,QChBAG,GAAU5X,IAAOC,IAAV,oGAIT,qBAAGC,MAAkBuQ,aAAaC,MAKhCmH,GAAW7X,YAAO8X,IAAP9X,CAAH,6JAKV,qBAAGE,MAAkBuQ,aAAaC,MAMhCqH,GAAS/X,IAAOC,IAAV,mFAMN+X,GAAiBhY,YAAOoU,KAAPpU,CAAH,wFAGhB,qBAAGE,MAAkBuQ,aAAaC,MAKhCuH,GAAcjY,YAAO8F,IAAP9F,CAAH,kPASb,qBAAGE,MAAkBuQ,aAAaC,MAMhCwH,GAAUlY,IAAOC,IAAV,sDA4DEkY,GAxDO,WACpB,IAAQvZ,EAAYC,cAAZD,QACAoS,EAAYhI,cAAZgI,QACFvQ,EAAkBC,cAExB,OAAK9B,EAKH,qCACE,cAAC,GAAD,CAAM8X,YAAa,IACnB,8BACE,eAAC,IAAD,WACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMpJ,WAAY,CAAC,QAAS,KAAM,UAAWwE,cAAe,CAAC,SAAU,KAAM,OAA7E,UACE,cAAC,GAAD,CAAmBd,QAASA,IAC5B,eAAC4G,GAAD,WACE,cAACC,GAAD,qBAAe7G,EAAQ9E,YACvB,eAAC,IAAD,CAAMoB,WAAW,SAAjB,UACE,cAAC2K,GAAD,CAAaG,KAAI,sCAAiCxZ,GAAWkC,MAAM,OAAOuX,UAAQ,EAAlF,SACGzZ,IAEH,cAAC,IAAD,CAAa4O,GAAG,WAElB,cAACwK,GAAD,CAAgB3S,MAAI,EAApB,SAAsB2L,EAAQzI,KAAKnG,aAGvC,cAAC2V,GAAD,UACG/G,EAAQC,SACP,cAAC,KAAD,CAAK0C,UAAW,cAAC,IAAD,CAAqBjH,MAAM,SAAW4L,SAAO,EAA7D,SACG7X,EAAgB,IAAK,YAGxB,cAAC,KAAD,CAAK6Q,QAAQ,UAAUqC,UAAW,cAAC,IAAD,CAAWjH,MAAM,SAAW4L,SAAO,EAArE,SACG7X,EAAgB,IAAK,iBAK9B,eAAC,IAAD,WACE,cAAC8X,GAAA,EAAD,CAASC,KAAMC,IAAWpP,MAAO2H,EAAQ0D,OAAQgE,SAAUjY,EAAgB,IAAK,UAAWM,GAAG,SAC9F,eAACmX,GAAD,WACE,cAAC,IAAD,CAAStX,GAAG,KAAKC,KAAK,KAAKE,GAAG,OAA9B,SACGN,EAAgB,KAAM,kBAEzB,cAAC,GAAD,OAEF,cAAC,GAAD,eA1CD,cAAC,EAAD,KC3CIkY,UA/BC,WACd,MAAiD3P,cAAzC3L,EAAR,EAAQA,cAAeiJ,EAAvB,EAAuBA,UAAWmN,EAAlC,EAAkCA,WAC1B7U,EAAYC,cAAZD,QAIR,OAFAga,eAEKvb,GAAiBiJ,EACb,cAACuS,EAAA,EAAD,IAGLja,IAAY6U,EAEZ,cAAC5F,EAAA,EAAD,UACE,cAAC,GAAD,MAMJ,eAACA,EAAA,EAAD,WACE,cAAC,GAAD,IACA,cAAC,IAAD,CAAOiL,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACE,cAAC,GAAD,W,iCCpCR,sdAsBaC,EAAiB,SAAC7U,GAC7B,IAAMiG,EAAOC,cACb,OAAO7K,mBAAQ,kBAAMyZ,YAAe9U,EAASiG,KAAO,CAACjG,EAASiG,KAGnD8O,EAAW,SAAC/U,GACvB,IAAMiG,EAAOC,cACb,OAAO7K,mBAAQ,kBAAM2Z,YAAiBhV,EAASiG,KAAO,CAACjG,EAASiG,KAGrDvG,EAAU,WACrB,IAAMuG,EAAOC,cACb,OAAO7K,mBAAQ,kBAAM4Z,YAAgBhP,KAAO,CAACA,KAGlCtG,EAAkB,WAC7B,IAAMsG,EAAOC,cACb,OAAO7K,mBAAQ,kBAAMN,YAAwBkL,KAAO,CAACA,KAG1C3D,EAAoB,WAC/B,IAAM2D,EAAOC,cACb,OAAO7K,mBAAQ,kBAAM6Z,YAAyBjP,KAAO,CAACA,KAG3CpB,EAAa,WACxB,IAAMoB,EAAOC,cACb,OAAO7K,mBAAQ,kBAAM0Q,YAAmB9F,KAAO,CAACA,KAGrCkP,EAAa,WACxB,IAAMlP,EAAOC,cACb,OAAO7K,mBAAQ,kBAAM+Z,YAAmBnP,KAAO,CAACA,KAGrCoP,EAAmB,WAC9B,IAAMpP,EAAOC,cACb,OAAO7K,mBAAQ,kBAAMia,YAAyBrP,KAAO,CAACA,KAG3CsP,EAAgB,WAC3B,IAAMtP,EAAOC,cACb,OAAO7K,mBAAQ,kBAAMma,YAAsBvP,KAAO,CAACA,KAGxCwP,EAAc,SAACpR,GAC1B,IAAM4B,EAAOC,cACb,OAAO7K,mBAAQ,kBAAMqa,YAAoBrR,EAAI4B,KAAO,CAAC5B,EAAI4B,KAG9CqL,EAA4B,WACvC,IAAMrL,EAAOC,cACb,OAAO7K,mBAAQ,kBAAMsa,YAA0B1P,KAAO,CAACA,KAG5C2P,EAA0B,WACrC,IAAM3P,EAAOC,cACb,OAAO7K,mBAAQ,kBAAMwa,YAAwB5P,KAAO,CAACA,KAG1CwE,EAAyB,WACpC,IAAMxE,EAAOC,cACb,OAAO7K,mBAAQ,kBAAM+O,YAAuBnE,KAAO,CAACA,M,iCCpFtD,yFAEagI,EAAmB,SAAC6H,GAAuC,IAAnBC,EAAkB,uDAAP,GACxDC,EAAiB,IAAIxc,IAAUsc,GAASG,UAAU,IAAIzc,IAAU,IAAIG,IAAIoc,IAC9E,OAAOC,EAAeE,YAGXtI,EAAwB,SAACkI,GAAuC,IAAnBC,EAAkB,uDAAP,GACnE,OAAOD,EAAQG,UAAU,IAAIzc,IAAU,IAAIG,IAAIoc,IAAWI,Y,sFCiB7CjQ,IAfC,WACd,IAAQF,EAAYtL,cAAZsL,QACFoQ,EAASC,iBAAOrQ,GACtB,EAAwBzG,mBAASyG,EAAU,IAAIsQ,IAAKtQ,GAAWuQ,eAA/D,mBAAOtQ,EAAP,KAAauQ,EAAb,KASA,OAPA7b,qBAAU,WACJqL,IAAYoQ,EAAOK,UACrBD,EAAQxQ,EAAU,IAAIsQ,IAAKtQ,GAAWuQ,eACtCH,EAAOK,QAAUzQ,KAElB,CAACA,IAEGC,I,qFCLMjJ,IAZM,SAACsB,GACpB,IAAMhC,EAAkBC,cACxB,EAA0Bma,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,aAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQnV,QAASmV,GAA2BvY,GAA5C,aACGhC,EAAgB,IAAK,sB,mMCgBfya,EAAiB,WAC5B,IAAQC,EAAgBC,cAAhBD,YACR,EAAsCzX,qBAAtC,mBAAO2X,EAAP,KAAoBC,EAApB,KAYA,OAVAxc,qBAAU,WAAM,4CACd,8BAAAE,EAAA,6DACQ4E,EAAewV,cADvB,SAEuBxV,EAAazE,QAAQkc,cAAchc,OAF1D,OAEQkc,EAFR,OAGED,EAAe,IAAI3d,IAAU4d,IAH/B,4CADc,uBAAC,WAAD,wBAOdC,KACC,CAACL,IAEGE,GAGII,EAAmB,SAACC,GAC/B,MAA8BhY,mBAAS,IAAI/F,IAAU,IAArD,mBAAOsc,EAAP,KAAgB0B,EAAhB,KACQR,EAAgBC,cAAhBD,YACF/Q,EAAOC,cAYb,OAVAvL,qBAAU,YACU,uCAAG,8BAAAE,EAAA,6DACb4c,EAAWzC,YAAiBuC,EAActR,GAD7B,SAEDwR,EAASzc,QAAQ0c,UAAU,8CAA8Cxc,OAFxE,OAEb+L,EAFa,OAGnBuQ,EAAW,IAAIhe,IAAUyN,IAHN,2CAAH,qDAMlB0Q,KACC,CAAC1R,EAAMsR,EAAcP,IAEjBlB,GAGM3Y,IAxDS,SAACoa,GACvB,MAA8BhY,mBAAS,IAAI/F,IAAU,IAArD,mBAAOsc,EAAP,KAAgB0B,EAAhB,KACQ/c,EAAYC,cAAZD,QACFwL,EAAOC,cACL0R,EAAgBX,cAAhBW,YAcR,OAZAjd,qBAAU,WAOJF,GANc,uCAAG,8BAAAI,EAAA,6DACb4c,EAAWzC,YAAiBuC,EAActR,GAD7B,SAEDwR,EAASzc,QAAQ0c,UAAUjd,GAASS,OAFnC,OAEb+L,EAFa,OAGnBuQ,EAAW,IAAIhe,IAAUyN,IAHN,2CAAH,oDAOhB0Q,KAED,CAACld,EAAS8c,EAActR,EAAM2R,IAE1B9B,I,yFCXH7I,EAASpR,YAAOgc,IAAPhc,CAAH,qGAGR,qBAAGE,MAAkBuQ,aAAajL,MAMhCyW,EAAY,CAAEvP,MAAO,OAAQ5L,MAAO,gBAEpCob,EAAelc,YAAOmc,KAAkB9K,MAAM4K,EAA/Bjc,CAAH,mFAGd,qBAAGE,MAAkBuQ,aAAajL,MAKhC4W,EAAgBpc,YAAOqc,KAAiBhL,MAAM4K,EAA9Bjc,CAAH,mFAGf,qBAAGE,MAAkBuQ,aAAajL,MAKhC8W,EAAc,cAAC,IAAD,CAAezU,MAAI,EAAC/G,MAAM,iBAoC/B4E,IAlCqD,SAAC,GAO9D,IANLC,EAMI,EANJA,kBACAb,EAKI,EALJA,YACAG,EAII,EAJJA,aACAW,EAGI,EAHJA,kBACAtB,EAEI,EAFJA,UACAK,EACI,EADJA,UAEMlE,EAAkBC,cAExB,OACE,eAAC,IAAD,CAAMsM,GAAG,MAAM8E,cAAe,CAAC,SAAU,KAAM,OAAQxE,WAAW,SAAlE,UACE,cAAC8D,EAAD,CACE5O,SAAUmD,EACVE,QAASvB,EACTtB,QAAS8B,EAAcwX,OAAcxU,EACrCxB,UAAWxB,EAJb,SAMGA,EAAcrE,EAAgB,IAAK,aAAeA,EAAgB,IAAK,aAE1E,cAACyb,EAAD,IACA,cAACE,EAAD,IACA,cAAChL,EAAD,CACEvL,QAASlB,EACTnC,SAAUoD,EACVU,UAAWrB,EACXjC,QAASiC,EAAeqX,OAAcxU,EAJxC,SAMG7C,EAAexE,EAAgB,IAAK,cAAgBA,EAAgB,IAAK,kB,oFC5C5ErD,EAAsB,CAC1Bmf,cAAe,OACfC,gBAAiB,KACjBC,cAAe,KACfC,aAAc,OACdC,eAAgB,KAChBC,aAAc,MAGV3e,EAAU,SAACC,EAAcqB,GAC7B,OAAQA,EAAQnB,MACd,IAAK,oBACH,OAAO,2BACFF,GADL,IAEEqe,cAAe,YAEnB,IAAK,kBACH,OAAO,2BACFre,GADL,IAEEqe,cAAe,YAEnB,IAAK,kBACH,OAAO,2BACFre,GADL,IAEEqe,cAAe,UACfC,gBAAiBjd,EAAQsd,UAE7B,IAAK,gBACH,OAAO,2BACF3e,GADL,IAEEqe,cAAe,OACfE,cAAeld,EAAQsd,UAE3B,IAAK,kBACH,OAAO,2BACF3e,GADL,IAEEwe,aAAc,YAElB,IAAK,kBACH,OAAO,2BACFxe,GADL,IAEEwe,aAAc,UACdC,eAAgBpd,EAAQsd,UAE5B,IAAK,gBACH,OAAO,2BACF3e,GADL,IAEEwe,aAAc,OACdE,aAAcrd,EAAQsd,UAE1B,QACE,OAAO3e,IA4EE8F,IA/DsB,SAAC,GAKJ,IAJhCM,EAI+B,EAJ/BA,UACAK,EAG+B,EAH/BA,UACAV,EAE+B,EAF/BA,mBAE+B,IAD/BY,iBAC+B,MADnBiY,OACmB,EACvBle,EAAYC,cAAZD,QACR,EAA0BF,qBAAWT,EAASb,GAA9C,mBAAOc,EAAP,KAAcS,EAAd,KACMoe,EAAmBvC,iBAAOvW,GACxByC,EAAeC,cAAfD,WAaR,OAVA5H,qBAAU,WACJF,GAAWme,EAAiBnC,SAC9BmC,EAAiBnC,UAAUoC,MAAK,SAACC,GAC3BA,GACFte,EAAS,CAAEP,KAAM,2BAItB,CAACQ,EAASme,EAAkBpe,IAExB,CACLmG,YAAqC,YAAxB5G,EAAMqe,cACnBxX,WAAoC,YAAxB7G,EAAMqe,cAClBtX,aAAqC,YAAvB/G,EAAMwe,aACpB1X,YAAoC,YAAvB9G,EAAMwe,aACnBF,gBAAiBte,EAAMse,gBACvBC,cAAeve,EAAMue,cACrBE,eAAgBze,EAAMye,eACtBC,aAAc1e,EAAM0e,aACpB1X,cAAe,WACbZ,IACGoD,GAAG,WAAW,WACb/I,EAAS,CAAEP,KAAM,uBAElBsJ,GAAG,WAAW,SAACmV,GACdle,EAAS,CAAEP,KAAM,kBAAmBye,eAErCnV,GAAG,SAAS,SAACC,GACZhJ,EAAS,CAAEP,KAAM,gBAAiBye,QAASlV,IAC3CuV,QAAQvV,MAAM,2CAA4CA,GAC1DjB,EAAW,+CAGjBvB,cAAe,WACbR,IACG+C,GAAG,WAAW,WACb/I,EAAS,CAAEP,KAAM,uBAElBsJ,GAAG,WAAW,SAACmV,GACdle,EAAS,CAAEP,KAAM,kBAAmBye,YACpChY,EAAU3G,MAEXwJ,GAAG,SAAS,SAACC,GACZhJ,EAAS,CAAEP,KAAM,gBAAiBye,QAASlV,IAC3CuV,QAAQvV,MAAM,4CAA6CA,GAC3DjB,EAAW,mD,6HC/IfF,EAAyB6S,cAiBzBjc,EAAsB,CAC1BkJ,WAAW,EACXpD,KAAM,GACNia,YAAa5Q,KAAK6Q,OAGdnf,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,WACH,OAAO,2BACFhB,GADL,IAEEkJ,WAAW,EACXpD,KAAM/E,EAAOoN,OAEjB,IAAK,UACH,OAAO,2BACFnO,GADL,IAEE+f,YAAahf,EAAOkf,YAExB,IAAK,QACH,OAAO,2BACFjgB,GADL,IAEEkJ,WAAW,IAEf,QACE,OAAOpI,IAyEEmI,IArEU,WACvB,MAA0B3H,qBAAWT,EAASb,GAA9C,mBAAOc,EAAP,KAAcS,EAAd,KACQC,EAAYC,cAAZD,QACAue,EAAgBjf,EAAhBif,YAERre,qBAAU,WAsDJF,GArDW,uCAAG,sCAAAI,EAAA,+EAEUwH,EAAuBrH,QAAQ0c,UAAUjd,GAASS,OAF5D,aAERwc,EAFQ,QAIE,GAJF,iBAqBZ,IAhBI3Y,EAAe,GAEboa,EAPM,+BAAAte,EAAA,MAOiB,WAAOiC,GAAP,+BAAAjC,EAAA,wEAE6BwH,EAAuBrH,QAArEoe,EAFiB,EAEjBA,oBAAqBC,EAFJ,EAEIA,WAAYC,EAFhB,EAEgBA,SAFhB,SAGHF,EAAoB3e,EAASqC,GAAO5B,OAHjC,cAGnB7B,EAHmB,gBAIS2S,YAAiB,CAACqN,EAAWhgB,GAAS6B,KAAMoe,EAASjgB,GAAS6B,OAJvE,0CAIlBkE,EAJkB,KAITma,EAJS,uBAMlB,CAAC1W,OAAOzD,GAAUyD,OAAOxJ,GAAUkgB,IANjB,2DAQlB,MARkB,0DAPjB,sDAmBNC,EAAkB,GAEfC,EAAI,EAAGA,EAAI/B,EAAW+B,IAC7BD,EAAgBE,KAAKP,EAAqBM,IAtBhC,iBAyBwBE,QAAQC,IAAIJ,GAzBpC,QAyBNK,EAzBM,OA2BZ9a,EAAO8a,EAAsBC,QAAO,SAACC,EAAOC,GAC1C,IAAKA,EACH,OAAOD,EAGT,kBAAqCC,EAArC,GAAO5a,EAAP,KAAgB/F,EAAhB,KAAyBkgB,EAAzB,KAEA,OAAO,2BACFQ,GADL,kBAEG3a,EAAU,CACTma,WACAlW,SAAU0W,EAAM3a,GAAN,sBAAqB2a,EAAM3a,GAASiE,UAApC,CAA8ChK,IAAW,CAACA,QAGvE,IAEHmB,EAAS,CAAEP,KAAM,WAAYmN,KAAMrI,IA3CvB,wBA8CZvE,EAAS,CAAEP,KAAM,UA9CL,0DAiDdO,EAAS,CAAEP,KAAM,UAjDH,0DAAH,oDAsDbggB,KAED,CAACxf,EAASue,EAAaxe,IAI1B,OAAO,2BAAKT,GAAZ,IAAmB+P,QAFH,kBAAMtP,EAAS,CAAEP,KAAM,UAAWif,UAAW9Q,KAAK6Q,a,+CCjH9D1J,E,KAAgB1T,EAAOC,IAAV,8GACU,qBAAGC,MAAkBC,OAAOC,cAK1CsT,O,iCCRf,iCAqBekD,IAb+B,SAAC,GAAkB,IAAhBnY,EAAe,EAAfA,SACzCgC,EAAkBC,cAExB,OACE,eAAC,IAAD,CAAMoR,cAAc,SAASxE,WAAW,SAAShE,eAAe,SAASkO,EAAE,OAA3E,UACE,cAAC,IAAD,CAAsB9K,MAAM,OAAOrF,OAAO,SAC1C,cAAC,IAAD,CAASzG,GAAG,KAAKC,KAAK,KAAKC,MAAM,eAAjC,SACGrC,GAAYgC,EAAgB,IAAK,uB,sFCZpC4d,EAAgBre,YAAOoU,KAAPpU,CAAH,8EACG,qBAAGE,MAAkBC,OAAO4B,YAIlDsc,EAAcC,aAAe,CAC3B9G,EAAG,QAGU6G,Q,OCiBA9F,IAlByB,SAAC,GAAmE,IAA3DgG,EAA0D,EAAhE/F,KAAYnP,EAAoD,EAApDA,MAAOqP,EAA6C,EAA7CA,SAA6C,IAAnC7W,kBAAmC,SAAZY,EAAY,wDACzG,OACE,cAAC,EAAD,2BAAmBA,GAAnB,aACE,eAAC,IAAD,CAAM6K,WAAW,QAAjB,UACE,cAACiR,EAAD,CAAM7R,MAAM,OAAOhE,GAAG,OAAO5H,MAAOe,EAAa,eAAiB,iBAClE,gCACE,cAAC,IAAD,CAASjB,GAAG,KAAKC,KAAK,KAAKC,MAAOe,EAAa,eAAiB,OAAhE,SACGwH,IAEH,cAAC,KAAD,CAAMmV,cAAc,YAAY1d,MAAOe,EAAa,eAAiB,aAAcuD,SAAS,OAAOC,MAAI,EAAvG,SACGqT","file":"static/js/13.1263a38e.chunk.js","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Text,\r\n  Input as UIKitInput,\r\n  Button,\r\n  AutoRenewIcon,\r\n  CheckmarkIcon,\r\n  Flex,\r\n  WarningIcon,\r\n  useModal,\r\n  Skeleton,\r\n  Checkbox,\r\n} from '@pancakeswap-libs/uikit'\r\nimport { parseISO, formatDistance } from 'date-fns'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport debounce from 'lodash/debounce'\r\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\r\n\r\nenum ExistingUserState {\r\n  IDLE = 'idle', // initial state\r\n  CREATED = 'created', // username has already been created\r\n  NEW = 'new', // username has not been created\r\n}\r\n\r\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\r\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\r\n\r\nconst InputWrap = styled.div`\r\n  position: relative;\r\n  max-width: 240px;\r\n`\r\n\r\nconst Input = styled(UIKitInput)`\r\n  padding-right: 40px;\r\n`\r\n\r\nconst Indicator = styled(Flex)`\r\n  align-items: center;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-top: -12px;\r\n  position: absolute;\r\n  right: 16px;\r\n  top: 50%;\r\n  width: 24px;\r\n`\r\n\r\nconst UserName: React.FC = () => {\r\n  const [isAcknowledged, setIsAcknoledged] = useState(false)\r\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n  const TranslateString = useI18n()\r\n  const { account, library } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const web3 = useWeb3()\r\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\r\n  const [isValid, setIsValid] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\r\n  const [onPresentConfirmProfileCreation] = useModal(\r\n    <ConfirmProfileCreationModal\r\n      userName={userName}\r\n      tokenId={tokenId}\r\n      account={account}\r\n      teamId={teamId}\r\n      minimumCakeRequired={minimumCakeRequired}\r\n      allowance={allowance}\r\n    />,\r\n    false,\r\n  )\r\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\r\n\r\n  const checkUsernameValidity = debounce(async (value: string) => {\r\n    try {\r\n      setIsLoading(true)\r\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\r\n\r\n      if (res.ok) {\r\n        setIsValid(true)\r\n        setMessage('')\r\n      } else {\r\n        const data = await res.json()\r\n        setIsValid(false)\r\n        setMessage(data?.error?.message)\r\n      }\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, 200)\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.target\r\n    actions.setUserName(value)\r\n    checkUsernameValidity(value)\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n\r\n      const signature = library?.bnbSign\r\n        ? (await library.bnbSign(account, userName))?.signature\r\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\r\n\r\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          address: account,\r\n          username: userName,\r\n          signature,\r\n        }),\r\n      })\r\n\r\n      if (response.ok) {\r\n        setExistingUserState(ExistingUserState.CREATED)\r\n      } else {\r\n        const data = await response.json()\r\n        toastError(data?.error?.message)\r\n      }\r\n    } catch (error) {\r\n      toastError(error?.message ? error.message : JSON.stringify(error))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleAcknoledge = () => setIsAcknoledged(!isAcknowledged)\r\n\r\n  // Perform an initial check to see if the wallet has already created a username\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\r\n        const data = await response.json()\r\n\r\n        if (response.ok) {\r\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\r\n          setMessage(`Created ${dateCreated} ago`)\r\n\r\n          actions.setUserName(data.username)\r\n          setExistingUserState(ExistingUserState.CREATED)\r\n          setIsValid(true)\r\n        } else {\r\n          setExistingUserState(ExistingUserState.NEW)\r\n        }\r\n      } catch (error) {\r\n        toastError('Error: Unable to verify username')\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchUser()\r\n    }\r\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${4}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(1110, 'Set Your Name')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(\r\n          999,\r\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\r\n        )}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(1110, 'Set Your Name')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(\r\n              840,\r\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\r\n            )}\r\n          </Text>\r\n          {existingUserState === ExistingUserState.IDLE ? (\r\n            <Skeleton height=\"40px\" width=\"240px\" />\r\n          ) : (\r\n            <InputWrap>\r\n              <Input\r\n                onChange={handleChange}\r\n                isWarning={userName && !isValid}\r\n                isSuccess={userName && isValid}\r\n                minLength={USERNAME_MIN_LENGTH}\r\n                maxLength={USERNAME_MAX_LENGTH}\r\n                disabled={isUserCreated}\r\n                placeholder={TranslateString(1094, 'Enter your name...')}\r\n                value={userName}\r\n              />\r\n              <Indicator>\r\n                {isLoading && <AutoRenewIcon spin />}\r\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\r\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\r\n              </Indicator>\r\n            </InputWrap>\r\n          )}\r\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\r\n            {message}\r\n          </Text>\r\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\r\n            {TranslateString(\r\n              1100,\r\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\r\n            )}\r\n          </Text>\r\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\r\n            <Flex alignItems=\"center\">\r\n              <div style={{ flex: 'none' }}>\r\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknoledge} />\r\n              </div>\r\n              <Text ml=\"8px\">\r\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\r\n              </Text>\r\n            </Flex>\r\n          </label>\r\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\r\n            {TranslateString(464, 'Confirm')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\r\n        {TranslateString(842, 'Complete Profile')}\r\n      </Button>\r\n      {!hasMinimumCakeRequired && (\r\n        <Text color=\"failure\" mt=\"16px\">\r\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} CAKE is required`, { num: REGISTER_COST })}\r\n        </Text>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserName\r\n","export const MINT_COST = 1\r\nexport const REGISTER_COST = 0.5\r\nexport const ALLOWANCE_MULTIPLIER = 5\r\nexport const STARTER_BUNNY_IDS = [5, 6, 7, 8, 9]\r\nexport const USERNAME_MIN_LENGTH = 3\r\nexport const USERNAME_MAX_LENGTH = 15\r\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\r\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\r\nimport { Actions, State, ContextType } from './types'\r\n\r\nconst totalCost = MINT_COST + REGISTER_COST\r\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\r\n\r\nconst initialState: State = {\r\n  isInitialized: false,\r\n  currentStep: 0,\r\n  teamId: null,\r\n  tokenId: null,\r\n  userName: '',\r\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\r\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'initialize':\r\n      return {\r\n        ...state,\r\n        isInitialized: true,\r\n        currentStep: action.step,\r\n      }\r\n    case 'next_step':\r\n      return {\r\n        ...state,\r\n        currentStep: state.currentStep + 1,\r\n      }\r\n    case 'set_team':\r\n      return {\r\n        ...state,\r\n        teamId: action.teamId,\r\n      }\r\n    case 'set_tokenid':\r\n      return {\r\n        ...state,\r\n        tokenId: action.tokenId,\r\n      }\r\n    case 'set_username':\r\n      return {\r\n        ...state,\r\n        userName: action.userName,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const ProfileCreationContext = createContext<ContextType>(null)\r\n\r\nconst ProfileCreationProvider: React.FC = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n\r\n  // Initial checks\r\n  useEffect(() => {\r\n    let isSubscribed = true\r\n\r\n    const fetchData = async () => {\r\n      const bunnyFactoryContract = getBunnyFactoryContract()\r\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\r\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n\r\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\r\n      if (isSubscribed) {\r\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchData()\r\n    }\r\n\r\n    return () => {\r\n      isSubscribed = false\r\n    }\r\n  }, [account, dispatch])\r\n\r\n  const actions: ContextType['actions'] = useMemo(\r\n    () => ({\r\n      nextStep: () => dispatch({ type: 'next_step' }),\r\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\r\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\r\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\r\n    }),\r\n    [dispatch],\r\n  )\r\n\r\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\r\n}\r\n\r\nexport default ProfileCreationProvider\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Wrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst steps = [\r\n  { translationId: 776, label: 'Get Starter Collectible' },\r\n  { translationId: 778, label: 'Set Profile Picture' },\r\n  { translationId: 780, label: 'Join Team' },\r\n  { translationId: 782, label: 'Set Name' },\r\n]\r\n\r\nconst Header: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const { currentStep } = useContext(ProfileCreationContext)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\r\n        {TranslateString(770, 'Profile Setup')}\r\n      </Heading>\r\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\r\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\r\n      </Heading>\r\n      <Text color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(999, 'Total cost: 1.5 CAKE')}\r\n      </Text>\r\n      <Breadcrumbs>\r\n        {steps.map(({ translationId, label }, index) => {\r\n          return (\r\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\r\n              {TranslateString(translationId, label)}\r\n            </Text>\r\n          )\r\n        })}\r\n      </Breadcrumbs>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst WalletNotConnected = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <Heading size=\"xl\" mb=\"8px\">\r\n        {TranslateString(852, 'Oops!')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"16px\">\r\n        {TranslateString(999, 'Please connect your wallet to continue')}\r\n      </Text>\r\n      <UnlockButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WalletNotConnected\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useTokenBalance from './useTokenBalance'\r\n\r\n/**\r\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\r\n */\r\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  return cakeBalance.gte(minimumBalance)\r\n}\r\n\r\nexport default useHasCakeBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, Radio } from '@pancakeswap-libs/uikit'\r\n\r\ninterface SelectionCardProps {\r\n  name: string\r\n  value: string | number\r\n  isChecked?: boolean\r\n  onChange: (val: any) => void\r\n  image: string\r\n  disabled?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\r\n  border-radius: 16px;\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.label<{ isDisabled: boolean }>`\r\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\r\n`\r\n\r\nconst Body = styled.div`\r\n  align-items: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px 0 0 16px;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 80px;\r\n  padding: 8px 16px;\r\n`\r\n\r\nconst Children = styled.div`\r\n  margin-left: 16px;\r\n`\r\n\r\nconst StyledBackgroundImage = styled.div<{ src: string }>`\r\n  align-self: stretch;\r\n  background-image: url('${({ src }) => src}');\r\n  background-size: contain;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  flex: none;\r\n  width: 80px;\r\n`\r\n\r\nconst SelectionCard: React.FC<SelectionCardProps> = ({\r\n  name,\r\n  value,\r\n  isChecked = false,\r\n  image,\r\n  onChange,\r\n  disabled,\r\n  children,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\r\n      <Label isDisabled={disabled}>\r\n        <Body>\r\n          <Radio\r\n            name={name}\r\n            checked={isChecked}\r\n            value={value}\r\n            onChange={(e) => onChange(e.target.value)}\r\n            disabled={disabled}\r\n            style={{ flex: 'none' }}\r\n          />\r\n          <Children>{children}</Children>\r\n        </Body>\r\n        <StyledBackgroundImage src={image} />\r\n      </Label>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SelectionCard\r\n","import React from 'react'\r\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap-libs/uikit'\r\n\r\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\r\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\r\n}\r\n\r\nexport default NextStepButton\r\n","import { useContext } from 'react'\r\nimport { ProfileCreationContext } from './ProfileCreationProvider'\r\n\r\nconst useProfileCreation = () => {\r\n  return useContext(ProfileCreationContext)\r\n}\r\n\r\nexport default useProfileCreation\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport nftList from 'config/constants/nfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\r\nimport useProfileCreation from './contexts/hook'\r\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\r\n\r\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\r\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\r\n\r\nconst Mint: React.FC = () => {\r\n  const [bunnyId, setBunnyId] = useState(null)\r\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\r\n\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const bunnyFactoryContract = useBunnyFactory()\r\n  const TranslateString = useI18n()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      // TODO: Move this to a helper, this check will be probably be used many times\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return cakeContract.methods\r\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\r\n        .send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\r\n    },\r\n    onSuccess: () => actions.nextStep(),\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${1}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(776, 'Get Starter Collectible')}\r\n      </Heading>\r\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\r\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(792, 'Choose your Starter!')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\r\n          </Text>\r\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\r\n            {TranslateString(999, `Cost: ${MINT_COST} CAKE`, { num: MINT_COST })}\r\n          </Text>\r\n          {nfts.map((nft) => {\r\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\r\n\r\n            return (\r\n              <SelectionCard\r\n                key={nft.bunnyId}\r\n                name=\"mintStarter\"\r\n                value={nft.bunnyId}\r\n                image={`/images/nfts/${nft.images.md}`}\r\n                isChecked={bunnyId === nft.bunnyId}\r\n                onChange={handleChange}\r\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\r\n              >\r\n                <Text bold>{nft.name}</Text>\r\n              </SelectionCard>\r\n            )\r\n          })}\r\n          {!hasMinimumCakeRequired && (\r\n            <Text color=\"failure\" mb=\"16px\">\r\n              {TranslateString(1098, `A minimum of ${MINT_COST} CAKE is required`)}\r\n            </Text>\r\n          )}\r\n          <ApproveConfirmButtons\r\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\r\n            isApproving={isApproving}\r\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\r\n            isConfirming={isConfirming}\r\n            onApprove={handleApprove}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\r\n        {TranslateString(798, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mint\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport nftList from 'config/constants/nfts'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useToast } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\n\r\nconst Link = styled(RouterLink)`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst NftWrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst ProfilePicture: React.FC = () => {\r\n  const [isApproved, setIsApproved] = useState(false)\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { tokenId, actions } = useContext(ProfileCreationContext)\r\n  const TranslateString = useI18n()\r\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  const handleApprove = () => {\r\n    pancakeRabbitsContract.methods\r\n      .approve(getPancakeProfileAddress(), tokenId)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsApproving(false)\r\n        setIsApproved(true)\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!isLoading && walletNfts.length === 0) {\r\n    return (\r\n      <>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(852, 'Oops!')}\r\n        </Heading>\r\n        <Text bold fontSize=\"20px\" mb=\"24px\">\r\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {TranslateString(\r\n            856,\r\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\r\n          )}\r\n        </Text>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${2}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(778, 'Set Profile Picture')}\r\n      </Heading>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(812, 'Choose collectible')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\">\r\n            {TranslateString(\r\n              814,\r\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\r\n            )}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\r\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\r\n              {TranslateString(999, 'See the list >')}\r\n            </Link>\r\n          </Text>\r\n          <NftWrapper>\r\n            {isLoading ? (\r\n              <Skeleton height=\"80px\" mb=\"16px\" />\r\n            ) : (\r\n              walletNfts.map((walletNft) => {\r\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\r\n\r\n                return (\r\n                  <SelectionCard\r\n                    name=\"profilePicture\"\r\n                    key={walletNft.bunnyId}\r\n                    value={firstTokenId}\r\n                    image={`/images/nfts/${walletNft.images.md}`}\r\n                    isChecked={firstTokenId === tokenId}\r\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\r\n                  >\r\n                    <Text bold>{walletNft.name}</Text>\r\n                  </SelectionCard>\r\n                )\r\n              })\r\n            )}\r\n          </NftWrapper>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(818, 'Allow collectible to be locked')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {TranslateString(\r\n              820,\r\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\r\n            )}\r\n          </Text>\r\n          <Button\r\n            isLoading={isApproving}\r\n            disabled={isApproved || isApproving || tokenId === null}\r\n            onClick={handleApprove}\r\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\r\n          >\r\n            {TranslateString(564, 'Approve')}\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\r\n        {TranslateString(798, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n","import React, { useMemo } from 'react'\r\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport shuffle from 'lodash/shuffle'\r\nimport { useTeams } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport SelectionCard from '../components/SelectionCard'\r\nimport NextStepButton from '../components/NextStepButton'\r\nimport useProfileCreation from './contexts/hook'\r\n\r\ninterface Team {\r\n  name: string\r\n  description: string\r\n  isJoinable: boolean\r\n}\r\n\r\nconst Team: React.FC = () => {\r\n  const { teamId: currentTeamId, actions } = useProfileCreation()\r\n  const TranslateString = useI18n()\r\n  const { teams } = useTeams()\r\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\r\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\r\n\r\n  return (\r\n    <>\r\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\r\n        {TranslateString(999, `Step ${3}`)}\r\n      </Text>\r\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\r\n        {TranslateString(826, 'Join a Team')}\r\n      </Heading>\r\n      <Text as=\"p\" mb=\"24px\">\r\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\r\n      </Text>\r\n      <Card mb=\"24px\">\r\n        <CardBody>\r\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\r\n            {TranslateString(826, 'Join a Team')}\r\n          </Heading>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(\r\n              830,\r\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\r\n            )}\r\n          </Text>\r\n          {teamValues &&\r\n            teamValues.map((team) => {\r\n              return (\r\n                <SelectionCard\r\n                  key={team.name}\r\n                  name=\"teams-selection\"\r\n                  value={team.id}\r\n                  isChecked={currentTeamId === team.id}\r\n                  image={`/images/teams/${team.images.md}`}\r\n                  onChange={handleTeamSelection}\r\n                  disabled={!team.isJoinable}\r\n                >\r\n                  <Text bold>{team.name}</Text>\r\n                  <Flex>\r\n                    <CommunityIcon mr=\"8px\" />\r\n                    <Text>{team.users.toLocaleString()}</Text>\r\n                  </Flex>\r\n                </SelectionCard>\r\n              )\r\n            })}\r\n        </CardBody>\r\n      </Card>\r\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\r\n        {TranslateString(798, 'Next Step')}\r\n      </NextStepButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Team\r\n","import React from 'react'\r\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { fetchProfile } from 'state/profile'\r\nimport { useToast } from 'state/hooks'\r\nimport { REGISTER_COST } from '../ProfileCreation/config'\r\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\r\n\r\ninterface Props {\r\n  userName: string\r\n  tokenId: number\r\n  account: string\r\n  teamId: number\r\n  minimumCakeRequired: BigNumber\r\n  allowance: BigNumber\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\r\n  account,\r\n  teamId,\r\n  tokenId,\r\n  minimumCakeRequired,\r\n  allowance,\r\n  onDismiss,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const profileContract = useProfile()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const dispatch = useDispatch()\r\n  const { toastSuccess } = useToast()\r\n  const cakeContract = useCake()\r\n\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      try {\r\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gte(minimumCakeRequired)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return profileContract.methods\r\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\r\n        .send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      await dispatch(fetchProfile(account))\r\n      onDismiss()\r\n      toastSuccess('Profile created!')\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\r\n      <Text color=\"textSubtle\" mb=\"8px\">\r\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\r\n      </Text>\r\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\r\n        <Text>{TranslateString(999, 'Cost')}</Text>\r\n        <Text>{TranslateString(999, `${REGISTER_COST} CAKE`, { num: REGISTER_COST })}</Text>\r\n      </Flex>\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmProfileCreationModal\r\n","import { useReducer } from 'react'\r\n\r\nexport enum Views {\r\n  START = 'start',\r\n  CHANGE = 'change',\r\n  REMOVE = 'remove',\r\n  APPROVE = 'approve',\r\n}\r\n\r\nexport type Actions =\r\n  | {\r\n      type: 'set_view'\r\n      view: Views\r\n    }\r\n  | {\r\n      type: 'go_previous'\r\n    }\r\n\r\nexport interface State {\r\n  currentView: Views\r\n  previousView: Views | null\r\n}\r\n\r\nconst reducer = (state: State, action: Actions): State => {\r\n  switch (action.type) {\r\n    case 'set_view':\r\n      return {\r\n        ...state,\r\n        currentView: action.view,\r\n        previousView: state.currentView,\r\n      }\r\n    case 'go_previous':\r\n      return {\r\n        ...state,\r\n        currentView: state.previousView,\r\n        previousView: state.currentView,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport interface UseEditProfileResponse extends State {\r\n  goToStart: () => void\r\n  goToChange: () => void\r\n  goToApprove: () => void\r\n  goToRemove: () => void\r\n  goPrevious: () => void\r\n}\r\n\r\nconst useEditProfile = (): UseEditProfileResponse => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    currentView: Views.START,\r\n    previousView: null,\r\n  })\r\n\r\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\r\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\r\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\r\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\r\n  const goPrevious = () => dispatch({ type: 'go_previous' })\r\n\r\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\r\n}\r\n\r\nexport default useEditProfile\r\n","import React, { useContext } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport NoWalletConnected from '../components/WalletNotConnected'\r\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\r\nimport Mint from './Mint'\r\nimport ProfilePicture from './ProfilePicture'\r\nimport TeamSelection from './TeamSelection'\r\nimport UserName from './UserName'\r\n\r\nconst Steps = () => {\r\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <NoWalletConnected />\r\n  }\r\n\r\n  if (!isInitialized) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  if (currentStep === 0) {\r\n    return <Mint />\r\n  }\r\n\r\n  if (currentStep === 1) {\r\n    return <ProfilePicture />\r\n  }\r\n\r\n  if (currentStep === 2) {\r\n    return <TeamSelection />\r\n  }\r\n\r\n  if (currentStep === 3) {\r\n    return <UserName />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Steps\r\n","import React from 'react'\r\nimport Page from 'components/layout/Page'\r\nimport Header from './Header'\r\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\r\nimport Steps from './Steps'\r\n\r\nconst ProfileCreation = () => (\r\n  <ProfileCreationProvider>\r\n    <Page>\r\n      <Header />\r\n      <Steps />\r\n    </Page>\r\n  </ProfileCreationProvider>\r\n)\r\n\r\nexport default ProfileCreation\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\nimport { useClaimRefundContract } from 'hooks/useContract'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getClaimRefundContract } from 'utils/contractHelpers'\r\n\r\ninterface ClaimGiftProps extends InjectedModalProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nexport const useCanClaim = () => {\r\n  const [canClaim, setCanClaim] = useState(false)\r\n  const [refresh, setRefresh] = useState(1)\r\n  const { account } = useWeb3React()\r\n\r\n  const checkClaimStatus = useCallback(() => {\r\n    setRefresh((prevRefresh) => prevRefresh + 1)\r\n  }, [setRefresh])\r\n\r\n  useEffect(() => {\r\n    const fetchClaimStatus = async () => {\r\n      const claimRefundContract = getClaimRefundContract()\r\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\r\n      setCanClaim(walletCanClaim)\r\n    }\r\n\r\n    if (account) {\r\n      fetchClaimStatus()\r\n    }\r\n  }, [account, refresh, setCanClaim])\r\n\r\n  return { canClaim, checkClaimStatus }\r\n}\r\n\r\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const { canClaim } = useCanClaim()\r\n  const claimRefundContract = useClaimRefundContract()\r\n  const { toastSuccess, toastError } = useToast()\r\n\r\n  const handleClick = () => {\r\n    claimRefundContract.methods\r\n      .getCakeBack()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess('Success!')\r\n        onSuccess()\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        setIsConfirming(false)\r\n        toastError('Error', error?.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\r\n      <div style={{ maxWidth: '640px' }}>\r\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {TranslateString(\r\n            999,\r\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\">\r\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"8px\">\r\n          {TranslateString(\r\n            999,\r\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\r\n          )}\r\n        </Text>\r\n        <Text as=\"p\" mb=\"24px\">\r\n          {TranslateString(\r\n            999,\r\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\r\n          )}\r\n        </Text>\r\n        <Button\r\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          isLoading={isConfirming}\r\n          onClick={handleClick}\r\n          disabled={!canClaim}\r\n        >\r\n          {TranslateString(999, 'Claim Your CAKE')}\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimGift\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { useToast } from 'state/hooks'\r\n\r\nconst useGetProfileCosts = () => {\r\n  const [costs, setCosts] = useState({\r\n    numberCakeToReactivate: new BigNumber(0),\r\n    numberCakeToRegister: new BigNumber(0),\r\n    numberCakeToUpdate: new BigNumber(0),\r\n  })\r\n  const { toastError } = useToast()\r\n\r\n  useEffect(() => {\r\n    const fetchCosts = async () => {\r\n      try {\r\n        const profileContract = getProfileContract()\r\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\r\n          profileContract.methods.numberCakeToReactivate().call,\r\n          profileContract.methods.numberCakeToRegister().call,\r\n          profileContract.methods.numberCakeToUpdate().call,\r\n        ])\r\n\r\n        setCosts({\r\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\r\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\r\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\r\n        })\r\n      } catch (error) {\r\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\r\n      }\r\n    }\r\n\r\n    fetchCosts()\r\n  }, [setCosts, toastError])\r\n\r\n  return costs\r\n}\r\n\r\nexport default useGetProfileCosts\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap-libs/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  height: 24px;\r\n  position: absolute;\r\n  right: 0px;\r\n  width: 24px;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n    height: 48px;\r\n    width: 48px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  height: 64px;\r\n  position: relative;\r\n  width: 64px;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n// TODO: replace with no provile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  height: 64px;\r\n  width: 64px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 128px;\r\n    width: 128px;\r\n  }\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { useCake } from 'hooks/useContract'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useProfile } from 'state/hooks'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\r\nimport { UseEditProfileResponse } from './reducer'\r\nimport ProfileAvatar from '../ProfileAvatar'\r\n\r\ninterface StartPageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n  goToRemove: UseEditProfileResponse['goToRemove']\r\n  goToApprove: UseEditProfileResponse['goToApprove']\r\n}\r\n\r\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\r\n  border-color: ${({ theme }) => theme.colors.failure};\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  margin-bottom: 24px;\r\n\r\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\r\n    border-color: ${({ theme }) => theme.colors.failure};\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\r\n  const [needsApproval, setNeedsApproval] = useState(null)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const hasMinimumCakeRequired = useHasCakeBalance(profile.isActive ? numberCakeToUpdate : numberCakeToReactivate)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  /**\r\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\r\n   * If they don't, we send them to the approval screen first\r\n   */\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\r\n      const currentAllowance = new BigNumber(response)\r\n      setNeedsApproval(currentAllowance.lt(cost))\r\n    }\r\n\r\n    if (account) {\r\n      checkApprovalStatus()\r\n    }\r\n  }, [account, cost, setNeedsApproval, cakeContract])\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\r\n      <ProfileAvatar profile={profile} />\r\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\r\n        <Text as=\"p\" color=\"failure\">\r\n          {!hasMinimumCakeRequired &&\r\n            TranslateString(999, `${getFullDisplayBalance(numberCakeToUpdate)} CAKE required to change profile pic`)}\r\n        </Text>\r\n      </Flex>\r\n      {profile.isActive ? (\r\n        <>\r\n          <Button\r\n            width=\"100%\"\r\n            mb=\"8px\"\r\n            onClick={needsApproval === true ? goToApprove : goToChange}\r\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n          >\r\n            {TranslateString(999, 'Change Profile Pic')}\r\n          </Button>\r\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\r\n            {TranslateString(999, 'Remove Profile Pic')}\r\n          </DangerOutline>\r\n        </>\r\n      ) : (\r\n        <Button\r\n          width=\"100%\"\r\n          mb=\"8px\"\r\n          onClick={needsApproval === true ? goToApprove : goToChange}\r\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\r\n        >\r\n          {TranslateString(999, 'Reactivate Profile')}\r\n        </Button>\r\n      )}\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StartPage\r\n","import React, { useState } from 'react'\r\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\ntype PauseProfilePageProps = InjectedModalProps\r\n\r\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\r\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const { profile } = useProfile()\r\n  const { numberCakeToReactivate } = useGetProfileCosts()\r\n  const TranslateString = useI18n()\r\n  const pancakeProfileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\r\n\r\n  const handleDeactivateProfile = () => {\r\n    pancakeProfileContract.methods\r\n      .pauseProfile()\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', async () => {\r\n        // Re-fetch profile\r\n        await dispatch(fetchProfile(account))\r\n        toastSuccess('Profile Paused!')\r\n\r\n        onDismiss()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsConfirming(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\r\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(\r\n          999,\r\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\r\n      </Text>\r\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\r\n          <Text ml=\"8px\">{TranslateString(999, 'I understand')}</Text>\r\n        </Flex>\r\n      </label>\r\n      <Button\r\n        width=\"100%\"\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        disabled={!isAcknowledged || isConfirming}\r\n        onClick={handleDeactivateProfile}\r\n        mb=\"8px\"\r\n      >\r\n        {TranslateString(999, 'Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PauseProfilePage\r\n","import React, { useState } from 'react'\r\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport nftList from 'config/constants/nfts'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { fetchProfile } from 'state/profile'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\r\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\r\nimport SelectionCard from '../SelectionCard'\r\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\r\n\r\ntype ChangeProfilePicPageProps = InjectedModalProps\r\n\r\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\r\n  const [tokenId, setTokenId] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\r\n  const dispatch = useDispatch()\r\n  const { profile } = useProfile()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const profileContract = useProfileContract()\r\n  const { account } = useWeb3React()\r\n  const { toastSuccess } = useToast()\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onApprove: () => {\r\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      if (!profile.isActive) {\r\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\r\n      }\r\n\r\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      // Re-fetch profile\r\n      await dispatch(fetchProfile(account))\r\n      toastSuccess('Profile Updated!')\r\n\r\n      onDismiss()\r\n    },\r\n  })\r\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  return (\r\n    <>\r\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\r\n      </Text>\r\n      {isLoading ? (\r\n        <Skeleton height=\"80px\" mb=\"16px\" />\r\n      ) : (\r\n        walletNfts.map((walletNft) => {\r\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\r\n\r\n          return (\r\n            <SelectionCard\r\n              name=\"profilePicture\"\r\n              key={walletNft.bunnyId}\r\n              value={firstTokenId}\r\n              image={`/images/nfts/${walletNft.images.md}`}\r\n              isChecked={firstTokenId === tokenId}\r\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\r\n              disabled={isApproving || isConfirming || isConfirmed}\r\n            >\r\n              <Text bold>{walletNft.name}</Text>\r\n            </SelectionCard>\r\n          )\r\n        })\r\n      )}\r\n      {!isLoading && walletNfts.length === 0 && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\r\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\r\n          </Text>\r\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\r\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\r\n          </Text>\r\n        </>\r\n      )}\r\n      <ApproveConfirmButtons\r\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\r\n        isApproving={isApproving}\r\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\r\n        isConfirming={isConfirming}\r\n        onApprove={handleApprove}\r\n        onConfirm={handleConfirm}\r\n      />\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ChangeProfilePicPage\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useCake } from 'hooks/useContract'\r\nimport { useProfile, useToast } from 'state/hooks'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useGetProfileCosts from '../../hooks/useGetProfileCosts'\r\nimport { UseEditProfileResponse } from './reducer'\r\n\r\ninterface ApproveCakePageProps extends InjectedModalProps {\r\n  goToChange: UseEditProfileResponse['goToChange']\r\n}\r\n\r\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\r\n  const [isApproving, setIsApproving] = useState(false)\r\n  const { profile } = useProfile()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\r\n  const cakeContract = useCake()\r\n  const { toastError } = useToast()\r\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\r\n\r\n  const handleApprove = () => {\r\n    cakeContract.methods\r\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsApproving(true)\r\n      })\r\n      .on('receipt', () => {\r\n        goToChange()\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsApproving(false)\r\n      })\r\n  }\r\n\r\n  if (!profile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text>\r\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\r\n        </Text>\r\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\r\n      </Flex>\r\n      <Button\r\n        disabled={isApproving}\r\n        isLoading={isApproving}\r\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        width=\"100%\"\r\n        mb=\"8px\"\r\n        onClick={handleApprove}\r\n      >\r\n        {TranslateString(999, 'Approve')}\r\n      </Button>\r\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\r\n        {TranslateString(999, 'Close Window')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveCakePage\r\n","import React from 'react'\r\nimport { InjectedModalProps, Modal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useEditProfile, { Views } from './reducer'\r\nimport StartView from './StartView'\r\nimport PauseProfileView from './PauseProfileView'\r\nimport ChangeProfilePicView from './ChangeProfilePicView'\r\nimport ApproveCakeView from './ApproveCakeView'\r\n\r\ntype EditProfileModalProps = InjectedModalProps\r\n\r\nconst viewTitle = {\r\n  [Views.START]: { id: 999, label: 'Edit Profile' },\r\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\r\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\r\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\r\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\r\n  const TranslateString = useI18n()\r\n  const { id, label } = viewTitle[currentView]\r\n\r\n  const isStartView = currentView === Views.START\r\n  const handleBack = isStartView ? null : () => goPrevious()\r\n\r\n  return (\r\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\r\n      <div style={{ maxWidth: '400px' }}>\r\n        {currentView === Views.START && (\r\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\r\n        )}\r\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\r\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\r\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditProfileModal\r\n","import React from 'react'\r\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap-libs/uikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\r\nimport HeaderWrapper from './HeaderWrapper'\r\nimport EditProfileModal from './EditProfileModal'\r\n\r\nconst ProfileHeader = () => {\r\n  const TranslateString = useI18n()\r\n  const { canClaim, checkClaimStatus } = useCanClaim()\r\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n  const { hasProfile } = useProfile()\r\n\r\n  return (\r\n    <HeaderWrapper>\r\n      <Flex\r\n        flexDirection={['column', null, 'row']}\r\n        alignItems={['start', null, 'center']}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\r\n            {TranslateString(999, 'Your Profile')}\r\n          </Heading>\r\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\r\n            {TranslateString(999, 'Check your stats and collect achievements')}\r\n          </Heading>\r\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\r\n        </div>\r\n        {canClaim && (\r\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\r\n            {TranslateString(999, \"You've got a gift to claim!\")}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n    </HeaderWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileHeader\r\n","import React, { ImgHTMLAttributes } from 'react'\r\nimport styled from 'styled-components'\r\nimport { BunnyPlaceholderIcon } from '@pancakeswap-libs/uikit'\r\n\r\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\r\n  badge?: string\r\n}\r\n\r\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst StyledAchievementAvatar = styled.img`\r\n  border-radius: 50%;\r\n  height: 48px;\r\n  width: 48px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 64px;\r\n    width: 64px;\r\n  }\r\n`\r\n\r\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\r\n  if (!badge) {\r\n    return <NoBadgePlaceholder />\r\n  }\r\n\r\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\r\n}\r\n\r\nexport default AchievementAvatar\r\n","import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { TranslatableText as AchievementTitleType } from 'state/types'\r\n\r\ninterface AchievementTitleProps extends TextProps {\r\n  title: AchievementTitleType\r\n}\r\n\r\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  if (typeof title === 'string') {\r\n    return (\r\n      <Text bold {...props}>\r\n        {title}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { id, fallback, data = {} } = title\r\n\r\n  return (\r\n    <Text bold {...props}>\r\n      {TranslateString(id, fallback, data)}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default AchievementTitle\r\n","import React from 'react'\r\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\ninterface AchievementDescriptionProps extends TextProps {\r\n  description?: AchievementDescriptionType\r\n}\r\n\r\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  if (!description) {\r\n    return null\r\n  }\r\n\r\n  if (typeof description === 'string') {\r\n    return (\r\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\r\n        {description}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  const { id, fallback, data = {} } = description\r\n\r\n  return (\r\n    <Description color=\"textSubtle\" {...props}>\r\n      {TranslateString(id, fallback, data)}\r\n    </Description>\r\n  )\r\n}\r\n\r\nexport default AchievementDescription\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport AchievementAvatar from './AchievementAvatar'\r\nimport AchievementTitle from './AchievementTitle'\r\nimport AchievementDescription from './AchievementDescription'\r\n\r\ninterface AchievementCardProps {\r\n  achievement: Achievement\r\n}\r\n\r\nconst Details = styled(Flex)`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: 8px;\r\n  padding-right: 8px;\r\n`\r\n\r\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\r\n  return (\r\n    <Flex>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Details>\r\n        <AchievementTitle title={achievement.title} />\r\n        <AchievementDescription description={achievement.description} />\r\n      </Details>\r\n      <Flex alignItems=\"center\">\r\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\r\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AchievementCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useAchievements } from 'state/hooks'\r\nimport AchievementCard from './AchievementCard'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: 1fr;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`\r\n\r\nconst AchievementsList = () => {\r\n  const TranslateString = useI18n()\r\n  const achievements = useAchievements()\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        {achievements.map((achievement) => (\r\n          <AchievementCard key={achievement.id} achievement={achievement} />\r\n        ))}\r\n      </Grid>\r\n      {achievements.length === 0 && (\r\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\r\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\r\n            {TranslateString(999, 'No achievements yet!')}\r\n          </Heading>\r\n        </Flex>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AchievementsList\r\n","import styled from 'styled-components'\r\n\r\nconst ActionColumn = styled.div`\r\n  flex: none;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 160px;\r\n\r\n    & > button {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default ActionColumn\r\n","import React from 'react'\r\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PointsLabelProps extends FlexProps {\r\n  points: number\r\n}\r\n\r\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\r\n  const TranslateString = useI18n()\r\n  const localePoints = points.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" {...props}>\r\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\r\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PointsLabel\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap-libs/uikit'\r\nimport { Achievement } from 'state/types'\r\nimport { useToast } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePointCenterIfoContract } from 'hooks/useContract'\r\nimport ActionColumn from '../ActionColumn'\r\nimport PointsLabel from './PointsLabel'\r\nimport AchievementTitle from '../AchievementTitle'\r\nimport AchievementAvatar from '../AchievementAvatar'\r\nimport AchievementDescription from '../AchievementDescription'\r\n\r\ninterface AchievementRowProps {\r\n  achievement: Achievement\r\n  onCollectSuccess?: (achievement: Achievement) => void\r\n}\r\n\r\nconst StyledAchievementRow = styled(Flex)`\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  padding-bottom: 16px;\r\n  padding-top: 16px;\r\n`\r\n\r\nconst Details = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst Body = styled(Flex)`\r\n  flex-direction: column;\r\n  flex: 1;\r\n  margin-left: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    align-items: center;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\r\n  const [isCollecting, setIsCollecting] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const pointCenterContract = usePointCenterIfoContract()\r\n  const { account } = useWeb3React()\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  const handleCollectPoints = () => {\r\n    pointCenterContract.methods\r\n      .getPoints(achievement.address)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsCollecting(true)\r\n      })\r\n      .on('receipt', () => {\r\n        setIsCollecting(false)\r\n        onCollectSuccess(achievement)\r\n        toastSuccess('Points Collected!')\r\n      })\r\n      .on('error', (error) => {\r\n        toastError('Error', error?.message)\r\n        setIsCollecting(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <StyledAchievementRow>\r\n      <AchievementAvatar badge={achievement.badge} />\r\n      <Body>\r\n        <Details>\r\n          <AchievementTitle title={achievement.title} />\r\n          <AchievementDescription description={achievement.description} />\r\n        </Details>\r\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\r\n        <ActionColumn>\r\n          <Button\r\n            onClick={handleCollectPoints}\r\n            isLoading={isCollecting}\r\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n            disabled={isCollecting}\r\n            variant=\"secondary\"\r\n          >\r\n            {TranslateString(999, 'Collect')}\r\n          </Button>\r\n        </ActionColumn>\r\n      </Body>\r\n    </StyledAchievementRow>\r\n  )\r\n}\r\n\r\nexport default AchievementRow\r\n","import React, { useEffect, useState } from 'react'\r\nimport { sumBy } from 'lodash'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap-libs/uikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport { Achievement } from 'state/types'\r\nimport { addPoints } from 'state/profile'\r\nimport { addAchievement } from 'state/achievements'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getClaimableIfoData } from 'utils/achievements'\r\nimport AchievementRow from './AchievementRow'\r\n\r\nconst ClaimPointsCallout = () => {\r\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\r\n  const TranslateString = useI18n()\r\n  const dispatch = useDispatch()\r\n  const { profile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const fetchIfoClaims = async () => {\r\n      const ifoData = await getClaimableIfoData(account)\r\n      setClaimableAchievement(ifoData)\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoClaims()\r\n    }\r\n  }, [account, dispatch, setClaimableAchievement])\r\n\r\n  const handleCollectSuccess = (achievement: Achievement) => {\r\n    dispatch(addAchievement(achievement))\r\n    dispatch(addPoints(achievement.points))\r\n\r\n    setClaimableAchievement((prevClaimableAchievements) =>\r\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\r\n    )\r\n  }\r\n\r\n  if (!profile?.isActive) {\r\n    return null\r\n  }\r\n\r\n  if (claimableAchievements.length === 0) {\r\n    return null\r\n  }\r\n\r\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\r\n\r\n  return (\r\n    <Card isActive mb=\"32px\">\r\n      <CardHeader>\r\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\r\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\r\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\r\n            <Heading size=\"lg\">\r\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\r\n            </Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {claimableAchievements.map((achievement) => (\r\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\r\n        ))}\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ClaimPointsCallout\r\n","import useI18n from 'hooks/useI18n'\r\nimport React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\ninterface MenuProps {\r\n  activeIndex?: number\r\n}\r\n\r\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <Flex mb=\"24px\">\r\n        <RouterLink to=\"/teams\">\r\n          <Flex alignItems=\"center\">\r\n            <ChevronLeftIcon color=\"primary\" />\r\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\r\n          </Flex>\r\n        </RouterLink>\r\n      </Flex>\r\n\r\n      <Flex mb=\"24px\" justifyContent=\"center\">\r\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\r\n            {TranslateString(1090, 'Task Center')}\r\n          </ButtonMenuItem>\r\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\r\n            {TranslateString(1104, 'Public Profile')}\r\n          </ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport AchievementsList from './components/AchievementsList'\r\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\r\nimport ComingSoon from './components/ComingSoon'\r\nimport Menu from './components/Menu'\r\n\r\nconst TaskCenter = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <>\r\n      <Menu />\r\n      <ClaimPointsCallout />\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {TranslateString(1092, 'Achievements')}\r\n              </Heading>\r\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <AchievementsList />\r\n        </CardBody>\r\n      </Card>\r\n      <Card mb=\"32px\">\r\n        <CardHeader>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <div>\r\n              <Heading size=\"lg\" mb=\"8px\">\r\n                {TranslateString(1090, 'Task Center')}\r\n              </Heading>\r\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\r\n              <Text as=\"p\">\r\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\r\n              </Text>\r\n            </div>\r\n          </Flex>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <ComingSoon />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TaskCenter\r\n","import styled, { DefaultTheme } from 'styled-components'\r\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap-libs/uikit'\r\n\r\nconst getBackground = (theme: DefaultTheme) => {\r\n  if (theme.isDark) {\r\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\r\n  }\r\n\r\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\r\n}\r\n\r\nconst CardHeader = styled(UIKitCardHeader)`\r\n  background: ${({ theme }) => getBackground(theme)};\r\n  position: relative;\r\n`\r\n\r\nexport default CardHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { Nft } from 'config/constants/types'\r\n\r\ninterface CollectibleCardProps {\r\n  nft: Nft\r\n}\r\n\r\nconst PreviewImage = styled.img`\r\n  border-radius: 4px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\r\n  return (\r\n    <div>\r\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\r\n      <Text bold mb=\"8px\">\r\n        {nft.name}\r\n      </Text>\r\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\r\n        {nft.description}\r\n      </Text>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CollectibleCard\r\n","import React from 'react'\r\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport useI18n from 'hooks/useI18n'\r\nimport nfts from 'config/constants/nfts'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport styled from 'styled-components'\r\nimport CollectibleCard from './CollectibleCard'\r\n\r\nconst CollectibleList = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 24px;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    padding: 24px 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: repeat(5, 1fr);\r\n  }\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const TranslateString = useI18n()\r\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\r\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\r\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\r\n\r\n  return (\r\n    <>\r\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\r\n        {TranslateString(999, 'Koala Collectibles')}\r\n      </Heading>\r\n      <Text as=\"p\">\r\n        {TranslateString(\r\n          999,\r\n          'Koala Collectibles are special ERC-721 NFTs that can be used on the Koala DeFi platform.',\r\n        )}\r\n      </Text>\r\n      <Text as=\"p\">\r\n        {TranslateString(\r\n          999,\r\n          \"NFTs in this user's wallet that aren't approved Koala Collectibles won't be shown here.\",\r\n        )}\r\n      </Text>\r\n      {nftsInWallet.length > 0 && (\r\n        <CollectibleList>\r\n          {nftsInWallet.map((nftInWallet) => (\r\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\r\n          ))}\r\n        </CollectibleList>\r\n      )}\r\n      {nftsInWallet.length === 0 && (\r\n        <Flex justifyContent=\"center\" p=\"32px\">\r\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\r\n            {TranslateString(999, 'No NFTs Found')}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\r\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\r\n        <ChevronRightIcon />\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useModal } from '@pancakeswap-libs/uikit'\r\nimport EditProfileModal from './EditProfileModal'\r\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\r\n\r\nconst EditOverlay = styled.div`\r\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\r\n  background-size: 24px;\r\n  border-radius: 50%;\r\n  left: 0;\r\n  height: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: opacity 300ms;\r\n  width: 100%;\r\n  z-index: 3;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    background-size: 48px;\r\n  }\r\n`\r\n\r\nconst StyledEditProfileAvatar = styled.div`\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n\r\n    ${EditOverlay} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\r\n\r\n  return (\r\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\r\n      <ProfileAvatar profile={profile} />\r\n      <EditOverlay />\r\n    </StyledEditProfileAvatar>\r\n  )\r\n}\r\n\r\nexport default EditProfileAvatar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CheckmarkCircleIcon,\r\n  Flex,\r\n  Heading,\r\n  Link,\r\n  Tag,\r\n  Text,\r\n  PrizeIcon,\r\n  OpenNewIcon,\r\n  BlockIcon,\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useProfile } from 'state/hooks'\r\nimport Menu from './components/Menu'\r\nimport CardHeader from './components/CardHeader'\r\nimport Collectibles from './components/Collectibles'\r\nimport WalletNotConnected from './components/WalletNotConnected'\r\nimport StatBox from './components/StatBox'\r\nimport EditProfileAvatar from './components/EditProfileAvatar'\r\nimport AchievementsList from './components/AchievementsList'\r\n\r\nconst Content = styled.div`\r\n  flex: 1;\r\n  padding: 16px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 0 16px;\r\n  }\r\n`\r\n\r\nconst Username = styled(Heading)`\r\n  font-size: 16px;\r\n  line-height: 24px;\r\n  margin-bottom: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 40px;\r\n    line-height: 44px;\r\n  }\r\n`\r\n\r\nconst Status = styled.div`\r\n  position: absolute;\r\n  right: 24px;\r\n  top: 24px;\r\n`\r\n\r\nconst ResponsiveText = styled(Text)`\r\n  font-size: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n  }\r\n`\r\n\r\nconst AddressLink = styled(Link)`\r\n  display: inline-block;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  width: 80px;\r\n  white-space: nowrap;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    font-size: 16px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst PublicProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const { profile } = useProfile()\r\n  const TranslateString = useI18n()\r\n\r\n  if (!account) {\r\n    return <WalletNotConnected />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Menu activeIndex={1} />\r\n      <div>\r\n        <Card>\r\n          <CardHeader>\r\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\r\n              <EditProfileAvatar profile={profile} />\r\n              <Content>\r\n                <Username>{`@${profile.username}`}</Username>\r\n                <Flex alignItems=\"center\">\r\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\r\n                    {account}\r\n                  </AddressLink>\r\n                  <OpenNewIcon ml=\"4px\" />\r\n                </Flex>\r\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\r\n              </Content>\r\n            </Flex>\r\n            <Status>\r\n              {profile.isActive ? (\r\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\r\n                  {TranslateString(698, 'Active')}\r\n                </Tag>\r\n              ) : (\r\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\r\n                  {TranslateString(999, 'Paused')}\r\n                </Tag>\r\n              )}\r\n            </Status>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\r\n            <Section>\r\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\r\n                {TranslateString(1092, 'Achievements')}\r\n              </Heading>\r\n              <AchievementsList />\r\n            </Section>\r\n            <Collectibles />\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublicProfile\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/layout/Page'\r\nimport PageLoader from 'components/PageLoader'\r\nimport { useFetchAchievements, useProfile } from 'state/hooks'\r\nimport ProfileCreation from './ProfileCreation'\r\nimport Header from './components/Header'\r\nimport TaskCenter from './TaskCenter'\r\nimport PublicProfile from './PublicProfile'\r\n\r\nconst Profile = () => {\r\n  const { isInitialized, isLoading, hasProfile } = useProfile()\r\n  const { account } = useWeb3React()\r\n\r\n  useFetchAchievements()\r\n\r\n  if (!isInitialized || isLoading) {\r\n    return <PageLoader />\r\n  }\r\n\r\n  if (account && !hasProfile) {\r\n    return (\r\n      <Page>\r\n        <ProfileCreation />\r\n      </Page>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <Header />\r\n      <Route exact path=\"/profile\">\r\n        <PublicProfile />\r\n      </Route>\r\n      <Route path=\"/profile/tasks\">\r\n        <TaskCenter />\r\n      </Route>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, Flex, AutoRenewIcon, ChevronDownIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Flex py=\"8px\" flexDirection={['column', null, 'row']} alignItems=\"center\">\r\n      <Button\r\n        disabled={isApproveDisabled}\r\n        onClick={onApprove}\r\n        endIcon={isApproving ? spinnerIcon : undefined}\r\n        isLoading={isApproving}\r\n      >\r\n        {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\r\n      </Button>\r\n      <ChevronRight />\r\n      <ChevronBottom />\r\n      <Button\r\n        onClick={onConfirm}\r\n        disabled={isConfirmDisabled}\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? spinnerIcon : undefined}\r\n      >\r\n        {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n          console.error('An error occurred approving transaction:', error)\r\n          toastError('An error occurred approving transaction')\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n          console.error('An error occurred confirming transaction:', error)\r\n          toastError('An error occurred confirming transaction')\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { useEffect, useReducer } from 'react'\r\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nconst pancakeRabbitsContract = getPancakeRabbitContract()\r\n\r\nexport type NftMap = {\r\n  [key: number]: {\r\n    tokenUri: string\r\n    tokenIds: number[]\r\n  }\r\n}\r\n\r\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\r\n\r\ntype State = {\r\n  isLoading: boolean\r\n  nfts: NftMap\r\n  lastUpdated: number\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoading: true,\r\n  nfts: {},\r\n  lastUpdated: Date.now(),\r\n}\r\n\r\nconst reducer = (state: State, action: Action) => {\r\n  switch (action.type) {\r\n    case 'set_nfts':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n        nfts: action.data,\r\n      }\r\n    case 'refresh':\r\n      return {\r\n        ...initialState,\r\n        lastUpdated: action.timestamp,\r\n      }\r\n    case 'reset':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useGetWalletNfts = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated } = state\r\n\r\n  useEffect(() => {\r\n    const fetchNfts = async () => {\r\n      try {\r\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\r\n\r\n        if (balanceOf > 0) {\r\n          let nfts: NftMap = {}\r\n\r\n          const getTokenIdAndBunnyId = async (index: number) => {\r\n            try {\r\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\r\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\r\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\r\n\r\n              return [Number(bunnyId), Number(tokenId), tokenUri]\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const tokenIdPromises = []\r\n\r\n          for (let i = 0; i < balanceOf; i++) {\r\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\r\n          }\r\n\r\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\r\n\r\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\r\n            if (!association) {\r\n              return accum\r\n            }\r\n\r\n            const [bunnyId, tokenId, tokenUri] = association\r\n\r\n            return {\r\n              ...accum,\r\n              [bunnyId]: {\r\n                tokenUri,\r\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\r\n              },\r\n            }\r\n          }, {})\r\n\r\n          dispatch({ type: 'set_nfts', data: nfts })\r\n        } else {\r\n          // Reset it in case of wallet change\r\n          dispatch({ type: 'reset' })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'reset' })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchNfts()\r\n    }\r\n  }, [account, lastUpdated, dispatch])\r\n\r\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\r\n\r\n  return { ...state, refresh }\r\n}\r\n\r\nexport default useGetWalletNfts\r\n","import styled from 'styled-components'\r\n\r\nconst HeaderWrapper = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ComingSoonProps {\r\n  children?: React.ReactNode\r\n}\r\n\r\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\r\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\r\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\r\n        {children || TranslateString(999, 'Coming Soon!')}\r\n      </Heading>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ComingSoon\r\n","import styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\nconst SecondaryCard = styled(Text)`\r\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\r\n  border-radius: 16px;\r\n`\r\n\r\nSecondaryCard.defaultProps = {\r\n  p: '24px',\r\n}\r\n\r\nexport default SecondaryCard\r\n","import React, { ElementType, ReactNode } from 'react'\r\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap-libs/uikit'\r\nimport SecondaryCard from './SecondaryCard'\r\n\r\ninterface StatBoxProps extends TextProps {\r\n  icon: ElementType\r\n  title: ReactNode\r\n  subtitle: ReactNode\r\n  isDisabled?: boolean\r\n}\r\n\r\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\r\n  return (\r\n    <SecondaryCard {...props}>\r\n      <Flex alignItems=\"start\">\r\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\r\n        <div>\r\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\r\n            {title}\r\n          </Heading>\r\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\r\n            {subtitle}\r\n          </Text>\r\n        </div>\r\n      </Flex>\r\n    </SecondaryCard>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n"],"sourceRoot":""}