{"version":3,"sources":["views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/hooks/useGetWalletIfoData.ts","components/BalanceInput/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/PercentageOfTotal.tsx","views/Ifos/components/IfoCard/Contribute.tsx","views/Ifos/components/IfoCard/MetaLabel.tsx","views/Ifos/components/IfoCard/BalanceInUsd.tsx","views/Ifos/components/IfoCard/Claim.tsx","views/Ifos/components/IfoCard/ActiveSkeleton.tsx","views/Ifos/components/IfoCard/InactiveSkeleton.tsx","views/Ifos/components/IfoCard/IfoCardActions.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx","hooks/useContract.ts","utils/formatBalance.ts","hooks/useWeb3.ts","components/UnlockButton.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","hooks/useTokenBalance.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useBlock.ts","utils/getTimePeriods.ts","hooks/useAllowance.ts"],"names":["Wrapper","styled","div","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","scale","variant","as","Link","to","Title","Heading","attrs","size","theme","colors","secondary","Blurb","Text","StyledHero","Hero","useI18n","Container","getStatus","currentBlock","startBlock","endBlock","useGetPublicIfoData","ifo","address","releaseBlockNumber","useState","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","BigNumber","totalAmount","startBlockNum","endBlockNum","state","setState","useBlock","contract","useIfoContract","useEffect","a","makeBatchRequest","methods","call","parseInt","totalBlocks","BSC_BLOCK_TIME","fetchProgress","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","Item","Display","IfoCardDetails","publicIfoData","isOpen","setIsOpen","TranslateString","description","projectSiteUrl","cakeToBurn","launchDate","launchTime","saleAmount","raiseAmount","console","log","onClick","endIcon","color","my","href","target","rel","ml","style","display","times","toFixed","margin","useGetWalletIfoData","isPendingTx","offeringTokenBalance","refundingAmount","userInfo","amount","claimed","currencyAddress","account","useWeb3React","currencyContract","useERC20","allowance","useIfoAllowance","getOfferingAmount","getRefundingAmount","offeringAmount","userInfoResponse","prevState","fetchIfoData","setPendingTx","addUserContributedAmount","plus","setIsClaimed","StyledBalanceInput","Box","input","radii","default","BalanceInput","title","max","symbol","onChange","onSelectMax","value","props","maxDisplay","justifyContent","fontSize","num","placeholder","mr","ContributeModal","currency","onDismiss","onSuccess","setValue","raisingTokenContract","balance","getBalanceNumber","useTokenBalance","valueWithTokenDecimals","pow","useApproveConfirmTransaction","onRequiresApproval","options","response","currentAllowance","gt","onApprove","approve","ethers","constants","MaxUint256","send","from","onConfirm","deposit","toString","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","e","currentTarget","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","isNaN","eq","PercentageOfTotal","userAmount","percentofUserDisplay","toNumber","toLocaleString","undefined","maximumFractionDigits","Contribute","contributedBalance","toastSuccess","useToast","useModal","onPresentContributeModal","bold","textTransform","flex","pr","disabled","MetaLabel","children","minHeight","BalanceInUsd","token","priceInUsd","useGetApiPrice","hasBalance","total","minimumFractionDigits","AmountGrid","Claim","didContribute","canClaim","refundedBalance","tokenSymbol","tokenDecimals","rewardBalance","toastError","hasParticipated","handleClaim","harvest","message","error","isLoading","spin","mt","ActiveSkeleton","InactiveSkeleton","IfoCardActions","isActive","UnlockButton","IfoCardProgress","primaryStep","Details","Countdown","IfoCardTime","block","countdownToUse","timeUntil","getTimePeriods","suffix","days","hours","minutes","StyledIfoCard","Card","IfoCard","id","Ribbon","variantColor","text","getRibbonComponent","ribbon","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","activeIfo","BaseLayout","sm","ul","ifosConfig","find","Ifo","IfoCards","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo","web3","useWeb3","useMemo","getIfoContract","getBep20Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","usePancakeRabbits","getPancakeRabbitContract","useProfile","getProfileContract","useLottery","getLotteryContract","useLotteryTicket","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","decimals","displayBalance","dividedBy","getFullDisplayBalance","library","refEth","useRef","Web3","getWeb3NoAccount","setweb3","current","useAuth","login","logout","onPresentConnectModal","useWalletModal","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","balanceOf","res","fetchBalance","fastRefresh","Button","UIKitButton","iconAttrs","ChevronRight","ChevronRightIcon","ChevronBottom","ChevronDownIcon","spinnerIcon","py","flexDirection","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","actions","type","payload","noop","useReducer","dispatch","handlePreApprove","then","result","on","useContext","BlockContext","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","months","Math","floor","useLotteryAllowance","setAllowance","fetchAllowance","getLotteryAddress","refreshInterval","setInterval","clearInterval","tokenContract","spenderAddress","dependency","fetch"],"mappings":"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","file":"static/js/2.7fbb1632.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 39px;\r\n`\r\n\r\nconst IfoTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          Next IFO\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          Past IFOs\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default IfoTabButtons\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport Container from 'components/layout/Container'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(139.73deg,#d4aca466 0%,#d4aca455 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n  margin-bottom: 32px;\r\n`\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <Container>\r\n        <Title>IGO: Initial Grill Offerings</Title>\r\n        <Blurb>Buy new tokens at the best price.</Blurb>\r\n      </Container>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import BigNumber from 'bignumber.js'\r\nimport { BSC_BLOCK_TIME } from 'config'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { useIfoContract } from 'hooks/useContract'\r\nimport { useEffect, useState } from 'react'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nexport interface PublicIfoState {\r\n  status: IfoStatus\r\n  blocksRemaining: number\r\n  secondsUntilStart: number\r\n  progress: number\r\n  secondsUntilEnd: number\r\n  raisingAmount: BigNumber\r\n  totalAmount: BigNumber\r\n  startBlockNum: number\r\n  endBlockNum: number\r\n}\r\n\r\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus => {\r\n  // Add an extra check to currentBlock because it takes awhile to fetch so the initial value is 0\r\n  // making the UI change to an inaccurate status\r\n  if (currentBlock === 0) {\r\n    return 'idle'\r\n  }\r\n\r\n  if (currentBlock < startBlock) {\r\n    return 'coming_soon'\r\n  }\r\n\r\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\r\n    return 'live'\r\n  }\r\n\r\n  if (currentBlock > endBlock) {\r\n    return 'finished'\r\n  }\r\n\r\n  return 'idle'\r\n}\r\n\r\n/**\r\n * Gets all public data of an IFO\r\n */\r\nconst useGetPublicIfoData = (ifo: Ifo) => {\r\n  const { address, releaseBlockNumber } = ifo\r\n  const [state, setState] = useState<PublicIfoState>({\r\n    status: 'idle',\r\n    blocksRemaining: 0,\r\n    secondsUntilStart: 0,\r\n    progress: 5,\r\n    secondsUntilEnd: 0,\r\n    raisingAmount: new BigNumber(0),\r\n    totalAmount: new BigNumber(0),\r\n    startBlockNum: 0,\r\n    endBlockNum: 0,\r\n  })\r\n  const currentBlock = useBlock()\r\n  const contract = useIfoContract(address)\r\n\r\n  useEffect(() => {\r\n    const fetchProgress = async () => {\r\n      const [startBlock, endBlock, raisingAmount, totalAmount] = (await makeBatchRequest([\r\n        contract.methods.startBlock().call,\r\n        contract.methods.endBlock().call,\r\n        contract.methods.raisingAmount().call,\r\n        contract.methods.totalAmount().call,\r\n      ])) as [string, string, string, string]\r\n\r\n      const startBlockNum = parseInt(startBlock, 10)\r\n      const endBlockNum = parseInt(endBlock, 10)\r\n\r\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\r\n      const totalBlocks = endBlockNum - startBlockNum\r\n      const blocksRemaining = endBlockNum - currentBlock\r\n\r\n      // Calculate the total progress until finished or until start\r\n      const progress =\r\n        currentBlock > startBlockNum\r\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\r\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\r\n\r\n      setState({\r\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\r\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\r\n        raisingAmount: new BigNumber(raisingAmount),\r\n        totalAmount: new BigNumber(totalAmount),\r\n        status,\r\n        progress,\r\n        blocksRemaining,\r\n        startBlockNum,\r\n        endBlockNum,\r\n      })\r\n    }\r\n\r\n    fetchProgress()\r\n  }, [address, currentBlock, contract, releaseBlockNumber, setState])\r\n\r\n  return state\r\n}\r\n\r\nexport default useGetPublicIfoData\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardHeaderProps {\r\n  ifoId: string\r\n  name: string\r\n  subTitle: string\r\n}\r\n\r\nconst StyledIfoCardHeader = styled(Flex)`\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\r\n  margin-bottom: 4px;\r\n  text-align: right;\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  text-align: right;\r\n`\r\n\r\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\r\n  return (\r\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\r\n      <img src={`/images/ifos/${ifoId}.png`} alt={ifoId} width=\"64px\" height=\"64px\" />\r\n      <div>\r\n        <Name>{name}</Name>\r\n        <Description>{subTitle}</Description>\r\n      </div>\r\n    </StyledIfoCardHeader>\r\n  )\r\n}\r\n\r\nexport default IfoCardHeader\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Text,\r\n  LinkExternal,\r\n  Link,\r\n  Box,\r\n  CardFooter,\r\n  Button,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n} from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\r\n\r\nexport interface IfoCardDetailsProps {\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoState\r\n}\r\n\r\nconst Item = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n`\r\n\r\nconst Display = styled(Text)`\r\n  flex: 1;\r\n`\r\n\r\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo, publicIfoData }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { description, cakeToBurn, projectSiteUrl, launchDate, launchTime, saleAmount, raiseAmount } = ifo\r\n  const { raisingAmount, totalAmount } = publicIfoData\r\n  const handleToggle = () => setIsOpen(!isOpen)\r\n\r\n  console.log(raisingAmount);\r\n  console.log(totalAmount);\r\n\r\n  return (\r\n    <CardFooter>\r\n      <Button\r\n        variant=\"text\"\r\n        onClick={handleToggle}\r\n        width=\"100%\"\r\n        endIcon={\r\n          isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\r\n        }\r\n      >\r\n        {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\r\n      </Button>\r\n      {isOpen && (\r\n        <>\r\n          <Text as=\"p\" color=\"textSubtle\" my=\"24px\">\r\n            {description}\r\n          </Text>\r\n          <Box mb=\"24px\">\r\n            <Item>\r\n              <Display>{TranslateString(582, 'Launch Time')}</Display>\r\n              <Text>\r\n                {launchDate},\r\n                <Link\r\n                  href=\"https://www.timeanddate.com/worldclock/timezone/utc\"\r\n                  target=\"blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  ml=\"4px\"\r\n                  style={{ display: 'inline' }}\r\n                >\r\n                  {launchTime}\r\n                </Link>\r\n              </Text>\r\n            </Item>\r\n            <Item>\r\n              <Display>{TranslateString(584, 'For Sale')}</Display>\r\n              <Text>{saleAmount}</Text>\r\n            </Item>\r\n            <Item>\r\n              <Display>To raise (WBNB)</Display>\r\n              <Text>{raiseAmount}</Text>\r\n            </Item>\r\n            <Item>\r\n              <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\r\n              <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\r\n            </Item>\r\n          </Box>\r\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\r\n            {TranslateString(412, 'View project site')}\r\n          </LinkExternal>\r\n        </>\r\n      )}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default IfoCardDetails\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { useERC20, useIfoContract } from 'hooks/useContract'\r\nimport { useIfoAllowance } from 'hooks/useAllowance'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nexport interface UserInfo {\r\n  amount: BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface WalletIfoState {\r\n  isPendingTx: boolean\r\n  offeringTokenBalance: BigNumber\r\n  refundingAmount: BigNumber\r\n  userInfo: UserInfo\r\n}\r\n\r\n/**\r\n * Gets all data from an IFO related to a wallet\r\n */\r\nconst useGetWalletIfoData = (ifo: Ifo) => {\r\n  const [state, setState] = useState<WalletIfoState>({\r\n    isPendingTx: false,\r\n    offeringTokenBalance: new BigNumber(0),\r\n    refundingAmount: new BigNumber(0),\r\n    userInfo: {\r\n      amount: new BigNumber(0),\r\n      claimed: false,\r\n    },\r\n  })\r\n\r\n  const { address, currencyAddress } = ifo\r\n  const { isPendingTx } = state\r\n\r\n  const { account } = useWeb3React()\r\n  const contract = useIfoContract(address)\r\n  const currencyContract = useERC20(currencyAddress)\r\n  const allowance = useIfoAllowance(currencyContract, address, isPendingTx)\r\n\r\n  const setPendingTx = (status: boolean) =>\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isPendingTx: status,\r\n    }))\r\n\r\n  const addUserContributedAmount = (amount: BigNumber) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      userInfo: {\r\n        ...prevState.userInfo,\r\n        amount: prevState.userInfo.amount.plus(amount),\r\n      },\r\n    }))\r\n  }\r\n\r\n  const setIsClaimed = () => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      userInfo: {\r\n        ...prevState.userInfo,\r\n        claimed: true,\r\n      },\r\n    }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchIfoData = async () => {\r\n      const [offeringAmount, userInfoResponse, refundingAmount] = (await makeBatchRequest([\r\n        contract.methods.getOfferingAmount(account).call,\r\n        contract.methods.userInfo(account).call,\r\n        contract.methods.getRefundingAmount(account).call,\r\n      ])) as [string, UserInfo, string]\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        offeringTokenBalance: new BigNumber(offeringAmount),\r\n        refundingAmount: new BigNumber(refundingAmount),\r\n        userInfo: {\r\n          amount: new BigNumber(userInfoResponse.amount),\r\n          claimed: userInfoResponse.claimed,\r\n        },\r\n      }))\r\n    }\r\n\r\n    if (account) {\r\n      fetchIfoData()\r\n    }\r\n  }, [account, contract, setState])\r\n\r\n  return { ...state, allowance, contract, setPendingTx, addUserContributedAmount, setIsClaimed }\r\n}\r\n\r\nexport default useGetWalletIfoData\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Box, BoxProps, Flex, Input, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface BalanceInputProps extends BoxProps {\r\n  title: string\r\n  max: number\r\n  symbol: string\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n  value: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst StyledBalanceInput = styled(Box)`\r\n  background: ${({ theme }) => theme.colors.input};\r\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  padding: 8px 16px;\r\n`\r\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\r\n  const TranslateString = useI18n()\r\n  const maxDisplay = max.toFixed(6)\r\n\r\n  return (\r\n    <StyledBalanceInput {...props}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text fontSize=\"14px\">{title}</Text>\r\n        <Text fontSize=\"14px\">{TranslateString(999, `Balance: ${maxDisplay}`, { num: maxDisplay })}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\r\n        <Flex alignItems=\"center\">\r\n          {onSelectMax && (\r\n            <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n              {TranslateString(452, 'Max')}\r\n            </Button>\r\n          )}\r\n          <Text>{symbol}</Text>\r\n        </Flex>\r\n      </Flex>\r\n    </StyledBalanceInput>\r\n  )\r\n}\r\n\r\nexport default BalanceInput\r\n","import React, { useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { Modal, LinkExternal, Box } from '@pancakeswap-libs/uikit'\r\nimport BalanceInput from 'components/BalanceInput'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\r\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\r\nimport { useERC20 } from 'hooks/useContract'\r\n\r\ninterface Props {\r\n  currency: string\r\n  contract: any\r\n  currencyAddress: string\r\n  onSuccess: (amount: BigNumber) => void\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss, onSuccess }) => {\r\n  const [value, setValue] = useState('')\r\n  const { account } = useWeb3React()\r\n  const raisingTokenContract = useERC20(currencyAddress)\r\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress))\r\n  const TranslateString = useI18n()\r\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\r\n  const {\r\n    isApproving,\r\n    isApproved,\r\n    isConfirmed,\r\n    isConfirming,\r\n    handleApprove,\r\n    handleConfirm,\r\n  } = useApproveConfirmTransaction({\r\n    onRequiresApproval: async () => {\r\n      try {\r\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\r\n        const currentAllowance = new BigNumber(response)\r\n        return currentAllowance.gt(0)\r\n      } catch (error) {\r\n        return false\r\n      }\r\n    },\r\n    onApprove: () => {\r\n      return raisingTokenContract.methods\r\n        .approve(contract.options.address, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n    },\r\n    onConfirm: () => {\r\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\r\n    },\r\n    onSuccess: async () => {\r\n      onDismiss()\r\n      onSuccess(valueWithTokenDecimals)\r\n    },\r\n  })\r\n\r\n  return (\r\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\r\n      <Box width=\"344px\">\r\n        <BalanceInput\r\n          title={TranslateString(999, 'Contribute')}\r\n          value={value}\r\n          onChange={(e) => setValue(e.currentTarget.value)}\r\n          symbol={currency}\r\n          max={balance}\r\n          onSelectMax={() => setValue(balance.toString())}\r\n          mb=\"24px\"\r\n        />\r\n        <ApproveConfirmButtons\r\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\r\n          isApproving={isApproving}\r\n          isConfirmDisabled={\r\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\r\n          }\r\n          isConfirming={isConfirming}\r\n          onApprove={handleApprove}\r\n          onConfirm={handleConfirm}\r\n        />\r\n        <LinkExternal\r\n          href=\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=BNB&amp;outputCurrency=0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\r\n          style={{ margin: '16px auto 0' }}\r\n        >\r\n          {`Get ${currency}`}\r\n        </LinkExternal>\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ContributeModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { UserInfo } from 'views/Ifos/hooks/useGetWalletIfoData'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PercentageOfTotalProps {\r\n  userAmount: UserInfo['amount']\r\n  raisingAmount: BigNumber\r\n}\r\n\r\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, raisingAmount }) => {\r\n  const TranslateString = useI18n()\r\n  const percentOfUserContribution = userAmount.div(raisingAmount).times(100).toNumber()\r\n  const percentofUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 2 })\r\n\r\n  return (\r\n    <Text fontSize=\"14px\" color=\"textSubtle\">\r\n      {TranslateString(999, `${percentofUserDisplay}% of total`, { num: percentofUserDisplay })}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default PercentageOfTotal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { Box, Button, Flex, Text, useModal } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Ifo } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useToast } from 'state/hooks'\r\nimport { UserInfo } from '../../hooks/useGetWalletIfoData'\r\nimport { PublicIfoState } from '../../hooks/useGetPublicIfoData'\r\nimport ContributeModal from './ContributeModal'\r\nimport PercentageOfTotal from './PercentageOfTotal'\r\n\r\ninterface ContributeProps {\r\n  ifo: Ifo\r\n  contract: Contract\r\n  userInfo: UserInfo\r\n  isPendingTx: boolean\r\n  publicIfoData: PublicIfoState\r\n  addUserContributedAmount: (amount: BigNumber) => void\r\n}\r\nconst Contribute: React.FC<ContributeProps> = ({\r\n  ifo,\r\n  contract,\r\n  userInfo,\r\n  isPendingTx,\r\n  publicIfoData,\r\n  addUserContributedAmount,\r\n}) => {\r\n  const { currency, currencyAddress } = ifo\r\n  const { raisingAmount } = publicIfoData\r\n  const TranslateString = useI18n()\r\n  const contributedBalance = getBalanceNumber(userInfo.amount)\r\n  const { toastSuccess } = useToast()\r\n\r\n  const handleContributeSuccess = (amount: BigNumber) => {\r\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} WBNB to this IFO!`)\r\n    addUserContributedAmount(amount)\r\n  }\r\n\r\n  const [onPresentContributeModal] = useModal(\r\n    <ContributeModal\r\n      currency={currency}\r\n      contract={contract}\r\n      currencyAddress={currencyAddress}\r\n      onSuccess={handleContributeSuccess}\r\n    />,\r\n    false,\r\n  )\r\n\r\n  return (\r\n    <Box>\r\n      <Flex mb=\"4px\">\r\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n          WBNB\r\n        </Text>\r\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n          Committed\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <Box style={{ flex: 1 }} pr=\"8px\">\r\n          <Text bold fontSize=\"20px\">\r\n            {contributedBalance.toFixed(4)}\r\n          </Text>\r\n        </Box>\r\n        <Button onClick={onPresentContributeModal} disabled={isPendingTx}>\r\n          {TranslateString(999, 'Contribute')}\r\n        </Button>\r\n      </Flex>\r\n      <PercentageOfTotal userAmount={userInfo.amount} raisingAmount={raisingAmount} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Contribute\r\n","import React from 'react'\r\nimport { Box, BoxProps, Text } from '@pancakeswap-libs/uikit'\r\n\r\ntype MetaLabel = BoxProps\r\n\r\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\r\n  return (\r\n    <Box minHeight=\"18px\" {...props}>\r\n      <Text color=\"textSubtle\" fontSize=\"12px\">\r\n        {children}\r\n      </Text>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default MetaLabel\r\n","import React from 'react'\r\nimport { useGetApiPrice } from 'state/hooks'\r\nimport MetaLabel from './MetaLabel'\r\n\r\ninterface BalanceInUsdProps {\r\n  token: string\r\n  balance: number\r\n}\r\n\r\nconst BalanceInUsd: React.FC<BalanceInUsdProps> = ({ token, balance }) => {\r\n  const priceInUsd = useGetApiPrice(token)\r\n  const hasBalance = !!priceInUsd && balance > 0\r\n  const total = priceInUsd * balance\r\n\r\n  return (\r\n    <MetaLabel>\r\n      {hasBalance && `~$${total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\r\n    </MetaLabel>\r\n  )\r\n}\r\n\r\nexport default BalanceInUsd\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { AutoRenewIcon, Box, Button, Flex, Text } from '@pancakeswap-libs/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Ifo } from 'config/constants/types'\r\nimport { UserInfo, WalletIfoState } from '../../hooks/useGetWalletIfoData'\r\nimport BalanceInUsd from './BalanceInUsd'\r\nimport MetaLabel from './MetaLabel'\r\n\r\ninterface ClaimProps {\r\n  ifo: Ifo\r\n  contract: Contract\r\n  userInfo: UserInfo\r\n  isPendingTx: WalletIfoState['isPendingTx']\r\n  setPendingTx: (status: boolean) => void\r\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\r\n  refundingAmount: WalletIfoState['refundingAmount']\r\n  setIsClaimed: () => void\r\n}\r\n\r\nconst AmountGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 8px;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst DISPLAY_DECIMALS = 4\r\n\r\nconst Claim: React.FC<ClaimProps> = ({\r\n  ifo,\r\n  contract,\r\n  userInfo,\r\n  isPendingTx,\r\n  setPendingTx,\r\n  offeringTokenBalance,\r\n  refundingAmount,\r\n  setIsClaimed,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const didContribute = userInfo.amount.gt(0)\r\n  const canClaim = !userInfo.claimed && offeringTokenBalance.gt(0)\r\n  const contributedBalance = getBalanceNumber(userInfo.amount)\r\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)\r\n  const { tokenSymbol, tokenDecimals } = ifo\r\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\r\n  const { toastError, toastSuccess } = useToast()\r\n  const hasParticipated = offeringTokenBalance.gt(0)\r\n\r\n  const handleClaim = async () => {\r\n    try {\r\n      setPendingTx(true)\r\n      await contract.methods.harvest().send({ from: account })\r\n      setIsClaimed()\r\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\r\n    } catch (error) {\r\n      toastError('Error', error?.message)\r\n      console.error(error)\r\n    } finally {\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AmountGrid>\r\n        <Box>\r\n          <Flex mb=\"4px\">\r\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n              BNB\r\n            </Text>\r\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n              Committed\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\r\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\r\n          </Text>\r\n          <MetaLabel>\r\n            {hasParticipated &&\r\n              canClaim &&\r\n              TranslateString(999, `${refundedBalance} to reclaim`, { num: refundedBalance })}\r\n            {hasParticipated &&\r\n              !canClaim &&\r\n              TranslateString(999, `${refundedBalance} reclaimed`, { num: refundedBalance })}\r\n          </MetaLabel>\r\n        </Box>\r\n        <Box>\r\n          <Flex mb=\"4px\">\r\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\r\n              {tokenSymbol}\r\n            </Text>\r\n            {!canClaim && hasParticipated ? (\r\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n                Claimed\r\n              </Text>\r\n            ) : (\r\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\r\n                To Claim\r\n              </Text>\r\n            )}\r\n          </Flex>\r\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\r\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\r\n          </Text>\r\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\r\n        </Box>\r\n      </AmountGrid>\r\n      {didContribute ? (\r\n        <Button\r\n          onClick={handleClaim}\r\n          disabled={isPendingTx || !canClaim}\r\n          width=\"100%\"\r\n          mb=\"24px\"\r\n          isLoading={isPendingTx}\r\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        >\r\n          {canClaim ? TranslateString(999, 'Claim') : TranslateString(999, 'Claimed')}\r\n        </Button>\r\n      ) : (\r\n        <Button disabled width=\"100%\" mb=\"24px\">\r\n          {TranslateString(999, 'Nothing to Claim')}\r\n        </Button>\r\n      )}\r\n      <Text mt=\"4px\">{TranslateString(999, \"You'll be refunded any excess tokens when you claim\")}</Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Claim\r\n","import React from 'react'\r\nimport { Box, Skeleton } from '@pancakeswap-libs/uikit'\r\n\r\nconst ActiveSkeleton = () => (\r\n  <Box>\r\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\r\n    <Skeleton height=\"48px\" mb=\"2px\" />\r\n    <Skeleton height=\"19px\" width=\"15%\" />\r\n  </Box>\r\n)\r\n\r\nexport default ActiveSkeleton\r\n","import React from 'react'\r\nimport { Box, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\n\r\nconst InactiveSkeleton = () => (\r\n  <>\r\n    <Flex mb=\"24px\">\r\n      <Box width=\"50%\" height=\"52px\">\r\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\r\n        <Skeleton height=\"30px\" width=\"20%\" />\r\n      </Box>\r\n      <Box width=\"50%\" height=\"52px\">\r\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\r\n        <Skeleton height=\"30px\" width=\"20%\" />\r\n      </Box>\r\n    </Flex>\r\n    <Skeleton height=\"48px\" mb=\"24px\" />\r\n    <Skeleton height=\"48px\" mt=\"4px\" />\r\n  </>\r\n)\r\n\r\nexport default InactiveSkeleton\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Ifo } from 'config/constants/types'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { PublicIfoState } from 'views/Ifos/hooks/useGetPublicIfoData'\r\nimport useGetWalletIfoData from '../../hooks/useGetWalletIfoData'\r\nimport Contribute from './Contribute'\r\nimport Claim from './Claim'\r\nimport ActiveSkeleton from './ActiveSkeleton'\r\nimport InactiveSkeleton from './InactiveSkeleton'\r\n\r\nexport interface Props {\r\n  ifo: Ifo\r\n  publicIfoData: PublicIfoState\r\n}\r\n\r\nconst IfoCardActions: React.FC<Props> = ({ ifo, publicIfoData }) => {\r\n  const {\r\n    isPendingTx,\r\n    offeringTokenBalance,\r\n    refundingAmount,\r\n    userInfo,\r\n    contract,\r\n    setPendingTx,\r\n    addUserContributedAmount,\r\n    setIsClaimed,\r\n  } = useGetWalletIfoData(ifo)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return <UnlockButton />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {ifo.isActive && publicIfoData.status === 'idle' && <ActiveSkeleton />}\r\n      {!ifo.isActive && publicIfoData.status === 'idle' && <InactiveSkeleton />}\r\n      {publicIfoData.status === 'live' && (\r\n        <Contribute\r\n          ifo={ifo}\r\n          contract={contract}\r\n          userInfo={userInfo}\r\n          isPendingTx={isPendingTx}\r\n          publicIfoData={publicIfoData}\r\n          addUserContributedAmount={addUserContributedAmount}\r\n        />\r\n      )}\r\n      {publicIfoData.status === 'finished' && (\r\n        <Claim\r\n          ifo={ifo}\r\n          contract={contract}\r\n          userInfo={userInfo}\r\n          isPendingTx={isPendingTx}\r\n          setPendingTx={setPendingTx}\r\n          offeringTokenBalance={offeringTokenBalance}\r\n          refundingAmount={refundingAmount}\r\n          setIsClaimed={setIsClaimed}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default IfoCardActions\r\n","import React from 'react'\r\nimport { Box, Progress } from '@pancakeswap-libs/uikit'\r\n\r\ninterface IfoCardProgressProps {\r\n  progress: number\r\n}\r\n\r\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\r\n  return (\r\n    <Box mb=\"16px\">\r\n      <Progress primaryStep={progress} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default IfoCardProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link } from '@pancakeswap-libs/uikit'\r\nimport { IfoStatus } from 'config/constants/types'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nexport interface IfoCardTimeProps {\r\n  status: IfoStatus\r\n  secondsUntilStart: number\r\n  secondsUntilEnd: number\r\n  block: number\r\n}\r\n\r\nconst Details = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 24px;\r\n  justify-content: center;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Countdown = styled.div`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`\r\n\r\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ status, secondsUntilStart, secondsUntilEnd, block }) => {\r\n  const TranslateString = useI18n()\r\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\r\n  const timeUntil = getTimePeriods(countdownToUse)\r\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\r\n\r\n  if (status === 'idle') {\r\n    return (\r\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\r\n        {TranslateString(656, 'Loading...')}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Details>\r\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\r\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\r\n        (blocks)\r\n      </Link>\r\n    </Details>\r\n  )\r\n}\r\n\r\nexport default IfoCardTime\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\r\nimport { Ifo, IfoStatus } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport useGetPublicIfoData from '../../hooks/useGetPublicIfoData'\r\nimport IfoCardHeader from './IfoCardHeader'\r\nimport IfoCardDetails from './IfoCardDetails'\r\nimport IfoCardActions from './IfoCardActions'\r\nimport IfoCardProgress from './IfoCardProgress'\r\nimport IfoCardTime from './IfoCardTime'\r\n\r\nexport interface IfoCardProps {\r\n  ifo: Ifo\r\n}\r\n\r\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\r\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.jpg')`};\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  padding-top: 112px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 437px;\r\n  width: 100%;\r\n  margin-bottom: 25px;\r\n`\r\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\r\n  if (status === 'coming_soon') {\r\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\r\n  }\r\n\r\n  if (status === 'live') {\r\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\r\n  const { id, name, subTitle } = ifo\r\n  const publicIfoData = useGetPublicIfoData(ifo)\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\r\n\r\n  return (\r\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\r\n      <CardBody>\r\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\r\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\r\n          <>\r\n            <IfoCardProgress progress={publicIfoData.progress} />\r\n            <IfoCardTime\r\n              status={publicIfoData.status}\r\n              secondsUntilStart={publicIfoData.secondsUntilStart}\r\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\r\n              block={publicIfoData.startBlockNum}\r\n            />\r\n          </>\r\n        )}\r\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton width=\"100%\" />}\r\n      </CardBody>\r\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\r\n    </StyledIfoCard>\r\n  )\r\n}\r\n\r\nexport default IfoCard\r\n","import styled from 'styled-components'\r\n\r\ninterface IfoCardWrapperProps {\r\n  isSingle?: boolean\r\n}\r\n\r\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\r\n  align-items: start;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\r\n  }\r\n`\r\n\r\nIfoCardWrapper.defaultProps = {\r\n  isSingle: false,\r\n}\r\n\r\nexport default IfoCardWrapper\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\r\nimport { ifosConfig } from 'config/constants'\r\nimport useI18n from 'hooks/useI18n'\r\nimport IfoCard from './components/IfoCard'\r\nimport Title from './components/Title'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst LaunchIfoCallout = styled(BaseLayout)`\r\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 32px;\r\n  margin: 0 auto;\r\n  padding: 32px 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n\r\n  & > li {\r\n    line-height: 1.4;\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\n/**\r\n * Note: currently there should be only 1 active IFO at a time\r\n */\r\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\r\n\r\nconst Ifo = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <div>\r\n      <IfoCards isSingle>\r\n        <IfoCard ifo={activeIfo} />\r\n      </IfoCards>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Ifo\r\n","import React from 'react'\r\nimport { ifosConfig } from 'config/constants'\r\nimport { Ifo } from 'config/constants/types'\r\nimport IfoCard from './components/IfoCard'\r\nimport IfoCards from './components/IfoCards'\r\n\r\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\r\n\r\nconst PastIfo = () => {\r\n  return (\r\n    <IfoCards>\r\n      {inactiveIfo.map((ifo) => (\r\n        <IfoCard key={ifo.id} ifo={ifo} />\r\n      ))}\r\n    </IfoCards>\r\n  )\r\n}\r\n\r\nexport default PastIfo\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport Container from 'components/layout/Container'\r\nimport IfoTabButtons from './components/IfoTabButtons'\r\nimport Hero from './components/Hero'\r\nimport CurrentIfo from './CurrentIfo'\r\nimport PastIfo from './PastIfo'\r\n\r\nconst Ifos = () => {\r\n  const { path } = useRouteMatch()\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Container>\r\n        <IfoTabButtons />\r\n        <Route exact path={`${path}`}>\r\n          <CurrentIfo />\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          <PastIfo />\r\n        </Route>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Ifos\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronRightIcon, Button as UIKitButton, Flex, AutoRenewIcon, ChevronDownIcon } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ApproveConfirmButtonsProps {\r\n  isApproveDisabled: boolean\r\n  isApproving: boolean\r\n  isConfirming: boolean\r\n  isConfirmDisabled: boolean\r\n  onApprove: () => void\r\n  onConfirm: () => void\r\n}\r\n\r\nconst Button = styled(UIKitButton)`\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    min-width: 160px;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\r\n\r\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\r\n  display: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\r\n\r\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\r\n  isApproveDisabled,\r\n  isApproving,\r\n  isConfirming,\r\n  isConfirmDisabled,\r\n  onApprove,\r\n  onConfirm,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Flex py=\"8px\" flexDirection={['column', null, 'row']} alignItems=\"center\">\r\n      <Button\r\n        disabled={isApproveDisabled}\r\n        onClick={onApprove}\r\n        endIcon={isApproving ? spinnerIcon : undefined}\r\n        isLoading={isApproving}\r\n      >\r\n        {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\r\n      </Button>\r\n      <ChevronRight />\r\n      <ChevronBottom />\r\n      <Button\r\n        onClick={onConfirm}\r\n        disabled={isConfirmDisabled}\r\n        isLoading={isConfirming}\r\n        endIcon={isConfirming ? spinnerIcon : undefined}\r\n      >\r\n        {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ApproveConfirmButtons\r\n","import { useEffect, useReducer, useRef } from 'react'\r\nimport { noop } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useToast } from 'state/hooks'\r\n\r\ntype Web3Payload = Record<string, unknown> | null\r\n\r\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\r\n\r\ntype Action =\r\n  | { type: 'requires_approval' }\r\n  | { type: 'approve_sending' }\r\n  | { type: 'approve_receipt'; payload: Web3Payload }\r\n  | { type: 'approve_error'; payload: Web3Payload }\r\n  | { type: 'confirm_sending' }\r\n  | { type: 'confirm_receipt'; payload: Web3Payload }\r\n  | { type: 'confirm_error'; payload: Web3Payload }\r\n\r\ninterface State {\r\n  approvalState: LoadingState\r\n  approvalReceipt: Web3Payload\r\n  approvalError: Web3Payload\r\n  confirmState: LoadingState\r\n  confirmReceipt: Web3Payload\r\n  confirmError: Web3Payload\r\n}\r\n\r\nconst initialState: State = {\r\n  approvalState: 'idle',\r\n  approvalReceipt: null,\r\n  approvalError: null,\r\n  confirmState: 'idle',\r\n  confirmReceipt: null,\r\n  confirmError: null,\r\n}\r\n\r\nconst reducer = (state: State, actions: Action): State => {\r\n  switch (actions.type) {\r\n    case 'requires_approval':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n      }\r\n    case 'approve_sending':\r\n      return {\r\n        ...state,\r\n        approvalState: 'loading',\r\n      }\r\n    case 'approve_receipt':\r\n      return {\r\n        ...state,\r\n        approvalState: 'success',\r\n        approvalReceipt: actions.payload,\r\n      }\r\n    case 'approve_error':\r\n      return {\r\n        ...state,\r\n        approvalState: 'fail',\r\n        approvalError: actions.payload,\r\n      }\r\n    case 'confirm_sending':\r\n      return {\r\n        ...state,\r\n        confirmState: 'loading',\r\n      }\r\n    case 'confirm_receipt':\r\n      return {\r\n        ...state,\r\n        confirmState: 'success',\r\n        confirmReceipt: actions.payload,\r\n      }\r\n    case 'confirm_error':\r\n      return {\r\n        ...state,\r\n        confirmState: 'fail',\r\n        confirmError: actions.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\ntype ContractHandler = () => any\r\n\r\ninterface ApproveConfirmTransaction {\r\n  onApprove: ContractHandler\r\n  onConfirm: ContractHandler\r\n  onRequiresApproval?: () => Promise<boolean>\r\n  onSuccess: (state: State) => void\r\n}\r\n\r\nconst useApproveConfirmTransaction = ({\r\n  onApprove,\r\n  onConfirm,\r\n  onRequiresApproval,\r\n  onSuccess = noop,\r\n}: ApproveConfirmTransaction) => {\r\n  const { account } = useWeb3React()\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const handlePreApprove = useRef(onRequiresApproval)\r\n  const { toastError } = useToast()\r\n\r\n  // Check if approval is necessary, re-check if account changes\r\n  useEffect(() => {\r\n    if (account && handlePreApprove.current) {\r\n      handlePreApprove.current().then((result) => {\r\n        if (result) {\r\n          dispatch({ type: 'requires_approval' })\r\n        }\r\n      })\r\n    }\r\n  }, [account, handlePreApprove, dispatch])\r\n\r\n  return {\r\n    isApproving: state.approvalState === 'loading',\r\n    isApproved: state.approvalState === 'success',\r\n    isConfirming: state.confirmState === 'loading',\r\n    isConfirmed: state.confirmState === 'success',\r\n    approvalReceipt: state.approvalReceipt,\r\n    approvalError: state.approvalError,\r\n    confirmReceipt: state.confirmReceipt,\r\n    confirmError: state.confirmError,\r\n    handleApprove: () => {\r\n      onApprove()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'approve_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'approve_receipt', payload })\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'approve_error', payload: error })\r\n          console.error('An error occurred approving transaction:', error)\r\n          toastError('An error occurred approving transaction')\r\n        })\r\n    },\r\n    handleConfirm: () => {\r\n      onConfirm()\r\n        .on('sending', () => {\r\n          dispatch({ type: 'confirm_sending' })\r\n        })\r\n        .on('receipt', (payload: Web3Payload) => {\r\n          dispatch({ type: 'confirm_receipt', payload })\r\n          onSuccess(state)\r\n        })\r\n        .on('error', (error: Web3Payload) => {\r\n          dispatch({ type: 'confirm_error', payload: error })\r\n          console.error('An error occurred confirming transaction:', error)\r\n          toastError('An error occurred confirming transaction')\r\n        })\r\n    },\r\n  }\r\n}\r\n\r\nexport default useApproveConfirmTransaction\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport { useCake } from './useContract'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n"],"sourceRoot":""}