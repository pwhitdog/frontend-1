{"version":3,"sources":["hooks/useWindowDimensions.ts","views/Trade/IFrame.tsx","views/Graph/components/FullPage.tsx","views/Graph/Graph.tsx"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","IFrame","props","url","title","useRef","useContext","ThemeContext","isDark","LanguageContext","selectedLanguage","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","src","FullPage","styled","div","Graph"],"mappings":"gMAEA,SAASA,IACP,MAAmDC,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,a,+BC0BdC,EAnBuB,SAACC,GACrC,IAAQC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MAILL,GAHUM,iBAAO,MACNC,qBAAWC,KAAtBC,OACqBF,qBAAWG,KAAhCC,iBDJK,WACb,MAAgDC,mBAAShB,KAAzD,mBAAOiB,EAAP,KAAyBC,EAAzB,KAWA,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBlB,KAItB,OADAC,OAAOoB,iBAAiB,SAAUD,GAC3B,kBAAMnB,OAAOqB,oBAAoB,SAAUF,MACjD,IAEIH,ECPYM,GAAXnB,QASR,OACE,wBAAQoB,IAAKhB,EAAKC,MAAOA,EAAOL,OAAQA,EAAQF,MAAM,U,QCf3CuB,E,KAREC,EAAOC,IAAV,+HCWCC,EATS,kBACtB,cAAC,EAAD,UACE,cAAC,EAAD,CACEnB,MAAM,QACND,IAAI","file":"static/js/18.87dd022c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import React, { useContext, useRef } from 'react'\nimport useWindowDimensions from 'hooks/useWindowDimensions'\nimport { ThemeContext } from '../../contexts/ThemeContext'\nimport { LanguageContext } from '../../contexts/Localisation/languageContext'\n\ninterface IFrameProps {\n  url: string\n  title: string\n}\n\nconst IFrame: React.FC<IFrameProps> = (props) => {\n  const { url, title } = props\n  const iframeRef = useRef(null)\n  const { isDark } = useContext(ThemeContext)\n  const { selectedLanguage } = useContext(LanguageContext)\n  const { height } = useWindowDimensions()\n  const sendSettings = () => {\n    const payload = {\n      isDark,\n      selectedLanguage,\n    }\n    iframeRef.current.sendMessage(payload)\n  }\n\n  return (\n    <iframe src={url} title={title} height={height} width=\"100%\" />\n  )\n}\n\nexport default IFrame\n","import styled from 'styled-components'\n\nconst FullPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  height: 100%;\n  flex: 1;\n`\n\nexport default FullPage\n","import React from 'react'\nimport IFrame from 'views/Trade'\nimport FullPage from './components/FullPage'\n\nconst Graph: React.FC = () => (\n  <FullPage>\n    <IFrame\n      title=\"graph\"\n      url=\"https://goswappcharts.web.app/?isbsc=true&tokenId=0xD9A88f9b7101046786490bAF433f0f6aB3D753E2\"\n    />\n  </FullPage>\n)\n\nexport default Graph\n"],"sourceRoot":""}