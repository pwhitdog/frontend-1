{"version":3,"sources":["views/Collectibles/components/InfoRow.tsx","views/Collectibles/components/TransferNftModal.tsx","views/Collectibles/components/ClaimNftModal.tsx","views/Collectibles/components/NftCard/Preview.tsx","views/Collectibles/components/NftCard/index.tsx","views/Collectibles/components/NftGrid.tsx","views/Collectibles/components/NftList.tsx","views/Collectibles/index.tsx","hooks/useContract.ts","hooks/useWeb3.ts","../node_modules/lodash/orderBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","hooks/useGetWalletNfts.ts"],"names":["InfoRow","styled","div","Value","Text","ModalContent","Actions","Label","label","theme","colors","text","TransferNftModal","nft","tokenIds","onSuccess","onDismiss","useState","isLoading","setIsLoading","value","setValue","error","setError","TranslateString","useI18n","account","useWeb3React","pancakeRabbitsContract","usePancakeRabbits","toastSuccess","useToast","handleConfirm","a","Web3","utils","isAddress","methods","transferFrom","send","from","on","console","title","color","mb","name","htmlFor","id","type","placeholder","onChange","evt","inputValue","target","isWarning","disabled","width","variant","onClick","ClaimNftModal","isConfirming","setIsConfirming","toastError","bunnySpecialContract","useBunnySpecialContract","mintNFT","bunnyId","alignItems","justifyContent","bold","Container","borderColor","StyledImage","img","StyledVideo","video","Preview","isOwned","images","previewImageSrc","lg","videoComponent","autoPlay","controls","loop","muted","poster","src","webm","mp4","href","ipfs","rel","previewImage","alt","Header","DetailsButton","Button","attrs","InfoBlock","NftCard","canClaim","isOpen","setIsOpen","profile","useProfile","description","walletOwnsNft","length","Icon","ChevronUpIcon","ChevronDownIcon","handleClick","useModal","onPresentTransferModal","onPresentClaimModal","isActive","outline","mt","p","endIcon","as","style","textAlign","NftGrid","mediaQueries","sm","md","getBunnySpecialContract","NftList","claimableNfts","setClaimableNfts","useGetWalletNfts","nftTokenIds","nfts","refresh","fetchClaimableStatuses","useCallback","walletAddress","makeBatchRequest","map","canClaimSingle","call","claimStatuses","reduce","accum","claimStatus","index","handleSuccess","useEffect","orderBy","StyledHero","textSubtle","Collectibles","Page","size","useIfoContract","address","web3","useWeb3","useMemo","getIfoContract","useERC20","getBep20Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","getPancakeRabbitContract","getProfileContract","useLottery","getLotteryContract","useLotteryTicket","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useClaimRefundContract","getClaimRefundContract","library","refEth","useRef","getWeb3NoAccount","setweb3","current","baseOrderBy","require","isArray","module","exports","collection","iteratees","orders","guard","undefined","arrayMap","baseGet","baseIteratee","baseMap","baseSortBy","baseUnary","compareMultiple","identity","iteratee","result","key","object","other","baseEach","isArrayLike","Array","array","comparer","sort","compareAscending","objCriteria","criteria","othCriteria","ordersLength","isSymbol","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","initialState","lastUpdated","Date","now","reducer","state","action","data","timestamp","useReducer","dispatch","balanceOf","getTokenIdAndBunnyId","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","tokenUri","Number","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","association","fetchNfts"],"mappings":"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","file":"static/js/14.4f4b56b5.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst InfoRow = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default InfoRow\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Button, Input, Modal, Text } from '@pancakeswap-libs/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { Nft } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePancakeRabbits } from 'hooks/useContract'\r\nimport InfoRow from './InfoRow'\r\n\r\ninterface TransferNftModalProps {\r\n  nft: Nft\r\n  tokenIds: number[]\r\n  onSuccess: () => any\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst Value = styled(Text)`\r\n  font-weight: 600;\r\n`\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst Label = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  margin-top: 24px;\r\n`\r\n\r\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const pancakeRabbitsContract = usePancakeRabbits()\r\n  const { toastSuccess } = useToast()\r\n\r\n  const handleConfirm = async () => {\r\n    try {\r\n      const isValidAddress = Web3.utils.isAddress(value)\r\n\r\n      if (!isValidAddress) {\r\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\r\n      } else {\r\n        await pancakeRabbitsContract.methods\r\n          .transferFrom(account, value, tokenIds[0])\r\n          .send({ from: account })\r\n          .on('sending', () => {\r\n            setIsLoading(true)\r\n          })\r\n          .on('receipt', () => {\r\n            onDismiss()\r\n            onSuccess()\r\n            toastSuccess('NFT successfully transferred!')\r\n          })\r\n          .on('error', () => {\r\n            console.error(error)\r\n            setError('Unable to transfer NFT')\r\n            setIsLoading(false)\r\n          })\r\n      }\r\n    } catch (err) {\r\n      console.error('Unable to transfer NFT:', err)\r\n    }\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value: inputValue } = evt.target\r\n    setValue(inputValue)\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        {error && (\r\n          <Text color=\"failure\" mb=\"8px\">\r\n            {error}\r\n          </Text>\r\n        )}\r\n        <InfoRow>\r\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\r\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\r\n        </InfoRow>\r\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\r\n        <Input\r\n          id=\"transferAddress\"\r\n          name=\"address\"\r\n          type=\"text\"\r\n          placeholder={TranslateString(999, 'Paste address')}\r\n          value={value}\r\n          onChange={handleChange}\r\n          isWarning={error}\r\n          disabled={isLoading}\r\n        />\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button width=\"100%\" onClick={handleConfirm} disabled={!account || isLoading || !value}>\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransferNftModal\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useBunnySpecialContract } from 'hooks/useContract'\r\nimport { useToast } from 'state/hooks'\r\nimport { Button, InjectedModalProps, Modal, Text, Flex } from '@pancakeswap-libs/uikit'\r\nimport { Nft } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface ClaimNftModalProps extends InjectedModalProps {\r\n  nft: Nft\r\n  onSuccess: () => void\r\n}\r\n\r\nconst ModalContent = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 8px;\r\n`\r\n\r\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onDismiss }) => {\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const bunnySpecialContract = useBunnySpecialContract()\r\n\r\n  const handleConfirm = async () => {\r\n    bunnySpecialContract.methods\r\n      .mintNFT(nft.bunnyId)\r\n      .send({ from: account })\r\n      .on('sending', () => {\r\n        setIsConfirming(true)\r\n      })\r\n      .on('receipt', () => {\r\n        toastSuccess('Successfully claimed!')\r\n        onDismiss()\r\n        onSuccess()\r\n      })\r\n      .on('error', (error) => {\r\n        console.error('Unable to claim NFT', error)\r\n        toastError('Error', 'Unable to claim NFT, please try again.')\r\n        setIsConfirming(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Claim Collectible')} onDismiss={onDismiss}>\r\n      <ModalContent>\r\n        <Flex alignItems=\"center\" mb=\"8px\" justifyContent=\"space-between\">\r\n          <Text>{TranslateString(626, 'You will receive')}:</Text>\r\n          <Text bold>{`1x \"${nft.name}\" Collectible`}</Text>\r\n        </Flex>\r\n      </ModalContent>\r\n      <Actions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button width=\"100%\" onClick={handleConfirm} disabled={!account || isConfirming}>\r\n          {TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimNftModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Nft } from 'config/constants/types'\r\n\r\ninterface PreviewProps {\r\n  nft: Nft\r\n  isOwned?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  position: relative;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: 100%;\r\n`\r\n\r\nconst StyledImage = styled.img`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  transition: opacity 1s linear;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  border-radius: 32px 32px 0 0;\r\n`\r\n\r\nconst StyledVideo = styled.video`\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst Preview: React.FC<PreviewProps> = ({ nft, isOwned = false }) => {\r\n  const { images, name, video } = nft\r\n  const previewImageSrc = `/images/nfts/${images.lg}`\r\n\r\n  if (video) {\r\n    const videoComponent = (\r\n      <StyledVideo autoPlay controls={false} loop muted poster={previewImageSrc}>\r\n        <source src={video.webm} type=\"video/webm\" />\r\n        <source src={video.mp4} type=\"video/mp4\" />\r\n      </StyledVideo>\r\n    )\r\n\r\n    return isOwned ? (\r\n      <a href={images.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\r\n        {videoComponent}\r\n      </a>\r\n    ) : (\r\n      videoComponent\r\n    )\r\n  }\r\n\r\n  const previewImage = <StyledImage src={previewImageSrc} alt={name} />\r\n\r\n  return (\r\n    <Container>\r\n      {isOwned ? (\r\n        <a href={images.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\r\n          {previewImage}\r\n        </a>\r\n      ) : (\r\n        previewImage\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Preview\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Heading,\r\n  Tag,\r\n  Button,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Text,\r\n  CardFooter,\r\n  useModal,\r\n} from '@pancakeswap-libs/uikit'\r\nimport { useProfile } from 'state/hooks'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Nft } from 'config/constants/types'\r\nimport InfoRow from '../InfoRow'\r\nimport TransferNftModal from '../TransferNftModal'\r\nimport ClaimNftModal from '../ClaimNftModal'\r\nimport Preview from './Preview'\r\n\r\ninterface NftCardProps {\r\n  nft: Nft\r\n  canClaim?: boolean\r\n  tokenIds?: number[]\r\n  onSuccess: () => void\r\n}\r\n\r\nconst Header = styled(InfoRow)`\r\n  min-height: 28px;\r\n`\r\n\r\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\r\n  height: auto;\r\n  padding: 16px 24px;\r\n\r\n  &:hover:not(:disabled):not(:active) {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:focus:not(:active) {\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n  padding: 24px;\r\n`\r\n\r\nconst NftCard: React.FC<NftCardProps> = ({ nft, onSuccess, canClaim = false, tokenIds = [] }) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { profile } = useProfile()\r\n  const { bunnyId, name, description } = nft\r\n  const walletOwnsNft = tokenIds.length > 0\r\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\r\n\r\n  const handleClick = async () => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  const [onPresentTransferModal] = useModal(<TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={onSuccess} />)\r\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={onSuccess} />)\r\n\r\n  return (\r\n    <Card isActive={walletOwnsNft || canClaim}>\r\n      <Preview nft={nft} isOwned={walletOwnsNft} />\r\n      <CardBody>\r\n        <Header>\r\n          <Heading>{name}</Heading>\r\n          {walletOwnsNft && (\r\n            <Tag outline variant=\"secondary\">\r\n              {TranslateString(999, 'In Wallet')}\r\n            </Tag>\r\n          )}\r\n          {profile?.nft?.bunnyId === bunnyId && (\r\n            <Tag outline variant=\"success\">\r\n              {TranslateString(999, 'Profile Pic')}\r\n            </Tag>\r\n          )}\r\n        </Header>\r\n        {canClaim && (\r\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\r\n            {TranslateString(999, 'Claim this NFT')}\r\n          </Button>\r\n        )}\r\n        {walletOwnsNft && (\r\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\r\n            {TranslateString(999, 'Transfer')}\r\n          </Button>\r\n        )}\r\n      </CardBody>\r\n      <CardFooter p=\"0\">\r\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\r\n          {TranslateString(658, 'Details')}\r\n        </DetailsButton>\r\n        {isOpen && (\r\n          <InfoBlock>\r\n            <Text as=\"p\" color=\"textSubtle\" style={{ textAlign: 'center' }}>\r\n              {description}\r\n            </Text>\r\n          </InfoBlock>\r\n        )}\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default NftCard\r\n","import styled from 'styled-components'\r\n\r\nconst NftGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  padding-bottom: 24px;\r\n  padding-top: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`\r\n\r\nexport default NftGrid\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport orderBy from 'lodash/orderBy'\r\nimport nfts from 'config/constants/nfts'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\r\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { useToast } from 'state/hooks'\r\nimport NftCard from './NftCard'\r\nimport NftGrid from './NftGrid'\r\n\r\ntype State = {\r\n  [key: string]: boolean\r\n}\r\n\r\nconst bunnySpecialContract = getBunnySpecialContract()\r\n\r\nconst NftList = () => {\r\n  const [claimableNfts, setClaimableNfts] = useState<State>({})\r\n  const { nfts: nftTokenIds, refresh } = useGetWalletNfts()\r\n  const { account } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const fetchClaimableStatuses = useCallback(\r\n    async (walletAddress: string) => {\r\n      try {\r\n        const claimStatuses = (await makeBatchRequest(\r\n          nfts.map((nft) => {\r\n            return bunnySpecialContract.methods.canClaimSingle(walletAddress, nft.bunnyId).call\r\n          }),\r\n        )) as boolean[]\r\n\r\n        setClaimableNfts(\r\n          claimStatuses.reduce((accum, claimStatus, index) => {\r\n            return {\r\n              ...accum,\r\n              [nfts[index].bunnyId]: claimStatus,\r\n            }\r\n          }, {}),\r\n        )\r\n      } catch (error) {\r\n        console.error(error)\r\n        toastError('Error checking NFT claimable status')\r\n      }\r\n    },\r\n    [setClaimableNfts, toastError],\r\n  )\r\n\r\n  const handleSuccess = () => {\r\n    refresh()\r\n    fetchClaimableStatuses(account)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      fetchClaimableStatuses(account)\r\n    }\r\n  }, [account, fetchClaimableStatuses])\r\n\r\n  return (\r\n    <NftGrid>\r\n      {orderBy(nfts, 'sortOrder').map((nft) => {\r\n        const tokenIds = nftTokenIds[nft.bunnyId] ? nftTokenIds[nft.bunnyId].tokenIds : []\r\n\r\n        return (\r\n          <div key={nft.name}>\r\n            <NftCard nft={nft} canClaim={claimableNfts[nft.bunnyId]} tokenIds={tokenIds} onSuccess={handleSuccess} />\r\n          </div>\r\n        )\r\n      })}\r\n    </NftGrid>\r\n  )\r\n}\r\n\r\nexport default NftList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Page from 'components/layout/Page'\r\nimport NftList from './components/NftList'\r\n\r\nconst StyledHero = styled.div`\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\r\n  margin-bottom: 24px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst Collectibles = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Page>\r\n      <StyledHero>\r\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\">\r\n          {TranslateString(999, 'Pancake Collectibles')}\r\n        </Heading>\r\n      </StyledHero>\r\n      <NftList />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Collectibles\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n","import { useWeb3React } from '@web3-react/core'\r\nimport { useEffect, useReducer } from 'react'\r\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\n\r\nconst pancakeRabbitsContract = getPancakeRabbitContract()\r\n\r\nexport type NftMap = {\r\n  [key: number]: {\r\n    tokenUri: string\r\n    tokenIds: number[]\r\n  }\r\n}\r\n\r\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\r\n\r\ntype State = {\r\n  isLoading: boolean\r\n  nfts: NftMap\r\n  lastUpdated: number\r\n}\r\n\r\nconst initialState: State = {\r\n  isLoading: true,\r\n  nfts: {},\r\n  lastUpdated: Date.now(),\r\n}\r\n\r\nconst reducer = (state: State, action: Action) => {\r\n  switch (action.type) {\r\n    case 'set_nfts':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n        nfts: action.data,\r\n      }\r\n    case 'refresh':\r\n      return {\r\n        ...initialState,\r\n        lastUpdated: action.timestamp,\r\n      }\r\n    case 'reset':\r\n      return {\r\n        ...initialState,\r\n        isLoading: false,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useGetWalletNfts = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated } = state\r\n\r\n  useEffect(() => {\r\n    const fetchNfts = async () => {\r\n      try {\r\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\r\n\r\n        if (balanceOf > 0) {\r\n          let nfts: NftMap = {}\r\n\r\n          const getTokenIdAndBunnyId = async (index: number) => {\r\n            try {\r\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\r\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\r\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\r\n\r\n              return [Number(bunnyId), Number(tokenId), tokenUri]\r\n            } catch (error) {\r\n              return null\r\n            }\r\n          }\r\n\r\n          const tokenIdPromises = []\r\n\r\n          for (let i = 0; i < balanceOf; i++) {\r\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\r\n          }\r\n\r\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\r\n\r\n          nfts = tokenIdsOwnedByWallet.reduce((accum, association) => {\r\n            if (!association) {\r\n              return accum\r\n            }\r\n\r\n            const [bunnyId, tokenId, tokenUri] = association\r\n\r\n            return {\r\n              ...accum,\r\n              [bunnyId]: {\r\n                tokenUri,\r\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\r\n              },\r\n            }\r\n          }, {})\r\n\r\n          dispatch({ type: 'set_nfts', data: nfts })\r\n        } else {\r\n          // Reset it in case of wallet change\r\n          dispatch({ type: 'reset' })\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: 'reset' })\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchNfts()\r\n    }\r\n  }, [account, lastUpdated, dispatch])\r\n\r\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\r\n\r\n  return { ...state, refresh }\r\n}\r\n\r\nexport default useGetWalletNfts\r\n"],"sourceRoot":""}