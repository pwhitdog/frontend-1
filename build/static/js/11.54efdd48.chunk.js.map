{"version":3,"sources":["contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx","hooks/useContract.ts","utils/formatBalance.ts","hooks/useWeb3.ts","components/UnlockButton.tsx","utils/callHelpers.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useTokenBalance.ts","hooks/useApprove.ts","utils/getTimePeriods.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useAllowance.ts"],"names":["React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","a","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","account","BigNumber","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","useState","lotteryHasDrawn","setLotteryHasDrawn","useWeb3React","useLottery","useEffect","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","styled","div","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","bold","color","Title","Heading","attrs","as","size","theme","colors","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","fetchBalance","useCallback","useWinningNumbers","winngNumbers","setWinningNumbers","fastRefresh","useRefresh","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","onClick","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","width","disabled","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","Math","floor","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","ModalActions","WarningModal","CardActions","TicketCard","allowance","useLotteryAllowance","cakeBalance","useTokenBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","StyledFarmStakingCard","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","justifyContent","height","fontWeight","ExpandableSectionButton","expanded","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","LayoutWrapper","HowItWorks","Link","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","defaultProps","ExternalLinkWrap","LinkExternal","contractLink","href","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","oneTicketMatches","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider","useIfoContract","useWeb3","getIfoContract","useERC20","getBep20Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","usePancakeRabbits","getPancakeRabbitContract","useProfile","getProfileContract","getLotteryContract","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","balance","decimals","displayBalance","dividedBy","library","refEth","useRef","Web3","setweb3","current","useAuth","login","logout","onPresentConnectModal","useWalletModal","approve","lpContract","masterChefContract","ethers","constants","MaxUint256","stake","pid","deposit","sousStake","sousChefContract","sousStakeBnb","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","_objectWithoutProperties","source","excluded","key","target","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","Spacer","s","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","setBalance","contract","useApprove","dispatch","useDispatch","fetchFarmUserDataAsync","useSousApprove","sousId","updateUserAllowance","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","timeLeft","years","months","days","aria-label","role","setAllowance","fetchAllowance","getLotteryAddress","refreshInterval","useIfoAllowance","tokenContract","spenderAddress","dependency"],"mappings":"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","file":"static/js/11.54efdd48.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { LOTTERY_TICKET_PRICE } from 'config'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIndex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIndex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\r\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"invertedContrast\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(139.73deg,#d4aca466 0%,#d4aca455 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\r\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\r\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(660, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              CAKE\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(1056, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 8160px;\r\n    height: 80px;\r\n    filter: drop-shadow(2px 4px 6px rgba(0,0,0,0.2)) brightness(1.1)\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import { useCallback, useState } from 'react'\r\nimport { useLotteryApprove } from './useApprove'\r\n\r\nexport const useApproval = (onPresentApprove: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove } = useLotteryApprove()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport default useApproval\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, InputProps } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  value: string\r\n  onSelectMax?: () => void\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Flex alignItems=\"center\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\r\n        <StyledTokenAdornmentWrapper>\r\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n          <StyledSpacer />\r\n          <div>\r\n            <Button size=\"sm\" onClick={onSelectMax}>\r\n              {TranslateString(452, 'Max')}\r\n            </Button>\r\n          </div>\r\n        </StyledTokenAdornmentWrapper>\r\n      </Flex>\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\r\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * LOTTERY_TICKET_PRICE\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          width=\"100%\"\r\n          disabled={\r\n            pendingTx ||\r\n            parseInt(val) > Number(maxTickets) ||\r\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\r\n            parseInt(val) < 1\r\n          }\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button width=\"100%\" onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useApproval } from 'hooks/useApproval'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\r\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button width=\"100%\" disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(494, 'Approve CAKE')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          width=\"100%\"\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(870, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(724, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  oneTicketMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(756, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(754, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(752, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem>\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n\r\n  background-image: url(/images/steak-bg-2.png);\r\n  background-repeat: no-repeat;\r\n  background-position: 104% -45px;\r\n  background-size: 70%;\r\n\r\n  transition: 0.3s all;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\r\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\r\n                </Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(722, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} BBQ</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </StyledFarmStakingCard>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n\r\n  const StyledFarmStakingCard = styled(Card)`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    width: 100%;\r\n\r\n    background-image: url(/images/veggie-bg.png);\r\n    background-repeat: no-repeat;\r\n    background-position: 104% -32px;\r\n    background-size: 49%;\r\n\r\n    transition: 0.3s all;\r\n\r\n    ${({ theme }) => theme.mediaQueries.lg} {\r\n      margin: 0;\r\n      max-width: none;\r\n    }\r\n  `\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <StyledFarmStakingCard>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🎉${TranslateString(570, 'Winning Numbers This Round')}🎉`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </StyledFarmStakingCard>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #ab3313 0%, #ae4428 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  width: 93px;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(632, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend BBQ to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match1Ticket: number | null\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n  poolMatch1: number | null\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\r\n              {TranslateString(744, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match1Ticket,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            oneTicketMatches={match1Ticket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(750, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\r\n    return tx\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport { useCake } from './useContract'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n"],"sourceRoot":""}